%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: CLIS_PRIMARY_LOGO.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Josh
%%CreationDate: 12/20/07
%%BoundingBox: 0 0 261 261
%%HiResBoundingBox: 0 0 260.7690 260.7686
%%CropBox: 0 0 260.7690 260.7686
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.1 x420 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 7430 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDE8FFA8FFA8FFFFFFA8FD78FFA8FF597DFFFF52A9A8A8A8%FD72FFA8A8527DA87D52A8A87D7E7D7DFF527DA8FD6DFFA8A87DFF7D52A8%52A87DA87DA852FFA87DA8A87DFD6BFFA87D5352FF7D7DA8FD08FF7D7DFF%A8537DFD6AFF52FFFF7DA8FD0EFF7D52FD69FFA87DFF52FD05FFA7A15152%76C2A0CAA1FFFFFF7DFD69FFA87D7D7DA9A8FFFFCE7B7C517C277DC3BC9A%BC93CAFD04FFA87D7DFD64FF52527DA8FFFFC9A65127F87C7B2759FFA1CA%9A9999FD04FF7D7DFF7DFD62FF7DFF7EA8FFFFCEA027275152C652F87EBC%93C3C39AC3FFFFCAFFA8A87D7DFD62FFA87DA8A8FFC97C27277BA59FC627%274BB5939393C2A1C293BCFFFFA8A8A852A8FD5FFF7DA8A87DFFCFA64BA0%51C67BA09F27F87DCAFFFFCAC9C393FF99CAFFFF7D5352A8FD5FFF7D7D52%FFFFC8279F9FA59E51277CF8276FBBFFFF9A8D9ABCCAFFCAFFFFFFA8A8A8%FD63FFCF7B52C6A0A5C7FD0427F8768DBCC3BC8DBCC2BCFD6BFFC85175C6%277B9F27F85227276FB58C938D93A0FF9393CAFD69FFC827C79F275176F8%279FC7F8768D9393B593FFFFBC8DC3FD68FFCF7551C67BF8272727F89FC6%9F6F938D938C93CAFF9A8DA1FD63FFA8A8FFA8FFCF7651C6512727C72727%9FC6C6BC8DB593B593B5C9C399FD05FF7DFFA8FD5CFFA87D7D52FFFF5276%C651F827C6A5F8A5C6C693B58D938CB58C9AA1BCFFCF52FFFD047DFD5DFF%7DA853FFFFFFCFC976524BC7C6A09FC7C6996F996F756F9A99C84B529F52%A9FF527D52FD5CFFA8FD07FF9AC29A8DFD04938C932727F87CF82751C69E%27F8C74BFFFD04A8FD64FFBC9ACA8DB593B593B59327F827A5A0F87CC6C7%F8529F7DFD68FFCA8CBCFFCA8D9393938D932727F8A6C67B7BC67B27517C%7DFD69FFBC8DFFFFBC8DB5939393A0F8279FC6C77CC67CF87C51FD6AFFCA%9AA0CA93938C938D939E9FF8A59E9FF89F2727517DFD67FF52FFFFCAC9C3%9A9393BC939393C7C6A6C6C67B272727517CFFFF527DA8FD60FFA8A85252%FFFFC9C293C29399FFFF938D9FC69F7CC652F87C2752A8FF7DFF527DFD60%FFA87D7D7DFFA8FFCAC29ACAC9FFFFFFC3C7C6A0F87CF852C652A8FF7D52%A8FF7DFD62FF52A82752CFFFFFFF9A9A9A9393C2C1C6512751517A7CA8FF%7DA8A85252A8FD62FFA8527DFFFFA8FFFFFFC3C99ABCCACD9E2751A5A0A8%FD04FF7DFFFF7EFD63FFA87DFFFF7D52A8FFFFFFCAC9A8FFC87C51A7A1FF%FFFF52527D5252FD67FFA8597D52FFA87DA8FD09FFA8A8FFA852A8A8A8FD%67FFA8A87D7DFF7D537DA8A87DFF7EA87DFFFFA827A8FFA852FD6BFF7E7D%FF527D7DFFA87D7D7DA852FFFFA87D52A8FFA8FD6DFF7D527D59FFFF5252%FFFF52FFFF7D7DA87DFD72FF7DA8FF7D7DFFFF597DA8A8A8FD75FFA8FFA8%A8FFFFA8A9A8FDFCFFFDFCFFFDFCFFFDEDFFA8FD05FFA8A8FD08FFA8FFA8%FD05FFA8FD05FFA8FFFFFFA8FFA8FD09FFA8A8FD4FFF52A87D7DFFFFFD04%7DA8FFA852A8FFFFFF527DFFFFFF7D527D59FFFF847DA852A8FFA8527D52%A8FD06FFFD047DA8FF7D597D7DFD47FF2784FFFF7DFF7D52FFFFA827A8FF%27FD04FF597DFFFFFF527DFFA8FF7D27FFFFA87DFFA827FFFFA8FD05FF7D%52FFFF7D27A87D52FFA8FD46FF7D52FD05FF527DFFFFFF527DFF52A8FFFF%FF527EFFFFFF7D527D7DFF527DFD06FF278452FD06FF527DFFFFFF527DA8%527D7DFD46FFA827FD05FF287DFFFFFF5252FF52FD04FF7D7DFFFFFF527D%A8A8FF527DFFA85252FFA852A87DA8FD05FF277DFFFFFF5259A852A87DFD%47FF5259FFFFA8A8A827FFFFA852FFA852A8FF7DFF527DFFA8FF5952FF7E%FF7D52A8FF527DFFFF27FFA8A8FD05FFA827FFFFA852FF7D53FD49FFA8FD%047DFFFFA852A87DA8FF84527D52A8A852527D7DA852537D59A8FFFD047D%A8FF7D52527D7DFD06FFA852A87DAFFF7D52FD52FFA8FD27FFA8FDFCFFFD%39FFA9A8FFA8FFA8FD07FFA8FFA8FFA8FFFD05A8FD04FFAF7D7D7DFD05FF%FD05A8FD05FFA8FFA8FD08FFA8A8FD04FFA8A8FFFFFFA8A8A8FFFD05A8FF%A8FFA8A8A8FFFFFFA8A87DA8FD04FFA8FD07FFA8FFA8A8FD15FF532727A8%A859F87DFD04FFA852277EA8522052527D277DFFFFFF5952A87D5227A8FF%FFA87DF87D7E7D27A8FD04FF52277DFD05FFA82727FD05FFF852FFFFA852%527D5227527D5252FFA827277DFFFFFF527D7DA852527DFFFFA82727A8FD%04FFA82752A8FD16FFF87DFFFFA827F87DFD04FF7D52FFFF7D27A8FFFFA8%7DFFA82752FD04FF7DF87DFFFFA8277DFFFF7DF8A8FFFFFFA8F827FD05FF%52F87DFD04FF7D27F8A8FFA852FFFFA8F8A8FFFF52A8FF52F8FFFFFF2752%FD04FF7D2752FFFF7DF8277DFD04FF7D52FD17FF2752FFFFA8527DF87DFF%FFFFA852FFFFFF27A9FD05FF7D27FD06FF7DF8A8FFFFF87DFFFFA8277DFF%FFFF7D52F87DFD04FF275252FD04FF527D5252FD05FF7D27A8FD05FF5227%FFFF5227FD06FF5227A8FF527D5227A8FFFFFF7D7DFD17FFF87DFFFF7D53%FF7DF87DFFFF7D52FFFFA8277DFFA87D7EFFF87DFD06FFA82752FFA8277D%FFFF7EF8A8FFFFFF7D7D5227FFFFFF527D5252FD04FF27FF5227FD05FF84%F8A8FD05FF53F8FFFF2752FD06FFA8F87DFF5252FF2727A8FFFF7D52FD17%FF2752FFFFA852FFFF53F8A8FFA852FFFFA8F852527D27A8A8277DFD07FF%F852FFFFF87DFFA8277DFD04FF527DA8277DFFA852FF5227FFFFFF7D277D%52F8A8FD04FF7D27A8FD05FF5227FFAFF87DFD07FF2752FF527DFFFF2727%A8FF7D7DFD17FFF852FFFF7D52FFFFFF52F8A8A852FFFFA827A8FFFFA87E%FFF859FD06FFA82752FFA827277D2727A8FD04FF7D7DFF2727FF5952FF52%27FFFFFF52527D7D2727FD04FFA8F8A8FD05FF7DF8FFA82752FD07FFF87D%FF5352FFFFFF2727A87D52FD17FF2752FFFFA852FD04FF52F87D52FFFFA8%F8AFFD05FF5227FD06FFA8F8A8FFFFF8A8FFFF2727A8FFFFFF52A8FFA8F8%7D52FFFF7D27FFFFA827FFFFFF7D27A8FFFFFF7D27A8FD05FF5227FFFF27%27FD06FFA827A8FF527DFD04FF2752527DFD17FFF87DFFFFA852FD05FF52%F852FFFFA827A8FD05FF7D2752FD05FF2752FFFFFF277DFFFFFF27277DFF%FF52A8FFFF52F87DFFFF7D27FFFF527DFD04FFF87DFFFFFFA8F8A8FD05FF%7D20FFFFA8F852FD05FF5252FFFF7D52FD05FF27277DFD16FF7D272EFFFF%7D27A8FD05FF5252FFFF7DF87DFD06FF7D2752A8A8A8527DFFFFFF7EF852%A8FFFFFF52277DA8277DFFFF7D27A8FFA852F8A884277DFFFFFFA82720A8%FFFF52277DFD05FF272784FFFFA8275284FFA85252FFFFFF2752A8FD05FF%F87DFD16FFA87D84A8FF7D7E7DFD05FFA8A8FFFF7DA87DA8FD06FFA87D52%7D7DA8FFFFFFA97DA87DA8FD04FFFD057DFFFFFFA8FFFFA87DA87D7D7DA8%A8FFA8A87D7D7DFF7D7E7D84A8FFFFFFA87D7DA8A8FFFFFF7D7D527D84FF%FFFFA87D7DA8FD05FFA8A8FDFCFFFDBBFFA8A8A8FFFFA8A8FFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFA8FFFFFFA8FFA8FFFFFFA8A8A8FFFFFFA8FD58FFFD%047DFF7D527D527D52FFA8527DFFFF7D52FFA8527DA8537DFFFF5252A8FF%7D527D7D7EFF7D7D7D7EFD56FF5252FFA8FFA8FF7D52FFA8A8FF27A8FFFF%7D84FFFF527DFFFF277DFF7D52FFFFA827FFA8A8FF287DFFA8FD56FFA852%52FD04FF7D52FD04FF52A8FFFFA87DFFFF527DFFFF7D52FF7D52FFFFA852%7D52A8FF842752FD59FF5227FFFFFF7D52FD04FF27FFFFFF7D7EFFFF527D%FFFF5252FF7D52FFFFA827FF7DFFFFFFA82752FD56FF7DFFFF52A8FFFF7D%52FD04FF527DFFA87DA8FFFF527DFFA852A8FF7D52FFFF7D52FFFF7DFF7D%FFA852FD56FF7D527D7DFFFFFF7D53A8FFFFFFA85252597DFFFFA8527D84%7DA8FFFF7D52FFFF7D527D7D7DFFFD047DFDFCFFFDFCFFFDFCFFFDFCFFFD%FCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD%FCFFFD66FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 116 CVU)
%%+ (PANTONE 186 CVU)
%%CMYKCustomColor: 0 0.1500 0.9400 0 (PANTONE 116 CVU)
%%+ 0 0.9100 0.7600 0.0600 (PANTONE 186 CVU)
%%RGBCustomColor: 
%%EndComments
                                                                                                                           
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2007-10-15T10:34:19-04:00</xap:CreateDate>
         <xap:ModifyDate>2007-12-20T14:56:24-05:00</xap:ModifyDate>
         <xap:MetadataDate>2007-12-20T14:56:24-05:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqk/mPzTpmgWn1q8EskKyRpctAhkFukhp69xT+7h&#xA;ShLOegxVg3mXzF5putN0PUbS9WGO/urzT57WxaSSH14Xm+r3CSQQy3MsYNtxZVAD8hUKK0KFkflv&#xA;zVced2826bpYtoA1vexWV8yQSTNcWQt7iJpI3mkiaHlX02j4M9T14tilX1by15sW7826zaaYslzq&#xA;WmXFrZ2/rRSztcTJFHEYZX9H04QsdZY3cjkoMfUgqo27GvW/mPS/L3lvVJoJrbS3muU1FDcWxS3C&#xA;RQBq8ZXeSWasjJLUKtK7jFWQ2nnPTJNbu9FvCtjfQXf1S1SSVD9ZPoR3IaIA8vsTLUMo32FcCp/i&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqQecPNFtoVggcXIu&#xA;b8m2spba2e5CTuKRl/sxj4iOKu68zsN8VY15T03zFdawmtfVH0e8JS28wNdQKsWrW6Rkw3Kwo/KK&#xA;5RqIefRSR8YC4VVvMvnzyB+WulPaRrFBxd5YdLttqyTyFiEReXHk5YhVHj2GYMtaDLgxjjkOf80e&#xA;8/oFnvbRi2s7PLvMv58+cJ9BvPMGmXEen6VZkW8UkUMTi4u2baKIzib1FQV5yLxXY8eXXKI66RzD&#xA;EQOM7+6Pee6zsB86ZnCOEy6fpeh2PmX8wEs9FmVodVj1HTIL5uJt0u0keFXlZrWsJmj5V4iLie1c&#xA;yckpxlQ3+TsdLg02TFcrjIGuvCf87fhPvsJn5M/Mttb1BtK1CwNrfLH60c8LiSCaLlx5oG4yddiv&#xA;E8d+VKHDh1PEaI3Tr+yfBhxwlxRut+YPn0+6+lp5peg6J5Ws9TvYvUb1nlvr+7nYzTtQciGkI9R1&#xA;RRRAxNBtmU6VS0HzVeXz2aanpjaU2pxNPpqPMkrsiBWKyqoHpy8G5cQWFK/FUYqyLFXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq81/Sa6lrBDWmrW2o6rcRQah5d1G2&#xA;M1jJYqRG8vMo0KKIeUnwyg8zxYNsMKq/n7zUnkzQ9N8ueXYhJrN9xstHtpGZ6UX4pZWqXKxqC8jd&#xA;fpNc03aWs4bgDwxjHinLrGPQD+lLp+unKwYr3q+gHn+oPGbbyVFY6r5o83eZriW9g0+ORLGWehZ5&#xA;Bbr69yq7KGL/AARKNl6DouaDL2qZeBgwARM+GUgOkbvh+W8u8e8uZHTgcc571f8Ab+phf5va5pMn&#xA;lPyfo+hkLpQtPrgjG5Bp6S8qfthhLy965s+xNLkGfPky/WZ8PwG+3lRjXuaNVkiYQjHlT2PyL5JP&#xA;mmLS9Xs/OTnVdHtLWP0BZ0ez4ofThq8gVlQhhXjv365tvC45EiW48nd/yh+V08ccsHomP531bCzy&#xA;26e51vrkGlTancaVfrq2sWNx69/Jqdgg+rKziC4ubURvXmGK+pT7Q37ZQJ8NkbnzH7XNlpzlEBOP&#xA;BjkKHBM+rrGMrHLnXc9O8n2vm+C51C2166j1nS7lY7iw1NQiBvVWkkPogmiDqvanzoM3CJgm9x3v&#xA;N6+WnlGJxx4JixKP3G/vSLzFomvaTqol8tWDAxW8Npb63dTXGofUoruYRSJZ6fuC0fBHkYuAEArU&#xA;DjmS6x6Bpc97caZaT31v9UvZYY3urXkH9KVlBdOSlgeLVFQcConFXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+fzqiax+Z3mnzJdMWsPLcA0+yNaoCy+vdPv0dQqp8s&#xA;4DtfJKeKEB9WpyGXwsCA91cJ94dzpogSJPLHGv1vGtQ/MvUNX/K3VtNuQzXcuqIZJNyBb3TyXXHl&#xA;/kywlfkRm/x9kQx62OWP0jHXxjUf9ya/tcOWpMsRif537fvU9G/Ku68wflkmv6YXl1a2nn/0UkkS&#xA;26U+CMdnVgzADrU96YdT21DBrBhybQlEb90rPPyO3u9yMelM8XEOYKfadq2r6TcvNp13PY3BBjd4&#xA;HaJivdTxIy0yIkSC+j4MEMmngJxEhwx5jyej/kT5c0vWdS1e5v5naeGD0RbBqCSK7WSOYvXdhTb5&#xA;n5ZfpcYkTbqPaPVTwwgIjYm77jGiGV/kz5i8xNrGreVdUmNzBoy+lbyMADF9Xk9D06gCoI6V8Mt0&#xA;s5WYno6vt/S4vDhngKOTn52Lt6zmc8u7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FUl82WuoXFhafo9J5LiDULGcpBKsRMMd1G0/Pk8auno8/hJNdtq4ql/kjTPNFlea6&#xA;+tyO8NxevJpweb1aQlnICgEgLRlofhPbgOIZlXn/AJn/AC4Hlny3r1laaj9YufOepzxWbTp6aw3G&#xA;qR+mqO6l/wB3HwJ5Ba0/ZzmdX2L+/wAExL0YuGNdfSed/J2+jlLLHJEDfhlM+54/5C8uaP5fs/M/&#xA;l/znxJv2itpIYldzG9q0oYhuOzK7Ainhg7Y8eeXHPBtLGZXfW62+wubpOxcxgbjxRmBRBH6aZx+X&#xA;2teVPK3liDRZdWE7W8s5WVYJxVHmdoyRw6lCK+BznO2dFqdVn8SOOhwx/ij3b9e9ztN2Tnxw4SPt&#xA;H63m8mt6XqvmG4tLCYz3M88xiiWOXk3Es5AHHc8R0zrxgljxgy2AG+7sMXtBphERuV13Jv8Al5d3&#xA;OqeY1Hl67AvbEC4mDGaAemkigqx4A0YmhGUa/UDSQGTJyutu/n+hhLtrTagHHUjY7h8+b0fy7+a9&#xA;vov5rax5Ti05prvWrx7qS5MoEUP+im5AVeJaQnofs0+jDLtPg0UtXCPPkD/W4f2vN6qQzTx4f9Tj&#xA;w339WVabrXmvzF+UWna2rT3WsTzT3BgtBLCZ0E86xQcraa1liUrwUOG+HYsGXlnQh0jJ/Jz+bW1T&#xA;WG12FljkmZrZyxCxoJpFigjQM0bqIBG7SqF5MxVt12VZXirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVeXfnhpmvSQ6Rq+m+pPb6RK1xe20ZqFClXSdk7heDAk9PvzC1&#xA;kTsR0el9ns2IGeOdAzFA/o+1hf546N5YhubDWdJlQXWq85ruFX5Fw4WRJuJJK8ufyOUamMbBj1dv&#xA;7O58xEseQemGw+6nlmYz0rvL3kPXfLH5x6NDfRh7e5nmmtLxK+nIgid2FezKOqn9VDlOr7TxanQ5&#xA;ZQPKJBHUH8dXy2GnljzRB73qTW/lPy3+Z0Eyf6NqPme2mR1FBG00UkbA/wCS0tT8yvid+SE9Rquz&#xA;iD6o4ZDfrVG/9Lt8Pc7CoY8w75D8fN5zo8t7qv5p+a9a00F7kM+l6QVYLzvrphZ21G6AcUeQnsor&#xA;nWx0xOlwacj6uEyB/mxqUvtqP+c645P3k59118dh+t9d+XNEt9C8v6botsawabbRWsbU48hCgTkQ&#xA;K7tSpzo3BTHFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8n/Mu8&#xA;81Xd9a+Xry8Om6fqV+Eh/Rcc0tzJp8ASeSeR41kljetIY441BL/FyKfDhVk9rr2jeeLW5n8tXTfW&#xA;9KleATXNtPHBIWBSWCRJVjMkTcCr8d1YeIyrJjvlzcnTZxA1IXE865+RHmHmHmP8uZLeKwPma6XT&#xA;3gb6lbXFtDPeQ3EAJeGNjGPVR0UmMck3Xj/Kc108Jj9Wz2Ol7VEjLwRxX6iCRExPU77EHnz533r/&#xA;ADh5Z/KXUIo08u6tbaPfQNxnjuPrIR1INARIGYMDTcYckcR+k182Og1eugT40JZInlXD+hD/AJoe&#xA;bpPKXlnT9SSOOa+S7gSGOUBq/A3rUJBKlouS8h0rnC9jdnjU6nLCViFS5f1tv115Op12bgAkO9hG&#xA;p2t15u/NG11rVIZtN8vaJDZyKJwVkeSRBcxQIqci0zySAcEq1BTrQZvtPH8pojhxfvM2SUht7+Ey&#xA;35CIHXa3AmfEy8UvTEV+unpf5U/l7F5D0eHWdXiX9OXTSLoGjSvHHO91Oh+2ztx9eRBwG/7uOtaF&#xA;nzq4Y/UZHmfu/HP9gdcZbUjobiO51TTpHvtT0b8yIru3+uaTeTzGG8haZRciG3DvayWqxc+LwiqB&#xA;at8Qy5i9jwK7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUn81+Wof&#xA;Mejvpc93c2cUjo0klpM8LugPxxOY2UtHIhKMp8a9QDirAfPWu+atN0T9C+VLBPLdsl3Do1i8npLc&#xA;SPcMkUcljCvOH0VMqlnLcqcvhVlwqynzT5w0XTb6TRdYspruxXTm1LULwLHJFDbRSiN5J0qr7H4h&#xA;6asdiQPhyMogiiyhklA3E0Q610jyfZ+aRffpC2k1eO3LrHPJC10kHAj1A4KysvA7vJy275VHABLi&#xA;czJ2hOWLw+UfLl8uXypjPmH8tPKvmLzVpt1qvmGKUxepLpWkp6ALM3WZVdpPVZWTqUKgCnGtTmt0&#xA;fY0MAmIk/vDcjyPuB6ff5tWXVGZFjlyT62n8k+WvMum+XrgSfpe9jaex1G8/eB5WLp6YmO0c0i8u&#xA;Kqq8lHEdKZn6fRYsP0REfx+Pvap5ZS5lj2sWfna91efy3rWu6Uk927TaF9Y06RBNGpV62k8V3FJF&#xA;cWrLWnxMPhepHTKa3oGiaZfrZadPr5t7vzBZwvBJfwIVU+oV5sgbdfUEaFh4+2BU2xV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVCahpGmaibc31tHcNaTJc2rOKt&#xA;HNGeSuh6qR7fLpirBPNH5ZaneXusa5b366hqd1JZy2lhdr6du1vZyM50+coSksEodqc46h6MSaYq&#xA;v/MLQ9R1WXy1e2Vjd2t9NJ9R1iS19FpINLvI+N3DKwLVo3AqY+XEgsvuVRet6EdJ8y+UrzQNDaa0&#xA;02O9s54LFLeIRWs0Ssu8rwIB6yLty8TgVZrnkSbzXqH1vXLG0jtrjSvqwSRjNc2l20juGi4gRhow&#xA;4/eK9eXTbclWXabpUVla2sUk0l/cWkbRJf3fB7llcgtykVU+1xWtAK0GBUbirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqje3P1WznueBk9CN5PTXq3BS1B7mmKvOfy&#xA;v0bTPNvkyz81eZI01nVtbElxLJcfvY7cGVlSG1QkrAsSrSqUau5NcVd5w+t+VtG8r+U9N1G6jg1z&#xA;Whp8upSTO93FaTyS3Bijncs4fjSGNyeQX3xVW/Mfyfpej+TNU1/y5/uD1zRLWS/tr+1JRpDaqZTF&#xA;c70uFkVSpEvLriqB1QW2uecfyy1K9tkEmrWd5cXtuOXpuRZJMiuhNHEbuePKtMKsp/Na2gm/LbzM&#xA;8i1e20u8ubdwSrRzQ27vHIjChVlYdsCo/wAn2FlF5P0u3SBBDNZQtMlAQ7SRKXL1+0WrvXrirxzy&#xA;vpGnTxeZIZtA1C//AOdsu9JttUtroRpZW8l4lujKDM0o+rLJzH7kr2JpUgqzfVJJfMv5uN5Xv5JF&#xA;8v6NpUeoyaerMiXlzcTFFM/Ej1IolXZDsW61wKmej/4F0zz3Jp2lXP1DVprVll0BI5YYWRHqLmOE&#xA;qsa/ZZeaCjePiq87ubLTrbzv+ZbN5au9et9JFjNZWdpcLBHCZNPE0iBTNG6iR/i/dxvTw7YVe4aZ&#xA;YR6fptpYRO8sdpDHAkkp5SMsShAzsAKsabmmBWFfmvrl/at5Z0G0uJLFPMurQ2F5fwt6cqW9C8iR&#xA;SDdJJaBFYbjem+Kob8yfKGmaP5N1LzB5bpoWuaHbSX9tf2pMbSm2QyGK57XCyKpWkvLc4qxvVPR1&#xA;n8xNBv7rQrvV/wBK+Vvr11pdjNFDwn9eDjMwuLi0T4FkMf2i2428Cr0zyHw/wpZFNPn0pGMzDTrt&#xA;i80HKZz6bs2+1dh2G1T1wKn+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsP0r8vX8vvd&#xA;ReWNXm0vS7uR520pooriCCSQ1drXmA0XI78aslf2cVRF/wDl3oepeWm0LU5rm9DXBvf0lJIEvBd8&#xA;y63CSRLGqOhNE4qFCjjSm2Kqdz5Gu9TsE0vzBrdxq2kqV9a1aKGFrkIwYLdSRKOa1G6oE5d6ioxV&#xA;b5j8hXeseZNM12DXrrTZtHSVLC3gitniT109OUkSxuW5KKb9O2Ku1PyDdal5a1TRrvzBeyT6zWO/&#xA;1HhAJTbsnpmCOMRiKNChNeK13JrU4q3pXkjVrJLOKbzNe3kGnQmOxheG1jVJBEYY5X9KJDKY1YkK&#xA;548tyKgYqlem/lXqmmQavb2Hm7ULeLWrq5vr0LBZE+vd/wB68bGEsle1Dtiqc6v5CtbzUNO1iwvp&#xA;9L17S7f6nBqEHBvUtzQmC4icFJY+Q5AbENuCMVVNI8mLaeZpvM99qE2oa1NZrpxdkihgS2WUzBI4&#xA;o1r9tias7HFUos/y11ax1/VtdtPNd7Dfa2YDqFLeyaNjbRCGIqrwtxogpt1xVluh6WdL0m109rmS&#xA;8a3QI91Nx9SVurO/EKvJiamgxVCebPKWjeadIOmaqjmISJPbzwuY5oJ4jWOaGQbpIh6H+GKpbdeR&#xA;rrVLFNM8wa1carpKshltDFDAbkRkMq3UkSguvJQSECBujVFRiqrL5KZ/PUPm2PU54pILI6cunqkR&#xA;g+rNIsrruvMFnQHkD7dMVZNirsVdirsVdirsVdirsVdirsVdiqF1SXU4rCaTS7aK7v1AMNtcTNbR&#xA;uaioaVY5yvw1p8B3226hVgX5Wfml5h8/2N/qEXl6302ysZpLPnLqLSu91HGr8OC2oAT94vJ+W1dl&#xA;bFUr0v8AP+2T8wp/JPmnSU0O5ST6tDqMd2bq1kuOKuI+bwW3Hksi0J7kAgVxV6tdtdLbStaRxzXI&#xA;UmGKVzFGzdg0ipKVHuEPyxVhnlHzv5u13Wta0658v2dhHoVwbO6nGpSTl5jEJY/SQWcdUYOtWYqR&#xA;X7JIpiqR6H+bPnjWfNGueWrPyhZjUfL7It6ZNXdY29SvBo2+o1YECu4GKsm0LzX5vn81JoWv+XId&#xA;Kjmsp722v7e/+uo5t5YI3iK/V7cqf9JBqfor2VWax+YsaeZj5U8u2La35iiQS3sfqehaWcZFVa6u&#xA;OMnEtUUVEZj4Yqoaxr/5paNbtfv5fsNas4xyntNNuplvFUD4jGk0ISangCpPYYqmnkzz9oXnTy+2&#xA;r+XZROV5JJaTn0pIpwNopwBIU+YB23FcVYjo35n+dtW/MHW/JS6Fp9lqGiW63Eskl9NNFIJBGycX&#xA;W3jajLMp3TbFU00/805LfzvD5K81aWNH1m9j9XS7mGf61ZXagGvCQxwOjfCfhZPavSqrK/M2p6jp&#xA;eg3upafaRX1zZxNP9VmnNsrpGOTgSrHPRuIPH4aE9SOuKsT/ACf/ADbsfzH0i8u0sv0ZfWMwjuLA&#xA;y+uRHIvKKUPwi2f4h9ntirMta1iw0XSLzVtQk9KysIXuLh/BI1LGniTSgHc4qwz8ovzQ1L8w9Ovd&#xA;UbRY9J060uHsxyu2nuGnjWOQgxfV4VVeMo35k12p3xVNvzO86P5O8n3WtQQC7vg8MFhZEMfXnmkV&#xA;FjAXfoSfoxVb+W3n2185eRrLzNxW3aRHF9ApLCKWElZF8abch7EYqkWmefvzOuvKsHmCXydYpbyW&#xA;YvWDau0chj9P1K+n9Tk41XcKXOKqHkr80fPvnHy7Dr+j+ULL6jO0iRrNrDJJWJijfD9SYdRtviqZ&#xA;SfmF5kj/ACybziuhQzXtkl1Lq+lPdm3MK2Mksc4jkENwHZDCdjx7712xVH/lp531Xzj5Zg8x3ulQ&#xA;aRp92rPaKt41zIVR2RjKDBAqCqVFGb3piqE0n8xdR81z3H+CdNjvdItZDBJr9/M1taySp9pbWNI5&#xA;pZgvdjwXwJxVB+YPzJ80eSwl35y0GN/L7OqTa7o8z3CQFyFX17aWOORVqftKzeHXbFU/80ecbiw8&#xA;mTea/L9tba5YW9q9/Jyu2tg9rHE0rPC6w3AdqL9k8fn2xVJ/yo/OLQvzBs5ljhOma3ab3mkSvzdU&#xA;J+GSNuMfqIaip4ih6joSqn/nfXtd0DQbrWNL0yDVUsIJrm8gmuntJPShQufR4wXIdiAdm4/PFVXy&#xA;drWs63oVrqupWEGnC+hiubaCC6e7PpTIHHqM0FsFYBug5D3xVO8VdirsVdirsVeK/wDOKP8Ayg2v&#xA;f+BBd/8AUPbYqiI/y/0HzzdfmPo2rRjfWUazuwKyW836PgCyJ0+la0YbYVQf5aef/MHlDX1/LT8x&#xA;5eN6lF8u649fSu4a8URpW6nshO/7LfFSoVmX5c/8pZ+YP/baj/6gLfFWA+VL3zPa/np+Y50HSrfV&#xA;HY2QnW5vDZBAIvhKkQXPOu/hTFXoOieZPP03m++s9d0aLTrC30sXVpBa3H1wTTeqQ3770YGDU+Hh&#xA;x998VYT/AM4pSJqHlPzBr9xJ62s6rrErajMa8iRHHIoNdyKzOw+eKvb8VeDfl5bPov8Azk3540bT&#xA;hTSruyW/uYFPFEmk+rzBuNKV5XLgAdmxV2ja3Z6R/wA5O+eZrqO6kSTTrNFFnZ3V64P1ezPxJaxz&#xA;Mo2+0RTFVtpe6f8Amv8AnVp2qafKLPSvI4Jkt7kejfXFxzJqtuwEixK6qGL+FKDlir1r8xZ/Q/L7&#xA;zPPSvpaTfPQbV42znFXiX1dPyu87eSvNqUh8ueZ9NtNJ1/h8MUdwlvGqTHagB4q/Svwv44q9M8//&#xA;APOzeatF8hIOdgxXWfMv8v1O2f8A0eBt/wDj4uVFR/KpxVjP/ONtbeTz7phDKLPzDcfCx3BJKbjx&#xA;/db4qjfzC8wyXH5o6Bp0WkX+uWPliNtX1C20yOOZ1vLhXhsvUEkkKr6aiSQb9xtirG/yG1NtC/MD&#xA;zV5HubC50qw1J21jRNOv0WOVI2PF4yiNIm8fGlG6Jir2nzQiJ5U1dEUKi2FwFUCgAELAAAYq89/5&#xA;xe/8k9pn/Ge7/wCT7YqzD8zIoovyy83LGiop0fUmIUADk9tKzHbuzEk++KvG5dXvtL/5w9gmsiyS&#xA;z2/1V5VJBWK4v2jl6fzIxT6cVexflTZWFl+WnliCwAFt+jLWUFejPNEJJH+bO7MffFU+1rSbPWNI&#xA;vdKvUElpfQSW86EVqkilT+vFXz1+TF7eXH/OMXnSK4dmitIdYhtA1aLEbBZSFr29SVziqea9+VOo&#xA;3/lfyt578ky/UfPGl6XYuoXZL2NLZB6Tg7c+PwiuzD4W2oQqnmh/mxpfn38sfMwaP6h5isNLvI9X&#xA;0l6h43EDqXQN8RjLeO6nY+6rPPIX/KDeXf8AtmWX/UOmKp7irsVdirsVQ2pXwsbKW7ME1z6QB9C2&#xA;QyytUgUVB164q8g/5x1stf8ALPlzWNL17Q9QsLmfUbjUoS8JZGieGJeIZS3x1iPw99qYqnv5dX2q&#xA;RebfNrX2halY2+takt1p91PBSNo0tkhJcgnhvDX4vEd8Kp9+Zf5baF5+8vNpWpgxXERMmn36Cslv&#xA;NSnJelVP7S9x70ICsW/Iny55x8t6f5mg82iWfURqAZbzeT61FFaxRpLG1KyVVAPGux+KuKpX+XY8&#xA;xWf5v+cNa1Dy7qVppfmJ7dLC7eD4R6J9MGUAkoGB5VPTvhV7VgV4rp/lDzd+VnnPU9T8t6bJrvkb&#xA;XZPWvtKtOP12ylBJDQxuV9RRyIAU1I2P2QSqzyT8xYJbTlpmha3e6gy/urCXTbuy+MjYPcXkcNug&#xA;r1PM08DiqWflv5DvvLsuuea/MLLdea/MEhudQW1DOkESisdpBX4n49K/tbDtUqsQ8rr5gtPz380e&#xA;bLry7qkOh6vaQ2tncG2LHnClulWQHkqt6LEbfPFU6/NP8oLzVdUh86+SbkaT54sKOsi0WO8Cinpy&#xA;1+Hlx+Hk2zD4W23CqX+ZPOfnHzF+V+saLfeTdWtfNd5bNYvbRW7Pau8gCvLHcAlBHQk0Y17b9cVZ&#xA;P5n8pwefPypm0KSylsblrVBZQ3cfovDd26AxGm9F5DiSD9knFUB+TXlzXvL3lK417zZHPP5o1MRf&#xA;XUC+pcJb2iC3tYAqdSEUuad2NcVY5+VL675d82+fdS1Py1q0Fh5g1EX2mEWxkkYNLMzhwjNxP71S&#xA;O3XfFWVflH+lXufMOp65pN7puua5fy3kouoiEW0iCw2kAlBKkpF2+eKsZ/N+x8wt+YPlTzX5W0PU&#xA;L7U9BmeDUvShKxy2bEEokjFQ1VeRRT+bFXonmfXpJfKVybfStRnuNRtLmOC0S2b1lfgUCyg7R8i2&#xA;1TuN8KsS/wCcebbWNC8i2flvWtIvtP1GCW4kdp4SISryGRaSglejdD3wKyr803vW8g65YWFhc6jf&#xA;anY3NjbW9qnNvUuIWjDMeiqOVSTirEvy08qHVvyYi8h+Z9LvNPlS2kt7xbiLgKvO8kckL/ErFDxY&#xA;eB6jFUP+Xs/nn8t7T/CXmbSrvWdAtGI0XzBpMD3hELsW9O4touc68a7EKadNwK4qyPzT5m8wa/pF&#xA;xovk3Sr5b7UEa3fV9StbjTrazjkHF5SLpIZpHVT8CxxnfqdsVQGpeTrfyd+TN95N0Oyu9TubrTby&#xA;zjNtFzeW6uoWRpZNwEUu/c7LtvTFWT/l1d3D+UdKsrqwu9Pu9PsrW3uYbuIxH1I4gjcDuHAKdQcV&#xA;ee/nZ+T2oX7XHnHyNytPNIhkh1K1hIUX9tKhSVSv2Wk4Hv8Aa/1guKvUPJltcWvk/Qra5jaG4g0+&#xA;0jmicUZHSBFZWB6EEUxVOMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqW+ZtOv9T8uapp2nXRsb+8&#xA;tZoLW8FQYpZIyqPUbjiTXbfwxV5p+Wtxotn5jsdB1vQf8NeebGzkiVoABaapCAvqTxyrtM1U5nn8&#xA;a77/AGsVUPzg8jeWNN0axvbezU32oeYrRry7feWRb28Mk0Zbb4Pj4hf5aDCr0bS/IvlbSv0hHY2E&#xA;cVnqcccd5Y8Va3b0+Y5cCDuwko3bYbdahWIf8486bYxfldZ3CQj17+e+a8karNJ6d5NAgYtXZY41&#xA;UDp95xVNfy60DRLeDzTbw2ECQXGr3cE8IjXg8KgBYipFPTUOwCfZFTtvhVjn5P8AlXy5qnlTWIdQ&#xA;06C4Ca3qcEUjIBLHHHOVRY5RSROA+zxYU7Yqt8qzXuqeQfPvl7WppNVs9AvNR0yyvrhmMskFvGJI&#xA;xJJ9ppIWNOda9MVTb8uNJ0ub8j9KhmtIZYrvS0uLpHjVhLMYw/qSAg8n5KDyO+w8MVYd+U+laXN5&#xA;b8hyv5XuEvbyQSSeaFkt14vbJLcqTxkmmdZvQ9Jg8a7N1rxxVP8A8xLS60bzbceaNb0L/FHk64so&#xA;radY1EtzpRiLmSeKFuqSB6u8dGHGtfhFQr0Xys+kP5a0o6Nc/XNKFpCtjdFubSQpGFRmYgEsQN6i&#xA;tcVTTFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqg9a00appF7ppmktvrkMkIu&#xA;YTSSIupUSITtyQmo98VSS38lzy+YdN1zWtTbU7rRkmTS19CKBY2uUEcsr8Kl3ZBx24r1+HwVb88e&#xA;Sh5stbS0l1CWygs7qG9QQpGzNNbPzjJMgb4a9RirI4ElSFElk9WVQA8lAvI+NB0xVhVl+W+o6LNe&#xA;R+WPMlzpGl3k0lydMMFtcxQyzNzkNu0qco1YmvE8lB7YqyPQ/LtroejfozT5ZORMsr3k5Es8lxOx&#xA;kknlYgc3Z25H7umKpD5f/Lu70LTLrTbDzBdRQXt1PeTzLFbeuJbpucnBmR0Xc7fAaYVTS28l6Vp/&#xA;lOby1pJaxtZopY2nH72UtPX1ZXaTlzkfkSWbvgVS0TydJo/kuHyva6lKYraD6rb3rxxmVYQvEArT&#xA;gSB3piqVaH+Wl9o/l6x8vW3ma9/RNi0fCP0rVZGjjlEvpGUR8uLfZPemFU21HyxrE2oX13p2vTWM&#xA;WooiT2rQxTxoyJwMsPOnB2WgNarsNsCpj5b8v6d5d0Gx0PTVZbHT4Vgg5nk5Cj7THarMdziqZYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:3A5A21217C9C11DC9BD8BE091416D1A0</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:F8BE6A26B09B11DC9605A01BCE55091B</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:5CDE4A32725911DC9FF2E4A734CCC73C</stRef:instanceID>
            <stRef:documentID>uuid:5CDE4A31725911DC9FF2E4A734CCC73C</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 186 CVU</rdf:li>
               <rdf:li>PANTONE 116 CVU</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=0 K=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=45 Y=60 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>45.000000</xapG:magenta>
                           <xapG:yellow>60.000004</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=50 Y=5 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>5.000001</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=90 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>90.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=20 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>19.999998</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=40 Y=15 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>39.999996</xapG:magenta>
                           <xapG:yellow>14.999998</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=20 M=0 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>19.999998</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=100 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=40 Y=40 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999996</xapG:cyan>
                           <xapG:magenta>39.999996</xapG:magenta>
                           <xapG:yellow>39.999996</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=70 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999996</xapG:cyan>
                           <xapG:magenta>70.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=90 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>90.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Aqua</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>55.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Blue</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Blue Gray</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>40.000000</xapG:magenta>
                           <xapG:yellow>30.000002</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Blue Sky</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>80.000000</xapG:cyan>
                           <xapG:magenta>5.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Brown</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>85.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Dark Blue</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>90.000000</xapG:magenta>
                           <xapG:yellow>10.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Forest Green</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>55.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Gold</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>5.000000</xapG:cyan>
                           <xapG:magenta>20.000000</xapG:magenta>
                           <xapG:yellow>95.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Grass Green</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>5.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Orange</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>45.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Red</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>14.999999</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Violet</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>45.000000</xapG:cyan>
                           <xapG:magenta>90.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 116 CVU</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>14.999999</xapG:magenta>
                           <xapG:yellow>94.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 186 CVU</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>91.000000</xapG:magenta>
                           <xapG:yellow>76.000000</xapG:yellow>
                           <xapG:black>6.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -260.769 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 260.769 li
260.769 260.769 li
260.769 0 li
cp
clp
[1 0 0 1 0 0 ]ct
260.769 260.769 mo
0 260.769 li
0 0 li
260.769 0 li
260.769 260.769 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
131.266 109.603 mo
145.152 109.603 156.521 98.3447 156.521 84.4565 cv
156.521 70.5698 144.693 59.4116 131.266 59.4233 cv
117.377 59.437 105.933 70.5698 105.933 84.4565 cv
105.933 98.3447 117.377 109.603 131.266 109.603 cv
cp
f
143.037 68.5327 mo
139.785 69.0288 135.426 69.3179 130.861 69.314 cv
130.918 64.3179 131.002 60.7085 131.1 59.6167 cv
135.725 60.4058 139.927 63.7397 143.037 68.5327 cv
f
148.462 86.4854 mo
143.755 87.2041 137.445 87.6201 130.838 87.6143 cv
130.83 80.8081 130.863 74.2397 130.924 69.1265 cv
135.486 69.1304 139.841 68.8413 143.089 68.3472 cv
146.269 73.2534 148.302 79.689 148.462 86.4854 cv
/0 
<<
/Name (PANTONE 186 CVU)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0.91 0.76 0.06 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
148.048 86.4521 mo
146.744 86.2471 145.644 84.0659 146.218 81.814 cv
144.378 83.0874 142.306 80.4722 142.609 78.0522 cv
142.769 76.771 143.609 75.6304 145.074 76.1597 cv
144.478 74.1128 143.732 72.1772 142.861 70.394 cv
141.56 70.5601 140.134 70.6968 138.623 70.8042 cv
139.966 72.8335 138.648 74.7222 136.773 74.4214 cv
135.416 74.2026 134.146 72.7788 134.5 71.0796 cv
133.395 71.8452 131.127 71.5444 130.922 69.1187 cv
135.088 69.0972 138.756 68.9585 143.099 68.3452 cv
143.099 68.3452 li
146.609 74.1362 148.119 79.2144 148.48 86.4541 cv
148.351 86.4521 148.177 86.4717 148.048 86.4521 cv
0 0 0 0 cmyk
f
117.869 103.415 mo
115.274 102.979 113.55 102.423 112.968 101.819 cv
112.327 101.099 111.487 100.122 110.893 99.3604 cv
109.452 97.2529 109.424 97.2119 108.789 95.999 cv
107.685 93.6631 107.664 93.6182 107.23 92.3193 cv
106.501 89.7959 106.487 89.7471 106.265 88.376 cv
106.123 87.1846 105.994 85.5874 105.945 84.3901 cv
105.967 83.2983 li
105.923 84.3667 108.499 85.3784 112.957 86.126 cv
112.946 86.4795 112.941 86.835 112.942 87.1904 cv
112.952 93.7568 114.822 99.4385 117.869 103.415 cv
f
131.182 109.601 mo
131.064 109.601 130.908 109.599 130.791 109.597 cv
130.561 109.593 130.328 109.583 130.097 109.577 cv
128.58 109.493 127.587 109.347 126.285 109.108 cv
123.009 108.36 120.104 106.335 117.851 103.37 cv
120.074 103.743 122.933 104.024 126.257 104.169 cv
127.829 104.237 129.41 104.271 130.967 104.272 cv
131.025 107.64 131.102 109.599 131.182 109.601 cv
f
130.967 104.272 mo
129.409 104.271 127.828 104.237 126.257 104.169 cv
122.937 104.024 120.081 103.743 117.858 103.372 cv
114.838 99.3975 112.987 93.7354 112.977 87.1963 cv
112.977 86.9111 112.98 86.626 112.986 86.3408 cv
116.015 86.8467 119.905 87.2295 124.429 87.4268 cv
126.568 87.5186 128.721 87.5654 130.844 87.5674 cv
130.844 87.8525 130.844 88.1377 130.846 88.4248 cv
130.854 94.9639 130.9 100.501 130.967 104.272 cv
1 /0 /CSD get_res sepcs
1 sep
f
130.928 104.618 mo
130.711 105.489 129.491 106.321 127.761 105.618 cv
128.569 106.683 127.87 107.604 126.448 107.347 cv
125.343 107.146 124.031 106.257 123.929 105.368 cv
122.562 105.265 121.314 105.134 120.203 104.979 cv
121.257 106.204 122.433 107.206 123.703 107.948 cv
123.855 107.886 124.09 107.901 124.844 108.165 cv
125.808 108.503 126.707 108.995 127.669 109.337 cv
127.669 109.339 127.669 109.341 127.669 109.341 cv
126.914 109.226 126.817 109.21 126.283 109.108 cv
124.468 108.587 121.091 107.614 117.85 103.37 cv
117.85 103.37 li
117.85 103.37 li
117.85 103.37 li
121.754 103.974 125.555 104.233 130.969 104.267 cv
130.955 104.372 130.953 104.515 130.928 104.618 cv
f
117.851 103.37 mo
117.85 103.37 li
114.374 98.3916 113.005 93.624 112.969 86.3662 cv
114.934 87.0146 115.474 89.8857 114.969 91.499 cv
116.839 90.7783 119.187 94.0088 118.364 96.1689 cv
117.986 97.165 117.001 97.4424 115.971 96.8428 cv
116.528 98.7275 117.25 100.452 118.113 101.979 cv
119.434 102.161 120.919 102.317 122.543 102.44 cv
121.239 100.835 122.285 99.5186 124.025 99.6084 cv
125.519 99.6846 127.497 100.927 127.073 102.624 cv
128.421 102.017 130.701 102.515 130.969 104.276 cv
129.332 104.265 126.857 104.245 123.688 104.026 cv
121.732 103.892 119.804 103.522 117.851 103.37 cv
0 0 0 0 cmyk
f
117.85 103.37 mo
117.85 103.37 li
117.85 103.37 li
1 /0 /CSD get_res sepcs
1 sep
f
117.85 103.37 mo
117.85 103.37 li
117.85 103.37 li
f
117.85 103.37 mo
114.974 102.851 113.73 102.446 112.921 101.769 cv
112.338 101.11 111.566 100.226 111.022 99.5342 cv
111.122 99.6592 111.187 99.7412 111.455 100.054 cv
111.192 99.7256 109.876 98.0459 109.781 97.3057 cv
110.496 97.1904 112.799 100.782 112.822 100.819 cv
113.521 101.079 114.431 101.323 115.527 101.546 cv
114.496 99.9912 113.631 98.2432 112.965 96.3389 cv
111.397 97.1318 109.396 92.9854 110.03 91.2373 cv
110.159 90.8818 110.575 90.1396 111.637 90.9424 cv
110.836 89.0967 111.047 86.3643 112.979 86.3682 cv
113.023 92.4795 113.868 97.708 117.85 103.37 cv
f
148.351 90.8135 mo
148.32 90.7686 li
148.429 89.6416 148.486 88.4814 148.484 87.2939 cv
148.482 87.0146 148.48 86.7373 148.472 86.46 cv
148.484 86.458 148.498 86.4561 148.509 86.4541 cv
148.515 86.7314 148.519 87.0088 148.521 87.2881 cv
148.523 88.4951 148.464 89.6709 148.351 90.8135 cv
0 0 0 1 cmyk
f
135.078 109.304 mo
135.064 109.306 li
141.992 108.229 147.332 100.876 148.32 90.7686 cv
148.351 90.8135 li
147.349 100.892 142.007 108.224 135.078 109.304 cv
f
143.441 106.437 mo
141.73 107.315 141.373 107.499 139.542 108.187 cv
139.003 108.362 138.283 108.589 137.738 108.743 cv
141.263 107.794 144.392 105.778 146.865 102.976 cv
146.339 104.144 145.978 104.81 144.136 106.032 cv
143.908 106.171 143.675 106.306 143.441 106.437 cv
f
144.136 106.032 mo
145.652 104.983 146.292 104.364 146.865 102.976 cv
150.488 98.8701 152.703 93.0732 152.693 86.4561 cv
152.693 86.1768 152.687 85.8994 152.679 85.6245 cv
153.824 85.3218 154.744 84.9917 155.392 84.6382 cv
155.402 84.9136 155.408 85.1909 155.408 85.4702 cv
155.421 94.3486 150.921 101.935 144.134 106.032 cv
/1 
<<
/Name (PANTONE 116 CVU)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0.15 0.94 0 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
1 sep
f
136.568 99.5225 mo
134.891 97.8408 134.891 97.8408 130.861 94.0225 cv
130.852 92.2607 130.846 90.3877 130.842 88.4248 cv
130.842 88.1455 130.842 87.8682 130.842 87.5908 cv
133.025 87.5928 135.178 87.5479 137.25 87.4619 cv
137.254 87.7393 137.256 88.0186 137.256 88.2959 cv
137.262 92.5186 137.014 96.3311 136.568 99.5225 cv
0 0 0 1 cmyk
f
132.256 109.579 mo
132.096 109.585 li
131.748 109.595 131.59 109.601 131.445 109.601 cv
131.182 109.601 li
131.035 109.597 130.908 103.37 130.861 94.0225 cv
134.631 97.5908 135.025 97.9639 136.568 99.5225 cv
135.713 105.653 134.135 109.497 132.256 109.579 cv
1 /1 /CSD get_res sepcs
1 sep
f
133.449 109.501 mo
133.248 109.517 132.982 109.538 132.781 109.552 cv
132.625 109.56 132.414 109.571 132.256 109.579 cv
134.133 109.499 135.711 105.661 136.566 99.5381 cv
138.385 101.45 139.189 102.384 140.068 103.817 cv
138.355 107.2 136.051 109.269 133.449 109.501 cv
0 0 0 1 cmyk
f
140.068 103.817 mo
139.201 102.454 138.674 101.733 136.566 99.5381 cv
137.012 96.3428 137.262 92.5264 137.256 88.2959 cv
137.256 88.0186 137.254 87.7393 137.25 87.4619 cv
139.326 87.376 141.32 87.2471 143.187 87.083 cv
143.191 87.3604 143.195 87.6377 143.195 87.915 cv
143.205 94.4072 142.019 99.9658 140.068 103.817 cv
1 /1 /CSD get_res sepcs
1 sep
f
140.576 106.907 mo
140.892 105.909 140.865 105.321 140.076 103.802 cv
142.023 99.9502 143.205 94.3994 143.195 87.915 cv
143.195 87.6377 143.191 87.3604 143.187 87.083 cv
143.888 87.0205 144.57 86.9521 145.232 86.8799 cv
146.16 87.9717 147.312 89.3311 148.32 90.7686 cv
147.615 97.9717 144.701 103.776 140.576 106.907 cv
0 0 0 1 cmyk
f
135.064 109.306 mo
134.877 109.331 134.627 109.37 134.439 109.394 cv
133.85 109.464 133.85 109.464 133.545 109.493 cv
133.449 109.501 li
136.055 109.269 138.361 107.194 140.076 103.802 cv
140.757 105.159 140.976 105.78 140.576 106.907 cv
138.914 108.169 137.055 108.997 135.063 109.306 cv
1 /1 /CSD get_res sepcs
1 sep
f
137.738 108.743 mo
137.129 108.897 li
136.117 109.126 136.117 109.126 135.57 109.222 cv
135.078 109.304 li
139.994 108.536 144.111 104.624 146.445 98.8154 cv
147.091 100.536 147.294 101.341 146.861 102.979 cv
144.388 105.78 141.259 107.794 137.738 108.743 cv
f
137.129 108.897 mo
136.117 109.126 136.117 109.126 135.57 109.222 cv
135.078 109.304 li
137.059 108.995 138.908 108.175 140.566 106.927 cv
139.986 107.788 139.593 108.167 137.738 108.743 cv
137.129 108.897 li
0 0 0 1 cmyk
f
146.861 102.979 mo
147.207 101.538 147.195 100.735 146.445 98.8154 cv
147.775 95.5107 148.527 91.5908 148.521 87.2881 cv
148.519 87.0088 148.515 86.7314 148.509 86.4541 cv
150.101 86.21 151.507 85.9307 152.679 85.6245 cv
152.687 85.8994 152.693 86.1768 152.693 86.4561 cv
152.703 93.0752 150.486 98.8721 146.861 102.979 cv
f
143.441 106.437 mo
143.667 106.31 143.892 106.181 144.113 106.048 cv
143.857 106.2 li
143.441 106.437 li
1 /1 /CSD get_res sepcs
1 sep
f
155.525 85.4038 mo
155.539 94.4248 150.871 102.124 143.869 106.192 cv
143.857 106.2 li
144.113 106.048 li
150.912 101.952 155.421 94.3584 155.408 85.4702 cv
155.408 85.1909 155.402 84.9136 155.392 84.6382 cv
155.433 84.6167 155.472 84.5933 155.509 84.5718 cv
155.519 84.8491 155.525 85.1265 155.525 85.4038 cv
0 0 0 1 cmyk
f
146.417 98.8135 mo
145.527 97.001 144.923 96.0361 142.886 93.5342 cv
143.091 91.7627 143.199 89.8818 143.195 87.915 cv
143.195 87.6377 143.191 87.3604 143.187 87.083 cv
145.099 86.9131 146.878 86.7041 148.472 86.46 cv
148.48 86.7373 148.482 87.0146 148.484 87.2939 cv
148.49 91.5928 147.742 95.5107 146.417 98.8135 cv
1 /1 /CSD get_res sepcs
1 sep
f
142.884 93.5557 mo
141.427 91.8838 140.699 91.0439 137.252 87.4619 cv
139.201 87.3643 140.74 87.2881 143.187 87.0693 cv
143.191 87.3525 143.195 87.6338 143.195 87.915 cv
143.199 89.8896 143.089 91.7764 142.884 93.5557 cv
0 0 0 1 cmyk
f
112.976 86.3623 mo
112.964 86.3604 112.953 86.3584 112.94 86.3564 cv
112.974 84.8784 113.101 83.4175 113.313 81.9858 cv
113.341 82.0425 li
113.132 83.4585 113.008 84.9019 112.976 86.3623 cv
f
113.341 82.0425 mo
113.313 81.9858 li
114.855 71.6206 120.906 62.814 128.478 60.1147 cv
128.446 60.1284 li
120.893 62.8511 114.864 71.6714 113.341 82.0425 cv
f
128.446 60.1284 mo
128.478 60.1147 li
129.354 59.8022 130.25 59.5698 131.162 59.4292 cv
131.162 59.4292 li
130.239 59.5737 129.332 59.8081 128.446 60.1284 cv
f
116.052 67.5288 mo
116.931 65.5562 117.576 64.5718 119.444 62.9722 cv
122.922 60.8843 126.915 59.6108 131.162 59.4292 cv
125.314 59.9585 120 62.9956 116.052 67.5288 cv
1 /1 /CSD get_res sepcs
1 sep
f
109.093 85.5151 mo
108.07 85.2163 107.278 84.896 106.747 84.562 cv
107.026 75.4644 112.082 67.394 119.444 62.9722 cv
117.703 64.519 116.929 65.439 116.052 67.5288 cv
111.919 72.2729 109.282 78.6558 109.093 85.5151 cv
0 0 0 1 cmyk
f
130.842 87.5908 mo
128.72 87.5889 126.568 87.5439 124.428 87.4502 cv
124.364 87.4482 124.3 87.4443 124.235 87.4424 cv
124.269 82.9526 124.632 78.5757 125.242 74.6577 cv
127.065 76.9468 128.022 78.0581 130.846 81.0054 cv
130.84 83.146 130.838 85.355 130.842 87.5908 cv
1 /1 /CSD get_res sepcs
1 sep
f
125.244 74.6401 mo
123.536 72.2632 122.804 71.0288 122.098 68.8335 cv
124.443 63.8862 127.638 60.3745 131.162 59.4292 cv
128.653 60.8433 126.46 66.8296 125.244 74.6401 cv
f
124.235 87.4424 mo
122.039 87.3428 119.993 87.2002 118.125 87.0225 cv
118.23 80.2729 119.732 73.8237 122.097 68.8335 cv
122.819 70.9409 123.403 72.1343 125.244 74.6401 cv
124.634 78.562 124.269 82.9468 124.235 87.4424 cv
0 0 0 1 cmyk
f
118.125 87.0225 mo
117.424 86.9541 116.749 86.8818 116.099 86.8037 cv
115.256 85.5132 114.208 83.9077 113.341 82.0425 cv
114.419 74.7046 117.753 68.1401 122.287 63.9663 cv
121.683 65.6323 121.562 66.6226 122.089 68.853 cv
119.728 73.8413 118.23 80.2827 118.125 87.0225 cv
1 /1 /CSD get_res sepcs
1 sep
f
122.089 68.853 mo
121.635 66.8003 121.597 65.7534 122.287 63.9663 cv
124.912 61.5483 127.939 59.9331 131.162 59.4292 cv
127.633 60.3745 124.435 63.896 122.089 68.853 cv
0 0 0 1 cmyk
f
115.695 73.5288 mo
115.327 71.0854 115.326 69.812 116.056 67.5249 cv
120.004 62.9937 125.316 59.9585 131.162 59.4292 cv
131.162 59.4292 li
129.769 59.6616 129.518 59.7046 128.478 60.1147 cv
123.086 62.0366 118.465 67.0562 115.695 73.5288 cv
f
122.303 63.9331 mo
123.151 62.4644 123.708 61.7554 125.834 60.6382 cv
127.541 60.0093 129.326 59.5952 131.162 59.4292 cv
127.946 59.9292 124.926 61.5327 122.303 63.9331 cv
1 /1 /CSD get_res sepcs
1 sep
f
112.94 86.3564 mo
111.433 86.1025 110.141 85.8193 109.093 85.5151 cv
109.282 78.6538 111.92 72.269 116.056 67.5249 cv
115.413 69.6499 115.262 70.8765 115.695 73.5288 cv
114.038 77.4019 113.042 81.7944 112.94 86.3564 cv
f
119.468 62.9585 mo
121.313 61.6284 122.351 60.9995 125.226 60.1206 cv
127.129 59.6675 129.118 59.4292 131.162 59.4292 cv
131.162 59.4292 li
126.925 59.6108 122.94 60.8784 119.468 62.9585 cv
0 0 0 1 cmyk
f
106.747 84.562 mo
106.219 84.2319 105.947 83.8862 105.958 83.5366 cv
106.001 82.6616 li
106.727 71.6694 114.682 62.6284 125.226 60.1206 cv
122.846 60.8765 121.521 61.437 119.468 62.9585 cv
112.092 67.3765 107.026 75.4546 106.747 84.564 cv
1 /1 /CSD get_res sepcs
1 sep
f
118.125 87.0225 mo
116.212 86.8369 114.487 86.6143 112.976 86.3623 cv
113.078 81.8042 114.069 77.4136 115.722 73.5425 cv
116.36 76.0835 116.875 77.439 118.67 80.4526 cv
118.348 82.5815 118.16 84.7847 118.125 87.0225 cv
0 0 0 1 cmyk
f
118.125 87.0322 mo
118.159 84.7866 118.349 82.5698 118.674 80.4312 cv
120.217 82.728 121.166 84.0835 124.235 87.4424 cv
122.131 87.3369 120.611 87.2588 118.125 87.0322 cv
1 /1 /CSD get_res sepcs
1 sep
f
125.834 60.6382 mo
127.237 60.0718 128.448 59.5815 131.162 59.4292 cv
131.162 59.4292 li
129.326 59.5952 127.541 60.0093 125.834 60.6382 cv
0 0 0 1 cmyk
f
0 lw
1 lc
1 lj
4 ml
[] 0 dsh
true sadj
156.457 84.3062 mo
156.431 85.6616 156.396 87.708 155.671 90.6182 cv
155.017 93.2471 153.875 95.5596 153.49 96.2295 cv
152.187 98.4932 149.765 102.706 143.869 106.192 cv
@
155.558 84.5483 mo
156.201 84.1733 156.501 83.7964 156.49 83.4272 cv
156.835 93.9404 150.914 102.095 143.912 106.165 cv
143.886 106.179 li
144.15 106.021 li
150.949 101.929 155.457 94.335 155.443 85.4468 cv
155.443 85.1675 155.437 84.8901 155.427 84.6147 cv
155.47 84.5913 155.513 84.5679 155.552 84.5425 cv
155.564 84.8198 155.568 85.0972 155.568 85.3765 cv
f
155.558 84.5483 mo
156.201 84.1733 156.501 83.7964 156.49 83.4272 cv
156.835 93.9404 150.914 102.095 143.912 106.165 cv
143.886 106.179 li
144.15 106.021 li
150.949 101.929 155.457 94.335 155.443 85.4468 cv
155.443 85.1675 155.437 84.8901 155.427 84.6147 cv
155.47 84.5913 155.513 84.5679 155.552 84.5425 cv
155.564 84.8198 155.568 85.0972 155.568 85.3765 cv
@
143.125 68.3335 mo
143.125 68.3335 li
143.125 68.3335 li
143.132 68.3335 143.138 68.3315 143.146 68.3296 cv
143.144 68.3296 li
143.144 68.3296 143.15 68.3296 143.158 68.3276 cv
143.402 68.2886 143.63 68.2495 143.851 68.2085 cv
145.291 67.9429 148.427 67.2573 148.427 66.3062 cv
148.427 66.3062 149.824 67.5815 150.759 69.3237 cv
150.875 69.5132 150.968 69.7104 151.041 69.9097 cv
151.125 70.1089 151.181 70.2944 151.21 70.4604 cv
151.218 70.4702 151.226 70.4819 151.232 70.4917 cv
151.236 70.5718 151.236 70.644 151.234 70.7085 cv
151.234 70.7358 151.232 70.7632 151.228 70.7886 cv
151.173 71.3296 150.841 71.3413 150.482 71.1812 cv
150.443 71.1655 150.408 71.1538 150.365 71.1343 cv
149.074 70.5522 148.652 69.3667 148.4 68.8784 cv
147.744 69.0854 146.658 69.5581 145.753 69.7319 cv
145.65 69.7534 145.457 69.7983 145.349 69.8198 cv
146.414 71.5718 147.427 73.6636 148.156 75.689 cv
149.421 74.3882 151.404 76.8022 151.5 79.1343 cv
151.556 80.5034 150.939 81.7241 149.689 81.2847 cv
150.691 83.1401 150.369 85.8604 148.468 86.4561 cv
148.152 80.355 147.119 74.9409 143.099 68.3452 cv
143.099 68.3452 li
143.099 68.3452 li
1 /0 /CSD get_res sepcs
1 sep
f
143.353 63.6558 mo
143.347 63.6519 143.341 63.6479 143.335 63.644 cv
143.339 63.644 143.345 63.644 143.351 63.644 cv
143.343 63.6265 143.339 63.6069 143.335 63.5894 cv
143.353 63.5659 143.378 63.5327 143.396 63.5093 cv
143.427 63.5054 143.453 63.5034 143.478 63.4995 cv
143.472 63.4937 li
143.472 63.4937 143.656 62.7261 146.544 64.7222 cv
141.634 60.8882 136.654 59.8003 133.705 59.5112 cv
134.018 59.603 134.254 59.6948 134.43 59.7827 cv
134.584 59.8589 134.695 59.9312 134.773 59.9995 cv
134.779 59.9976 134.785 59.9956 134.785 59.9956 cv
135.143 60.0366 135.467 60.0991 135.758 60.1694 cv
135.758 60.1694 li
135.758 60.1694 li
135.861 60.2065 135.967 60.2456 136.074 60.2847 cv
136.088 60.2905 136.1 60.2944 136.113 60.3003 cv
136.205 60.3354 136.299 60.3706 136.391 60.4097 cv
136.414 60.4175 136.438 60.4272 136.461 60.437 cv
136.545 60.4722 136.631 60.5093 136.719 60.5464 cv
136.746 60.5581 136.771 60.5698 136.799 60.5815 cv
136.908 60.6304 137.02 60.6792 137.129 60.7319 cv
137.129 60.7378 li
138.016 61.1714 138.734 61.6577 138.738 62.0308 cv
138.607 62.1108 138.566 62.1362 138.176 62.0308 cv
139.662 63.0913 141.794 65.0894 143.056 66.5601 cv
143.921 66.396 145.212 66.2104 145.808 66.0093 cv
145.765 66.0542 143.613 64.4351 143.353 63.6558 cv
cp
ef
148.414 66.3237 mo
147.794 65.7417 147.169 65.2085 146.544 64.7222 cv
145.375 63.9136 144.65 63.5581 144.199 63.4233 cv
144.205 63.4175 li
144.205 63.4175 142.765 62.9526 143.58 64.0562 cv
143.582 64.0522 li
144.208 64.8804 145.771 66.0483 145.808 66.0093 cv
145.212 66.2104 143.921 66.396 143.056 66.5601 cv
141.794 65.0894 139.662 63.0913 138.176 62.0308 cv
138.566 62.1362 138.607 62.1108 138.738 62.0308 cv
138.734 61.6577 138.016 61.1714 137.129 60.7378 cv
137.129 60.7319 li
137.02 60.6792 136.908 60.6304 136.799 60.5815 cv
136.771 60.5698 136.746 60.5581 136.719 60.5464 cv
136.631 60.5093 136.545 60.4722 136.461 60.437 cv
136.438 60.4272 136.414 60.4175 136.391 60.4097 cv
136.299 60.3706 136.205 60.3354 136.113 60.3003 cv
136.1 60.2944 136.088 60.2905 136.074 60.2847 cv
135.967 60.2456 135.861 60.2065 135.758 60.1694 cv
135.758 60.1694 li
135.467 60.0991 135.143 60.0366 134.785 59.9956 cv
134.785 59.9956 134.779 59.9976 134.773 59.9995 cv
134.793 60.0171 134.807 60.0327 134.824 60.0503 cv
134.729 60.0034 li
134.746 60.0015 134.762 59.9995 134.773 59.9995 cv
134.695 59.9312 134.584 59.8589 134.43 59.7827 cv
134.254 59.6948 134.018 59.603 133.705 59.5112 cv
132.988 59.4409 132.391 59.4194 131.943 59.4155 cv
131.607 59.4019 131.334 59.3999 131.277 59.4194 cv
131.271 59.4214 131.271 59.4233 131.271 59.4272 cv
131.166 59.4312 131.107 59.4351 131.107 59.4351 cv
131.221 59.4702 li
131.156 59.4604 131.09 59.4487 131.029 59.4409 cv
131.188 59.4663 131.344 59.4956 131.5 59.5269 cv
131.891 59.6577 132.707 59.8745 133.322 60.0347 cv
137.1 61.3647 140.5 64.3394 143.125 68.3335 cv
143.166 68.3276 143.205 68.3218 143.244 68.3159 cv
145.582 67.9214 146.876 67.4897 147.804 67.062 cv
147.806 67.0601 147.808 67.0581 147.812 67.0581 cv
148.478 66.689 148.406 66.3257 148.406 66.3257 cv
148.414 66.3237 li
cp
0 0 0 0 cmyk
ef
143.099 68.3452 mo
143.099 68.3452 li
143.099 68.3452 li
143.099 68.3452 li
143.099 68.3452 li
139 62.3042 135.232 60.4995 131.803 59.6128 cv
131.893 59.6382 131.98 59.6675 132.07 59.6948 cv
131.91 59.6519 131.746 59.6089 131.604 59.5718 cv
131.563 59.5581 131.523 59.5464 131.49 59.5347 cv
131.594 59.5601 131.699 59.5854 131.803 59.6128 cv
131.684 59.5796 131.563 59.5464 131.438 59.5171 cv
131.396 59.5034 131.363 59.4917 131.34 59.4819 cv
131.348 59.4878 131.359 59.4937 131.373 59.5015 cv
131.295 59.4839 131.215 59.4663 131.133 59.4507 cv
131.133 59.4507 li
131.133 59.4507 li
131.867 60.2612 132.893 60.603 133.143 60.6772 cv
133.072 60.9819 133.123 61.5894 134.184 62.355 cv
134.348 62.4741 134.506 62.5679 134.66 62.644 cv
136.295 63.4976 136.654 62.8335 136.732 62.5659 cv
136.74 62.5581 136.75 62.5522 136.76 62.5444 cv
137.258 62.9136 138.229 63.6948 139.302 64.9097 cv
139.919 65.6519 140.503 66.2983 140.943 66.9468 cv
139.933 67.0757 138.596 67.1929 137.27 67.2886 cv
137.195 65.6851 136.037 64.8843 135.311 64.6147 cv
133.717 64.0229 133.193 65.8979 133.883 67.2144 cv
132.623 66.5327 131.131 67.1401 130.922 69.1323 cv
135.9 69.103 139.314 68.8823 143.099 68.3452 cv
143.099 68.3452 li
143.099 68.3452 li
1 /0 /CSD get_res sepcs
1 sep
ef
130.846 81.0054 mo
128.374 78.4116 127.048 76.9565 125.242 74.6577 cv
126.457 66.8394 128.651 60.8452 131.162 59.4292 cv
131.162 59.4292 li
131.162 59.4292 li
131 61.269 130.875 70.269 130.846 81.0054 cv
0 0 0 1 cmyk
f
100.9 65.7593 mo
101.044 65.8296 li
100.799 66.3433 100.914 66.6265 101.399 66.8667 cv
103.448 67.8823 li
104.389 68.3491 105.101 69.4487 104.284 71.0952 cv
103.565 72.5444 102.37 72.8784 101.284 72.3394 cv
99.0688 71.2417 li
98.5835 71.0015 98.4395 71.0991 98.1763 71.6128 cv
98.0322 71.5405 li
98.9995 69.5894 li
99.1436 69.6616 li
99.1099 69.73 li
98.9028 70.1479 98.9263 70.3862 99.3662 70.605 cv
101.476 71.6499 li
102.5 72.1597 103.412 71.8647 103.973 70.7339 cv
104.398 69.8765 104.474 68.8276 103.184 68.187 cv
101.417 67.3101 li
100.688 66.9487 100.502 66.9995 100.16 67.6128 cv
100.016 67.5425 li
100.9 65.7593 li
cp
f
109.667 63.2476 mo
103.33 63.644 li
106.109 65.9858 li
106.575 66.3784 106.76 66.3569 107.223 65.8062 cv
107.347 65.9097 li
106.081 67.4116 li
105.958 67.3081 li
105.979 67.2827 li
106.317 66.8804 106.291 66.6382 105.993 66.3862 cv
102.806 63.7007 li
102.577 63.7632 102.384 63.8882 102.186 64.1089 cv
102.063 64.0054 li
102.919 62.9878 li
108.67 62.6167 li
106.092 60.4448 li
105.697 60.1128 105.528 60.1694 105.079 60.6753 cv
104.955 60.5718 li
106.232 59.0562 li
106.355 59.1597 li
105.946 59.646 105.943 59.8218 106.196 60.0327 cv
109.81 63.0796 li
109.667 63.2476 li
cp
f
112.75 60.521 mo
111.167 61.8354 li
111.064 61.7124 li
111.452 61.3569 111.45 61.1831 111.088 60.7456 cv
108.783 57.9702 li
108.491 57.6187 108.286 57.6226 107.905 57.9058 cv
107.802 57.7827 li
109.385 56.4683 li
109.488 56.5913 li
109.078 56.9331 109.01 57.1421 109.373 57.5796 cv
111.666 60.3433 li
111.985 60.728 112.198 60.771 112.647 60.3979 cv
112.75 60.521 li
cp
f
115.87 58.5796 mo
111.967 55.5562 li
111.515 55.2026 111.363 55.144 110.917 55.4058 cv
110.835 55.2671 li
112.845 54.0894 li
112.926 54.228 li
112.263 54.6362 112.192 54.8843 112.527 55.1401 cv
115.761 57.6421 li
115.147 53.9468 li
115.108 53.6968 115.066 53.5249 115.006 53.4214 cv
114.877 53.2026 114.644 53.2222 114.146 53.5132 cv
114.065 53.3745 li
115.761 52.3804 li
115.842 52.519 li
115.462 52.7417 115.367 53.0327 115.458 53.5894 cv
116.235 58.3667 li
115.87 58.5796 li
cp
f
122.09 53.6128 mo
121.938 53.6655 li
121.678 53.1187 121.504 53.1069 121.176 53.2202 cv
119.823 53.687 li
120.412 55.3921 li
120.538 55.7612 120.699 55.7866 120.996 55.6831 cv
122.229 55.2593 li
122.789 55.0659 122.883 54.7905 122.845 54.0347 cv
122.989 53.9839 li
123.273 55.2202 li
119.021 56.687 li
118.968 56.5347 li
119.192 56.4585 li
119.833 56.2358 119.885 56.0229 119.719 55.5425 cv
118.554 52.1636 li
118.399 51.7144 118.229 51.5581 117.692 51.7437 cv
117.516 51.8042 li
117.463 51.6519 li
121.307 50.3276 li
121.754 51.4175 li
121.61 51.4663 li
121.272 50.8218 121.022 50.7476 120.734 50.8472 cv
119.044 51.4292 li
119.723 53.3979 li
121.157 52.9038 li
121.445 52.8062 121.534 52.6226 121.414 52.144 cv
121.566 52.0913 li
122.09 53.6128 li
cp
f
125.65 52.437 mo
125.786 52.4292 125.896 52.4253 126.082 52.4038 cv
126.309 52.3765 126.442 52.3511 126.651 52.3179 cv
126.869 52.4292 127.192 52.6382 127.607 52.9644 cv
128.228 53.4526 li
129.066 54.1128 129.482 54.3862 130.945 54.144 cv
130.928 53.9937 li
130.275 54.0288 129.725 53.7788 129.169 53.3413 cv
128.426 52.7554 li
127.984 52.4077 127.704 52.2007 127.363 51.9956 cv
128.029 51.7104 128.395 51.1304 128.32 50.4995 cv
128.218 49.6421 127.444 49.0854 125.888 49.271 cv
125.341 49.3354 125.174 49.3647 124.831 49.4214 cv
124.488 49.48 123.979 49.5737 123.777 49.5991 cv
123.797 49.7573 li
123.982 49.7358 li
124.47 49.6772 124.63 49.812 124.692 50.3335 cv
125.114 53.8745 li
125.181 54.439 125.02 54.5933 124.524 54.6519 cv
124.381 54.6694 li
124.4 54.8296 li
126.78 54.5464 li
126.761 54.3862 li
126.568 54.4097 li
126.097 54.4663 125.879 54.3628 125.819 53.8589 cv
125.65 52.437 li
cp
125.303 49.519 mo
125.453 49.4839 125.563 49.4722 125.722 49.4526 cv
127.018 49.2983 127.442 49.8628 127.535 50.644 cv
127.655 51.6538 127.088 52.1206 126.155 52.2319 cv
125.962 52.2554 125.836 52.2788 125.632 52.2769 cv
125.303 49.519 li
cp
f
132.158 52.9233 mo
132.277 53.689 132.834 54.1733 133.492 54.2261 cv
134.059 54.269 134.684 53.9878 134.736 53.3198 cv
134.832 52.105 132.15 51.521 132.266 50.0425 cv
132.32 49.3433 133.002 48.8687 133.863 48.937 cv
134.572 48.9917 134.699 49.2144 134.996 49.2378 cv
135.063 49.2437 135.098 49.228 135.154 49.1655 cv
135.289 49.1753 li
135.348 50.2593 li
135.205 50.2476 li
135.016 49.6206 134.506 49.1909 133.924 49.144 cv
133.365 49.1011 132.953 49.3921 132.916 49.8647 cv
132.822 51.064 135.508 51.5972 135.387 53.1499 cv
135.322 53.978 134.539 54.5366 133.551 54.4585 cv
133.086 54.4233 132.514 54.1479 132.395 54.1401 cv
132.318 54.1343 132.256 54.1714 132.219 54.2202 cv
132.076 54.2085 li
131.998 52.9116 li
132.158 52.9233 li
cp
f
138.67 55.144 mo
136.66 54.7065 li
136.693 54.5503 li
137.213 54.6362 137.35 54.5288 137.469 53.9741 cv
138.238 50.4487 li
138.336 50.0015 138.205 49.8433 137.748 49.7163 cv
137.781 49.5601 li
139.791 49.9976 li
139.757 50.1558 li
139.236 50.0425 139.029 50.1167 138.908 50.6714 cv
138.145 54.1812 li
138.037 54.6694 138.135 54.8628 138.705 54.9878 cv
138.67 55.144 li
cp
f
142.939 55.7534 mo
142.771 56.1772 142.853 56.3843 143.333 56.5737 cv
143.625 56.689 li
143.566 56.8394 li
141.085 55.855 li
141.146 55.7065 li
141.437 55.8218 li
141.917 56.0112 142.117 55.9194 142.287 55.4937 cv
143.828 51.603 li
142.458 51.0601 li
142.142 50.9351 141.931 51.0601 141.537 51.7065 cv
141.396 51.6499 li
142.027 50.4253 li
142.177 50.4839 li
142.166 50.5347 142.185 50.5796 142.226 50.6128 cv
142.267 50.6479 142.32 50.6772 142.373 50.6987 cv
146.16 52.2007 li
146.271 52.2456 146.398 52.2671 146.453 52.1792 cv
146.601 52.2378 li
146.222 53.564 li
146.08 53.5073 li
146.236 52.769 146.167 52.5308 145.851 52.4058 cv
144.482 51.8628 li
142.939 55.7534 li
cp
f
151.562 56.3042 mo
152.046 56.0679 151.994 55.8589 151.542 55.5581 cv
151.632 55.4233 li
153.224 56.4878 li
153.134 56.6206 li
152.63 56.3354 152.3 56.3901 151.88 56.5894 cv
149.39 57.7866 li
148.685 58.8433 li
148.435 59.2163 148.47 59.4546 148.9 59.7417 cv
148.992 59.8022 li
148.902 59.9351 li
146.964 58.6421 li
147.054 58.5073 li
147.189 58.5972 li
147.625 58.8882 147.861 58.812 148.091 58.4663 cv
148.753 57.4741 li
148.808 54.6792 li
148.826 53.9058 148.73 53.6987 148.281 53.3784 cv
148.371 53.2456 li
150.244 54.4976 li
150.156 54.6304 li
149.605 54.2632 149.482 54.3745 149.476 54.8394 cv
149.441 57.3315 li
151.562 56.3042 li
cp
f
159.263 66.855 mo
160.476 65.9292 160.513 64.1753 159.542 62.9038 cv
158.449 61.4683 156.714 61.1636 155.373 62.1851 cv
154.113 63.146 154.113 64.9038 155.119 66.2241 cv
156.117 67.5308 157.904 67.8921 159.263 66.855 cv
cp
158.558 66.3901 mo
157.603 67.1187 156.232 67.3335 155.396 66.2358 cv
154.57 65.1519 154.806 63.6187 156.064 62.6577 cv
156.873 62.0425 158.337 61.6714 159.24 62.8569 cv
160.087 63.9683 159.812 65.4351 158.558 66.3901 cv
cp
f
161.041 72.1479 mo
160.978 72.0171 li
161.416 71.7905 161.476 71.564 161.3 71.1968 cv
160.626 69.7827 li
158.951 70.5815 li
158.525 70.7866 158.408 70.9546 158.681 71.5288 cv
158.535 71.5972 li
157.648 69.7397 li
157.794 69.6714 li
158.05 70.1304 158.191 70.1675 158.81 69.8706 cv
161.806 68.4409 li
162.294 68.2085 162.498 68.064 162.251 67.5249 cv
162.396 67.4565 li
164.031 70.8804 li
163.128 71.3101 li
163.066 71.1812 li
163.505 70.9604 163.617 70.7202 163.39 70.2476 cv
162.697 68.7944 li
160.902 69.6519 li
161.623 71.1655 li
161.759 71.4487 161.984 71.5093 162.324 71.3745 cv
162.386 71.5054 li
161.041 72.1479 li
cp
f
101.754 105.296 mo
104.802 99.6748 li
104.79 99.6572 li
100.676 102.28 li
100.21 102.577 100.355 102.979 100.624 103.388 cv
100.458 103.509 li
99.1357 101.687 li
99.3022 101.565 li
99.7661 102.204 99.9634 102.183 100.792 101.647 cv
104.352 99.3857 li
104.956 99.001 105.101 98.8701 104.742 98.3018 cv
104.899 98.1865 li
105.859 99.5088 li
102.976 104.823 li
108.916 103.722 li
109.85 105.011 li
109.693 105.124 li
109.346 104.722 109.216 104.56 108.931 104.794 cv
105.167 107.954 li
104.399 108.591 104.45 108.661 104.914 109.3 cv
104.747 109.421 li
103.114 107.169 li
103.28 107.048 li
103.579 107.46 103.985 107.78 104.424 107.409 cv
108.164 104.308 li
108.151 104.29 li
101.9 105.497 li
101.754 105.296 li
cp
f
112.341 111.644 mo
111.759 113.659 li
111.729 113.772 111.694 113.948 111.591 114.087 cv
111.412 114.331 111.19 114.249 110.693 113.884 cv
110.467 113.718 li
110.345 113.882 li
112.743 115.646 li
112.864 115.479 li
112.429 115.159 112.31 114.938 112.475 114.347 cv
114.211 108.169 li
113.453 107.612 li
113.391 107.86 li
108.617 111.026 li
107.78 111.581 107.614 111.604 107.041 111.198 cv
106.919 111.362 li
108.933 112.845 li
109.055 112.679 li
108.916 112.575 li
108.436 112.224 108.273 111.97 108.446 111.733 cv
108.536 111.612 108.841 111.435 109.024 111.313 cv
110.537 110.315 li
112.341 111.644 li
cp
112.475 111.151 mo
110.967 110.042 li
113.202 108.556 li
112.475 111.151 li
cp
f
118.029 115.03 mo
118.188 115.097 118.317 115.155 118.542 115.233 cv
118.817 115.333 118.984 115.38 119.243 115.46 cv
119.43 115.71 119.681 116.132 119.971 116.741 cv
120.405 117.653 li
120.991 118.882 121.313 119.433 123.126 119.983 cv
123.191 119.8 li
122.424 119.47 121.936 118.872 121.548 118.058 cv
121.027 116.966 li
120.719 116.315 120.514 115.923 120.241 115.493 cv
121.165 115.544 121.913 115.087 122.184 114.321 cv
122.553 113.282 121.981 112.206 120.095 111.536 cv
119.432 111.302 119.224 111.239 118.799 111.11 cv
118.374 110.983 117.737 110.804 117.492 110.716 cv
117.423 110.911 li
117.647 110.991 li
118.239 111.2 118.347 111.444 118.123 112.077 cv
116.6 116.372 li
116.357 117.054 116.085 117.142 115.484 116.929 cv
115.311 116.866 li
115.242 117.06 li
118.128 118.085 li
118.196 117.89 li
117.962 117.808 li
117.391 117.604 117.2 117.364 117.417 116.753 cv
118.029 115.03 li
cp
119.284 111.491 mo
119.475 111.536 119.608 111.583 119.802 111.651 cv
121.372 112.208 121.54 113.095 121.204 114.042 cv
120.77 115.267 119.855 115.481 118.723 115.081 cv
118.488 114.997 118.332 114.952 118.098 114.835 cv
119.284 111.491 li
cp
f
130.307 114.802 mo
130.701 114.237 130.512 114.036 129.823 113.978 cv
129.839 113.772 li
132.277 113.981 li
132.258 114.187 li
131.521 114.177 131.184 114.442 130.838 114.923 cv
128.791 117.8 li
128.653 119.417 li
128.604 119.989 128.79 120.233 129.448 120.288 cv
129.587 120.3 li
129.571 120.505 li
126.605 120.253 li
126.623 120.048 li
126.827 120.065 li
127.496 120.122 127.711 119.892 127.756 119.362 cv
127.886 117.843 li
126.222 114.681 li
125.764 113.806 125.529 113.634 124.83 113.552 cv
124.847 113.349 li
127.716 113.593 li
127.698 113.798 li
126.857 113.726 126.786 113.927 127.067 114.45 cv
128.565 117.259 li
130.307 114.802 li
cp
f
139.3 119.663 mo
134.531 120.47 li
134.496 120.267 li
134.848 120.208 li
135.34 120.124 135.494 119.933 135.402 119.39 cv
134.604 114.661 li
134.508 114.097 134.297 113.89 133.625 114.005 cv
133.477 114.028 li
133.441 113.827 li
136.59 113.294 li
136.623 113.497 li
136.229 113.563 li
135.537 113.681 135.367 113.786 135.479 114.448 cv
136.311 119.368 li
136.357 119.655 136.494 119.743 136.803 119.69 cv
138.371 119.425 li
139 119.319 139.15 119.042 139.667 117.999 cv
139.859 117.968 li
139.3 119.663 li
cp
f
144.82 114.626 mo
146.248 116.163 li
146.33 116.247 146.46 116.366 146.529 116.526 cv
146.646 116.806 146.46 116.954 145.89 117.192 cv
145.632 117.3 li
145.71 117.489 li
148.457 116.343 li
148.378 116.153 li
147.878 116.36 147.626 116.349 147.205 115.903 cv
142.804 111.233 li
141.935 111.597 li
142.117 111.778 li
142.373 117.501 li
142.416 118.503 142.351 118.659 141.708 118.938 cv
141.787 119.13 li
144.093 118.165 li
144.015 117.976 li
143.855 118.042 li
143.304 118.272 143.003 118.28 142.89 118.011 cv
142.833 117.872 142.837 117.517 142.828 117.298 cv
142.753 115.489 li
144.82 114.626 li
cp
144.466 114.257 mo
142.738 114.978 li
142.615 112.298 li
144.466 114.257 li
cp
f
156.525 110.431 mo
148.468 109.479 li
151.425 113.058 li
151.921 113.659 152.16 113.673 152.867 113.087 cv
153 113.247 li
151.064 114.845 li
150.933 114.687 li
150.966 114.659 li
151.484 114.231 151.503 113.919 151.189 113.536 cv
147.796 109.431 li
147.494 109.456 147.222 109.567 146.923 109.802 cv
146.792 109.644 li
148.103 108.562 li
155.416 109.411 li
152.671 106.089 li
152.251 105.581 152.027 105.612 151.345 106.147 cv
151.214 105.989 li
153.166 104.376 li
153.296 104.534 li
152.671 105.052 152.626 105.271 152.896 105.597 cv
156.742 110.251 li
156.525 110.431 li
cp
f
159.146 105.886 mo
159.671 106.226 159.664 106.542 159.345 107.032 cv
159.246 107.187 li
159.417 107.298 li
161.298 104.39 li
162.783 102.091 161.826 99.9639 160.453 99.0771 cv
158.955 98.1084 157.048 98.3838 155.498 100.782 cv
155.191 101.255 154.843 101.815 154.539 102.327 cv
154.234 102.839 153.962 103.296 153.765 103.644 cv
153.937 103.757 li
154.054 103.573 li
154.402 103.038 154.648 102.978 155.238 103.358 cv
159.146 105.886 li
cp
154.943 102.101 mo
155.005 101.985 155.136 101.722 155.376 101.349 cv
156.199 100.077 156.935 99.6377 157.623 99.4893 cv
158.505 99.2998 159.375 99.5908 160.046 100.024 cv
160.984 100.63 161.412 101.501 161.523 102.048 cv
161.72 102.976 161.566 103.597 160.777 104.813 cv
160.314 105.532 160.169 105.478 159.796 105.237 cv
154.943 102.101 li
cp
f
96.5098 82.2925 mo
96.5098 86.9287 li
96.5098 87.1689 96.5581 87.2334 96.8057 87.2334 cv
97.2539 87.2334 li
97.2539 87.3799 li
95.2446 87.3799 li
95.2446 87.2334 li
95.6763 87.2334 li
95.9326 87.2334 95.981 87.1592 95.981 86.9209 cv
95.981 82.9312 li
95.7246 83.1558 95.2769 83.4526 94.9805 83.5874 cv
94.917 83.4761 li
95.3809 83.1636 96.0435 82.564 96.2334 82.2925 cv
96.5098 82.2925 li
cp
f
101.004 83.437 mo
101.004 83.8921 100.781 84.2593 100.335 84.5386 cv
99.3003 84.0991 99.0615 83.7808 99.0615 83.3413 cv
99.0615 82.8374 99.4917 82.437 100.041 82.437 cv
100.598 82.437 101.004 82.8608 101.004 83.437 cv
cp
101.487 83.4448 mo
101.487 82.8062 100.843 82.2944 100.043 82.2944 cv
99.2529 82.2944 98.5913 82.8843 98.5913 83.5874 cv
98.5913 84.1304 98.9341 84.5386 99.6826 84.8745 cv
98.8984 85.1851 98.5181 85.6245 98.5181 86.1846 cv
98.5181 86.9111 99.2021 87.4951 100.069 87.4951 cv
100.96 87.4951 101.648 86.8564 101.648 86.0244 cv
101.648 85.4097 101.288 84.9858 100.446 84.6108 cv
101.149 84.3296 101.487 83.9546 101.487 83.4448 cv
cp
101.136 86.249 mo
101.136 86.8721 100.679 87.3506 100.077 87.3506 cv
99.4668 87.3506 99.0176 86.8467 99.0176 86.1689 cv
99.0176 85.6499 99.2905 85.2495 99.8364 84.9526 cv
100.768 85.3784 101.136 85.7119 101.136 86.249 cv
cp
f
160.658 82.8667 mo
162.55 82.8667 li
162.695 82.8667 162.742 82.8335 162.783 82.7632 cv
162.935 82.7632 li
162.847 83.3804 li
160.826 83.3804 li
160.761 84.812 li
161.009 84.6792 161.298 84.6147 161.625 84.6147 cv
162.519 84.6147 163.261 85.3628 163.261 86.2627 cv
163.261 87.2314 162.455 87.9678 161.384 87.9678 cv
160.746 87.9678 160.218 87.7432 160.218 87.4639 cv
160.218 87.3271 160.339 87.2158 160.482 87.2158 cv
160.914 87.2158 161.064 87.7764 161.568 87.7764 cv
162.16 87.7764 162.664 87.1592 162.664 86.4307 cv
162.664 85.6924 162.16 85.146 161.472 85.146 cv
161.177 85.146 160.865 85.2612 160.626 85.4663 cv
160.546 85.4097 li
160.658 82.8667 li
cp
f
166.792 82.7632 mo
165.119 83.2339 164.111 84.4097 164.111 85.8877 cv
164.111 87.1143 164.8 87.9678 165.785 87.9678 cv
166.64 87.9678 167.344 87.2354 167.344 86.3525 cv
167.344 85.5366 166.712 84.8804 165.929 84.8804 cv
165.537 84.8804 165.224 85.0073 164.791 85.3433 cv
164.968 84.1753 165.632 83.3921 166.88 82.8804 cv
166.792 82.7632 li
cp
166.744 86.4248 mo
166.744 87.3311 166.361 87.835 165.8 87.835 cv
165.296 87.835 164.712 87.3936 164.712 86.0479 cv
164.712 85.7764 164.728 85.6636 164.751 85.5522 cv
165.24 85.1597 165.6 85.0718 165.809 85.0718 cv
166.344 85.0718 166.744 85.5679 166.744 86.4248 cv
cp
f
29.9033 177.731 mo
22.6133 177.731 li
22.6133 177.161 li
24.4736 177.071 24.8633 176.592 24.8633 174.582 cv
24.8633 161.802 li
24.8633 160.183 24.293 159.732 22.6133 159.643 cv
22.6133 159.072 li
29.9033 159.072 li
29.9033 159.643 li
28.0127 159.643 27.3535 160.063 27.3535 162.072 cv
27.3535 174.792 li
27.3535 176.562 27.833 177.161 29.9033 177.161 cv
29.9033 177.731 li
cp
f
51.3574 177.941 mo
35.8174 161.682 li
35.8174 174.552 li
35.8174 176.712 36.2979 177.161 38.8477 177.161 cv
38.8477 177.731 li
31.8877 177.731 li
31.8877 177.161 li
32.0078 177.161 li
33.8682 177.161 34.4678 176.531 34.4678 175.151 cv
34.4678 160.393 li
33.7783 159.912 32.998 159.672 31.9482 159.643 cv
31.9482 159.072 li
36.6582 159.072 li
50.7871 173.802 li
50.7871 161.862 li
50.7871 160.032 50.2471 159.702 47.8477 159.643 cv
47.8477 159.072 li
54.8672 159.072 li
54.8672 159.643 li
52.6172 159.643 52.1367 160.032 52.1367 161.202 cv
52.1367 177.941 li
51.3574 177.941 li
cp
f
69.5254 170.562 mo
69.0156 170.562 li
68.9551 168.822 68.3252 168.282 66.8857 168.282 cv
61.3359 168.282 li
61.3359 174.852 li
61.3359 176.531 61.6953 177.161 63.9453 177.161 cv
63.9453 177.731 li
56.6563 177.731 li
56.6563 177.161 li
58.5156 177.041 58.8457 176.651 58.8457 174.222 cv
58.8457 162.462 li
58.8457 160.542 58.6953 159.672 56.5957 159.643 cv
56.5957 159.072 li
70.0352 159.072 li
70.0352 162.612 li
69.5254 162.612 li
69.4951 160.872 68.8955 160.152 67.0352 160.152 cv
61.3359 160.152 li
61.3359 167.202 li
67.2754 167.202 li
68.3857 167.202 68.9258 166.572 69.0156 165.282 cv
69.5254 165.282 li
69.5254 170.562 li
cp
f
83.4541 159.372 mo
78.1738 159.372 76.0742 164.292 76.0742 167.892 cv
76.0742 173.502 79.8838 177.462 84.7139 177.462 cv
89.6035 177.462 91.9434 173.142 91.9434 168.882 cv
91.9434 163.302 88.4033 159.372 83.4541 159.372 cv
cp
84.084 178.211 mo
78.2041 178.211 73.2539 174.432 73.2539 168.822 cv
73.2539 162.852 77.8438 158.622 84.2334 158.622 cv
89.9033 158.622 94.7637 162.492 94.7637 167.892 cv
94.7637 173.951 89.9033 178.211 84.084 178.211 cv
cp
f
104.291 169.332 mo
103.602 169.332 103.151 169.361 102.432 169.271 cv
102.432 159.433 li
102.972 159.372 103.361 159.372 103.932 159.372 cv
108.551 159.372 109.812 161.532 109.812 164.322 cv
109.812 167.922 107.621 169.332 104.291 169.332 cv
cp
142.337 174.401 mo
141.378 160.813 li
141.318 159.792 141.888 159.762 143.359 159.643 cv
143.359 159.103 li
138.948 159.103 li
131.748 174.222 li
124.518 159.103 li
119.988 159.103 li
119.988 159.643 li
121.848 159.762 121.908 160.302 121.788 162.282 cv
121.068 173.951 li
120.919 176.67 120.129 177.16 118.483 177.16 cv
117.754 177.16 115.698 175.759 114.431 174.491 cv
112.062 172.122 li
110.651 170.712 109.751 169.872 108.642 169.002 cv
111.102 168.282 112.631 166.392 112.631 164.142 cv
112.631 161.082 110.142 158.802 104.592 158.802 cv
102.642 158.802 102.041 158.832 100.812 158.893 cv
99.582 158.952 97.752 159.072 97.0313 159.072 cv
97.0313 159.643 li
97.6914 159.643 li
99.4316 159.643 99.9414 160.183 99.9414 162.042 cv
99.9414 174.672 li
99.9414 176.682 99.3115 177.161 97.542 177.161 cv
97.0313 177.161 li
97.0313 177.731 li
105.521 177.731 li
105.521 177.161 li
104.831 177.161 li
103.151 177.161 102.432 176.712 102.432 174.911 cv
102.432 169.842 li
102.911 169.872 103.302 169.901 103.961 169.901 cv
104.771 169.901 105.251 169.872 106.001 169.842 cv
106.722 170.321 107.771 171.191 109.091 172.512 cv
111.071 174.491 li
112.839 176.259 114.028 177.355 116.154 177.825 cv
117.816 178.192 120.341 177.731 120.341 177.731 cv
124.698 177.731 li
124.698 177.161 li
123.348 177.102 122.208 176.771 122.298 175.241 cv
123.108 161.742 li
123.168 161.742 li
130.817 177.731 li
131.508 177.731 li
138.977 161.742 li
139.038 161.742 li
139.908 175.182 li
140.029 176.771 138.647 177.161 137.237 177.161 cv
137.237 177.731 li
144.949 177.731 li
144.949 177.161 li
142.757 177.161 142.519 177.161 142.337 174.401 cv
cp
f
154.187 161.143 mo
151.636 168.132 li
156.828 168.132 li
154.187 161.143 li
cp
151.126 169.452 mo
149.386 174.161 li
149.177 174.731 148.787 175.632 148.787 176.052 cv
148.787 176.861 149.568 177.161 151.216 177.161 cv
151.697 177.161 li
151.697 177.731 li
144.767 177.731 li
144.767 177.161 li
146.716 177.132 147.046 176.802 148.007 174.191 cv
153.466 159.282 li
153.197 158.622 li
155.806 158.622 li
162.076 175.271 li
162.677 176.861 163.306 177.161 164.806 177.161 cv
164.806 177.731 li
156.556 177.731 li
156.556 177.161 li
157.337 177.161 li
159.046 177.161 159.677 176.981 159.677 176.142 cv
159.677 175.661 159.466 175.212 159.347 174.911 cv
157.337 169.452 li
151.126 169.452 li
cp
f
173.212 174.972 mo
173.212 176.592 173.753 177.161 175.583 177.161 cv
176.693 177.161 li
176.693 177.731 li
167.244 177.731 li
167.244 177.161 li
168.353 177.161 li
170.183 177.161 170.724 176.592 170.724 174.972 cv
170.724 160.152 li
165.503 160.152 li
164.304 160.152 163.763 160.842 163.314 163.482 cv
162.773 163.482 li
163.253 158.622 li
163.824 158.622 li
163.853 158.802 163.974 158.922 164.154 158.982 cv
164.333 159.042 164.544 159.072 164.753 159.072 cv
179.183 159.072 li
179.603 159.072 180.052 158.982 180.113 158.622 cv
180.683 158.622 li
181.164 163.482 li
180.623 163.482 li
180.173 160.842 179.632 160.152 178.433 160.152 cv
173.212 160.152 li
173.212 174.972 li
cp
f
191.513 177.731 mo
184.224 177.731 li
184.224 177.161 li
186.083 177.071 186.474 176.592 186.474 174.582 cv
186.474 161.802 li
186.474 160.183 185.904 159.732 184.224 159.643 cv
184.224 159.072 li
191.513 159.072 li
191.513 159.643 li
189.625 159.643 188.964 160.063 188.964 162.072 cv
188.964 174.792 li
188.964 176.562 189.443 177.161 191.513 177.161 cv
191.513 177.731 li
cp
f
203.617 159.372 mo
198.337 159.372 196.238 164.292 196.238 167.892 cv
196.238 173.502 200.048 177.462 204.878 177.462 cv
209.767 177.462 212.107 173.142 212.107 168.882 cv
212.107 163.302 208.568 159.372 203.617 159.372 cv
cp
204.248 178.211 mo
198.369 178.211 193.417 174.432 193.417 168.822 cv
193.417 162.852 198.007 158.622 204.398 158.622 cv
210.068 158.622 214.927 162.492 214.927 167.892 cv
214.927 173.951 210.068 178.211 204.248 178.211 cv
cp
f
236.138 177.941 mo
220.599 161.682 li
220.599 174.552 li
220.599 176.712 221.078 177.161 223.628 177.161 cv
223.628 177.731 li
216.669 177.731 li
216.669 177.161 li
216.789 177.161 li
218.648 177.161 219.248 176.531 219.248 175.151 cv
219.248 160.393 li
218.558 159.912 217.779 159.672 216.728 159.643 cv
216.728 159.072 li
221.439 159.072 li
235.568 173.802 li
235.568 161.862 li
235.568 160.032 235.027 159.702 232.628 159.643 cv
232.628 159.072 li
239.648 159.072 li
239.648 159.643 li
237.398 159.643 236.917 160.032 236.917 161.202 cv
236.917 177.941 li
236.138 177.941 li
cp
f
83.1553 142.001 mo
82.5938 140.42 81.1318 139.384 79.2793 139.384 cv
76.4404 139.384 74.6729 141.44 74.6729 144.296 cv
74.6729 147.372 76.8828 149.634 79.4668 149.634 cv
80.8096 149.634 82.458 149.175 83.6143 147.117 cv
83.9365 147.117 li
83.7158 147.882 83.2568 148.937 82.8486 149.599 cv
81.7607 149.446 81.0137 150.058 79.0078 150.058 cv
75.5566 150.058 73.0752 147.78 73.0752 144.636 cv
73.0752 141.338 75.625 138.958 79.1777 138.958 cv
81.3193 138.958 82.2373 139.638 82.7637 139.638 cv
82.9512 139.638 83.0361 139.587 83.0703 139.536 cv
83.3252 139.536 li
83.4775 142.001 li
83.1553 142.001 li
cp
f
92.1343 139.384 mo
89.1421 139.384 87.9526 142.171 87.9526 144.211 cv
87.9526 147.39 90.1118 149.634 92.8481 149.634 cv
95.6187 149.634 96.9448 147.186 96.9448 144.771 cv
96.9448 141.61 94.939 139.384 92.1343 139.384 cv
cp
92.4907 150.058 mo
89.1597 150.058 86.355 147.917 86.355 144.737 cv
86.355 141.354 88.9556 138.958 92.5757 138.958 cv
95.7886 138.958 98.5425 141.151 98.5425 144.211 cv
98.5425 147.645 95.7886 150.058 92.4907 150.058 cv
cp
f
108.165 149.786 mo
100.566 149.786 li
100.566 149.464 li
101.128 149.464 li
101.909 149.464 102.198 149.208 102.198 148.341 cv
102.198 140.812 li
102.198 139.91 101.927 139.536 100.855 139.536 cv
100.618 139.536 li
100.618 139.214 li
105.632 139.214 li
105.632 139.536 li
105.003 139.536 li
103.898 139.536 103.609 139.655 103.609 140.709 cv
103.609 148.546 li
103.609 149.005 103.797 149.175 104.289 149.175 cv
106.788 149.175 li
107.791 149.175 108.097 148.783 109.168 147.304 cv
109.474 147.304 li
108.165 149.786 li
cp
f
119.079 149.786 mo
111.481 149.786 li
111.481 149.464 li
112.042 149.464 li
112.824 149.464 113.113 149.208 113.113 148.341 cv
113.113 140.812 li
113.113 139.91 112.84 139.536 111.77 139.536 cv
111.532 139.536 li
111.532 139.214 li
116.546 139.214 li
116.546 139.536 li
115.917 139.536 li
114.812 139.536 114.524 139.655 114.524 140.709 cv
114.524 148.546 li
114.524 149.005 114.71 149.175 115.204 149.175 cv
117.703 149.175 li
118.706 149.175 119.011 148.783 120.082 147.304 cv
120.388 147.304 li
119.079 149.786 li
cp
f
129.202 145.962 mo
128.879 145.962 li
128.743 144.755 128.42 144.618 127.723 144.618 cv
124.85 144.618 li
124.85 148.239 li
124.85 149.021 125.139 149.175 125.768 149.175 cv
128.386 149.175 li
129.576 149.175 129.933 148.716 130.358 147.253 cv
130.664 147.253 li
130.392 149.786 li
121.366 149.786 li
121.366 149.464 li
121.841 149.464 li
123.202 149.464 123.44 149.089 123.44 148.069 cv
123.44 140.896 li
123.44 139.944 123.218 139.536 122.08 139.536 cv
121.706 139.536 li
121.706 139.214 li
129.865 139.214 li
130 141.576 li
129.695 141.576 li
129.474 140.131 129.049 139.825 128.437 139.825 cv
124.85 139.825 li
124.85 144.007 li
127.893 144.007 li
128.505 144.007 128.793 143.718 128.879 142.731 cv
129.202 142.731 li
129.202 145.962 li
cp
f
143.182 148.987 mo
141.499 149.854 139.34 150.058 138.627 150.058 cv
134.904 150.058 133.17 147.186 133.17 144.704 cv
133.17 142.153 134.955 138.958 139.102 138.958 cv
140.922 138.958 142.127 139.536 142.485 139.536 cv
142.639 139.536 142.774 139.502 142.875 139.417 cv
143.114 139.417 li
143.114 142.171 li
142.774 142.171 li
142.315 140.046 140.87 139.384 139.29 139.384 cv
136.298 139.384 134.769 141.864 134.769 144.602 cv
134.769 148.087 137.216 149.634 139.17 149.634 cv
139.952 149.634 140.819 149.464 141.772 148.987 cv
141.772 146.845 li
141.772 145.876 141.432 145.554 140.411 145.554 cv
139.782 145.554 li
139.782 145.247 li
144.372 145.247 li
144.372 145.554 li
143.522 145.604 143.182 145.894 143.182 146.624 cv
143.182 148.987 li
cp
f
154.682 145.962 mo
154.36 145.962 li
154.223 144.755 153.901 144.618 153.204 144.618 cv
150.331 144.618 li
150.331 148.239 li
150.331 149.021 150.62 149.175 151.249 149.175 cv
153.866 149.175 li
155.057 149.175 155.413 148.716 155.838 147.253 cv
156.145 147.253 li
155.872 149.786 li
146.846 149.786 li
146.846 149.464 li
147.323 149.464 li
148.682 149.464 148.92 149.089 148.92 148.069 cv
148.92 140.896 li
148.92 139.944 148.7 139.536 147.561 139.536 cv
147.186 139.536 li
147.186 139.214 li
155.346 139.214 li
155.481 141.576 li
155.176 141.576 li
154.954 140.131 154.53 139.825 153.917 139.825 cv
150.331 139.825 li
150.331 144.007 li
153.374 144.007 li
153.985 144.007 154.274 143.718 154.36 142.731 cv
154.682 142.731 li
154.682 145.962 li
cp
f
173.559 139.384 mo
170.567 139.384 169.377 142.171 169.377 144.211 cv
169.377 147.39 171.538 149.634 174.274 149.634 cv
177.043 149.634 178.37 147.186 178.37 144.771 cv
178.37 141.61 176.364 139.384 173.559 139.384 cv
cp
173.917 150.058 mo
170.584 150.058 167.78 147.917 167.78 144.737 cv
167.78 141.354 170.381 138.958 174 138.958 cv
177.213 138.958 179.967 141.151 179.967 144.211 cv
179.967 147.645 177.213 150.058 173.917 150.058 cv
cp
f
188.897 145.724 mo
188.608 145.724 li
188.575 144.737 188.217 144.432 187.401 144.432 cv
184.256 144.432 li
184.256 148.154 li
184.256 149.106 184.461 149.464 185.735 149.464 cv
185.735 149.786 li
181.606 149.786 li
181.606 149.464 li
182.659 149.396 182.846 149.175 182.846 147.798 cv
182.846 141.134 li
182.846 140.046 182.76 139.554 181.571 139.536 cv
181.571 139.214 li
189.186 139.214 li
189.186 141.219 li
188.897 141.219 li
188.879 140.233 188.54 139.825 187.487 139.825 cv
184.256 139.825 li
184.256 143.819 li
187.622 143.819 li
188.25 143.819 188.557 143.463 188.608 142.731 cv
188.897 142.731 li
188.897 145.724 li
cp
f
88.8311 196.147 mo
89.1997 197.71 90.4282 198.622 91.7983 198.622 cv
92.9751 198.622 94.2227 197.938 94.2227 196.55 cv
94.2227 194.022 88.584 193.249 88.584 190.176 cv
88.584 188.718 89.9199 187.629 91.7104 187.629 cv
93.186 187.629 93.4844 188.067 94.0991 188.067 cv
94.2393 188.067 94.3101 188.033 94.4155 187.893 cv
94.6958 187.893 li
94.9956 190.123 li
94.6958 190.123 li
94.2046 188.858 93.0806 188.05 91.8687 188.05 cv
90.709 188.05 89.9014 188.718 89.9014 189.701 cv
89.9014 192.195 95.5396 192.862 95.5396 196.094 cv
95.5396 197.815 94.0117 199.097 91.9565 199.097 cv
90.9902 199.097 89.7617 198.622 89.5151 198.622 cv
89.3579 198.622 89.2349 198.711 89.165 198.815 cv
88.8657 198.815 li
88.4966 196.147 li
88.8311 196.147 li
cp
f
104.957 197.199 mo
104.957 198.147 105.274 198.482 106.345 198.482 cv
106.995 198.482 li
106.995 198.815 li
101.462 198.815 li
101.462 198.482 li
102.113 198.482 li
103.184 198.482 103.5 198.147 103.5 197.199 cv
103.5 188.524 li
100.445 188.524 li
99.7412 188.524 99.4263 188.928 99.1626 190.474 cv
98.8462 190.474 li
99.1265 187.629 li
99.4609 187.629 li
99.479 187.734 99.5483 187.804 99.6538 187.84 cv
99.7593 187.875 99.8828 187.893 100.006 187.893 cv
108.453 187.893 li
108.698 187.893 108.961 187.84 108.998 187.629 cv
109.331 187.629 li
109.611 190.474 li
109.295 190.474 li
109.032 188.928 108.716 188.524 108.013 188.524 cv
104.957 188.524 li
104.957 197.199 li
cp
f
126.301 187.893 mo
126.301 188.226 li
125.123 188.243 124.702 188.718 124.702 189.841 cv
124.702 194.582 li
124.702 196.761 123.315 199.097 119.505 199.097 cv
116.15 199.097 114.429 197.183 114.429 194.672 cv
114.429 189.545 li
114.429 188.421 114.113 188.243 112.918 188.226 cv
112.918 187.893 li
117.432 187.893 li
117.432 188.226 li
117.274 188.226 li
116.308 188.226 115.886 188.489 115.886 189.508 cv
115.886 194.391 li
115.886 196.761 117.274 198.185 119.891 198.185 cv
121.875 198.185 123.894 197.358 123.894 194.373 cv
123.894 190.281 li
123.894 188.595 123.631 188.297 122.173 188.226 cv
122.173 187.893 li
126.301 187.893 li
cp
f
132.75 197.517 mo
132.75 198.236 132.802 198.482 134.19 198.482 cv
136.544 198.482 137.527 198.147 138.617 197.061 cv
139.267 196.428 140.073 195.076 140.073 193.267 cv
140.073 191.966 139.705 190.526 138.668 189.49 cv
137.861 188.684 136.614 188.067 134.155 188.067 cv
133.435 188.067 132.961 188.12 132.75 188.14 cv
132.75 197.517 li
cp
131.292 189.648 mo
131.292 188.507 130.993 188.226 129.957 188.226 cv
129.606 188.226 li
129.606 187.893 li
130.257 187.857 131.117 187.822 132.083 187.787 cv
133.048 187.752 134.119 187.734 135.034 187.734 cv
139.671 187.734 141.724 190.088 141.724 192.985 cv
141.724 195.637 139.671 198.815 135.227 198.815 cv
129.606 198.815 li
129.606 198.482 li
129.905 198.482 li
130.852 198.482 131.292 198.22 131.292 197.199 cv
131.292 189.648 li
cp
f
149.298 198.815 mo
145.031 198.815 li
145.031 198.482 li
146.122 198.429 146.348 198.147 146.348 196.973 cv
146.348 189.49 li
146.348 188.542 146.016 188.278 145.031 188.226 cv
145.031 187.893 li
149.298 187.893 li
149.298 188.226 li
148.192 188.226 147.806 188.472 147.806 189.648 cv
147.806 197.096 li
147.806 198.131 148.086 198.482 149.298 198.482 cv
149.298 198.815 li
cp
f
160.703 194.864 mo
160.369 194.864 li
160.227 193.617 159.895 193.477 159.172 193.477 cv
156.207 193.477 li
156.207 197.218 li
156.207 198.026 156.504 198.185 157.153 198.185 cv
159.859 198.185 li
161.088 198.185 161.457 197.71 161.896 196.199 cv
162.212 196.199 li
161.932 198.815 li
152.605 198.815 li
152.605 198.482 li
153.096 198.482 li
154.503 198.482 154.748 198.097 154.748 197.041 cv
154.748 189.632 li
154.748 188.647 154.519 188.226 153.343 188.226 cv
152.958 188.226 li
152.958 187.893 li
161.387 187.893 li
161.528 190.334 li
161.211 190.334 li
160.983 188.842 160.543 188.524 159.911 188.524 cv
156.207 188.524 li
156.207 192.845 li
159.349 192.845 li
159.982 192.845 160.281 192.546 160.369 191.527 cv
160.703 191.527 li
160.703 194.864 li
cp
f
165.851 196.147 mo
166.219 197.71 167.449 198.622 168.822 198.622 cv
169.996 198.622 171.243 197.938 171.243 196.55 cv
171.243 194.022 165.605 193.249 165.605 190.176 cv
165.605 188.718 166.94 187.629 168.73 187.629 cv
170.207 187.629 170.506 188.067 171.12 188.067 cv
171.259 188.067 171.333 188.033 171.436 187.893 cv
171.718 187.893 li
172.015 190.123 li
171.718 190.123 li
171.225 188.858 170.101 188.05 168.891 188.05 cv
167.731 188.05 166.921 188.718 166.921 189.701 cv
166.921 192.195 172.562 192.862 172.562 196.094 cv
172.562 197.815 171.032 199.097 168.977 199.097 cv
168.012 199.097 166.783 198.622 166.536 198.622 cv
166.376 198.622 166.257 198.711 166.184 198.815 cv
165.887 198.815 li
165.519 196.147 li
165.851 196.147 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 13.0.1%%For: (Josh) ()%%Title: (CLIS_PRIMARY_LOGO.eps)%%CreationDate: 12/20/07 2:56 PM%AI9_DataStream%Gb"-6$ZdT&OY1t[5lHIu\=noP3EE1W"e_m&]-j<pCp2G8GsWa&fAY@YE6+U_=!W-YjN,pJobUt!n>NL-2Fk'L]h;DMOG-:,M*tr"%'1`+qI'VOU\@oPdICJ#1p%-k76U1ITlXn/kRH\#MaX@+/p!rbb"OkVD2`(Q^cX#_'!8Yrd5%HOaSXZ=X+l@Tin_n),qs`lgGHnir%?gY"?GP@`UQIk:9hc6:"Id=`$>[;8,]=XR(LKQjFO_1&#Q63940>IF(o4E@Dq91a]gjVW$s)<JeDYs6groW;!hHjH:\D4e*ASs/N%HP8U#j$WPMrV_'>n.9OKQ'r,ReVF$Wh2S0#imm&3YCHT6fut9t>Q+(&^C$)&4%nsNlKX9lr@Z84$D#_RHL>&5oj[Gu+3lmI5oRJ]%?7`9ECcRW@ju3-Qou$,TGNV3Sf09,5ZWsighu/Z"llFXM@X5H[bAF7l#lc<$I=CqH/6-="0DZ@g]Y/e#[;EC^=sU,:2^j3<s3:!.%;Eo;a^Jj!>ir+:f's3RY^V;kFICDr8"uupH:QmU=bQ,jJO"1&QOoI?VA@RN#[Lk1Y\@kH4j43RDqk/A#o@N/i'@2S$J$j]KFoQE)%rc#9WrJt;?^O3`.H%18AYU)39p"]F^2@Sh'JI6eHN8?NMpSJ6@dIb\rD$,R&D%i$"m*,1e(X8/RIJ`unp+N&a^,Wm;\p`5eJ'5M%%lKWthIW>,OqWe(b2@eioJe2qe=!+TSGCR-9H3c(T,&,tO?gKDSf:UBXR!3V"%Yh.N1$O/lq"jpVh=`#5lgFTOgAUiKYN8[oWL)d4%D!tIE:r2VXDf<DIrK4>_eG3_E)M_q0"OBd"<TD=X1UR`-m>7oM46p.QQ2Ydn-k&OY*F7m"=$[%?Is:SRlLo:nADag<ABQ1nS%G`E%,b\L"lhNa\X$6D>kWd'KOPo)+HRnIh.V&-?.]9H4?bGM.^A^$(Ok]K.5X0?6rq-;mA`/L$p%cLNW789KlsI2NSLo>9JEEfJ:YXlY%n+$E3i;_>";qi)&gD4,u1CX&N^MYsNc+1IlPkTFo*`1\qb59FQb8^`%$j0ml!DJ1(J/SVWi@k*>W7;5OWtfZX<qrt(!G8[Sf?M<^%jPF_BIC%lpN%sA9pi)5j'fkr6)nH.O!t&n^s+!G*[&*[0/].O<6&Y4sg9$Ut]P%uX`uA38s%sEXM+^<rn3>Wdhag2*:a]2*lN\-X%L&V1[fcX#d#FI<,R>OZar6IC6jbu@_cF@l]^g-b-+nu:=BHR4D8_esRCAu49L>RMJqm;-H.\%=B_uFsKlaZub5@]]fr!t3_&-$](%17'\#\UN&,493TjJ$dN=5GgK7Qu5M4DE22;bS`(:QV5p/@L2o5$sKR!M:Nh/\!k(+IJ=m\bhm(UdtI>PJ&%_"eL/Mm.Q^<aY(=,f%H!#>\\IFo^V_Bd&>\K`bh&/;O3nMPs"6S;^g,?qk:g,rIcM@8ts"NRdREWq2k=cgI@7*9'^Id->:\BQ:CQ^6F;rW5fDWUc6J&n1*%80pFlZ;N^U"#*VF,'Tc9ii;cg]j*2Q1o@,lr+<'EjJQ_e9DZmtf(+1abs0`+c>cJQbs,LSn*)e2oKBt`^"2#_cXO^tdVo+f0)7[/%k+Cq&opSh-DuMaYj7i28J*QgHqAap=s1)M4?/PF$BO>7NenrtWd.<+oLRosCcMGdt+oh$FI]khYG=/i/RVN\VU;qoA?%]>=hDO,8%d<FpG[E%b(/Gr]S)X3a!?S`\M(^cYjSc:]"#Cd?0g+W9X[J5?Z:eKR8hnVA8BaJg2>(E$VS8f"sbJ7]9pN>l?>IQ<3\7!R'Iap"7%eRDssV,WVn;f)Wc@!1$P]9P2.Wp.+fWa2c^7J07I^KiEXR9"B^g_TQRH]`AOG\<I_ds%j1flR_#RoRNm/4`qm2n+P4;`hn31Tbq"%2dOK@n6Pk:K"a<N#!!/NLM'_j88\JE6<>a+W<`o_Fhi@7#aMT@'5XD?Zcf0a>!.?;B%7<`:#+@UO.`0[C,5H_Rt\>p7?@^d<^)aK%%i]98)RT[&eIXDY?,.oEDlG#S#IHaHm@/"G%%Ddp)5u#d2Bg%XQ:mD@7DBlZb8!Y.Oq]S=RYT2EFA'tj;(p_)!t>PMhlfDMck?32%KGG.)XnpCcDWT:6DTQ"m"uHWD\j#aqW39JlQaPVDhuVcGl2ViFqb<.,JUUK-+@/<OLAF5$XF3m33Mm<jKP/bdlCl6VI`"&9bW"%s%^j4ERm]-MXi)'R>!Y"Q_Ej,D`;p-04]Q?R1JU+h2Z^eUlnfg^oi5AGN8cq8.@W'X"RYA%D!b4SS#VlAi=KrPDMLq$3aV[T]bPeXH%56X6Xb8!XM6'2mOFGp3nmGW9IlW%jjrsTk=pL7P+L\*<EU%Ahs%pTo!J@_*p9J,B1:gc6bbr>SNE%Bs:3lHX0+nm1Y"`bjF_M*FI%AV:g'WhH$iQ7GdT&_agjheVA&r8q0!*duTknNZ^A$LMG#!7eKL<GG><nO'5[[/k&V#hDBphp<oRMf@<f((0BDoCrd?U7+nOVqR'*%LpR7DCaChD>5ORtlm1I\qNj'TXVs1AfDqnj59<T,LOa<9a%A0[cjM+k)qE=a#J!k7#tIlh!Ai[8`i%t5@_K^V:k/42P9Crha<2#M%=E)Gabt<4CBK"<k\eXcjYAl(k<M[_BZV;@!6N%#PLXg]16ODt!edecU8c,$WABF_;YuE2ObG``@*mc=F;;I63\Q;,b"3V<me54&E%Um8t\U]sK'bB,H&^8*iac*\"37jTg(-]F1d)tbu*AaJZL,BQ%Zamh-,L4=j8X-df`3_"`#>pEjQN%R59/&%S'0qN`NE!K)aCkOUl%/MqYE3Wa)79om'>B%RgI>$JERHGp):`Vlp'jIFrYANP7^'N+)8C[9]T^(MJ,GSINY5FSaa19POp,AIaNDBXI+Rmu`+El-FfEY%`>%-,eLQFpjXqdZd*cX^:B)^nnL/?eS-:n$BZt8I!Qd?r!QnE@G][8K5A$7^Y+%Jocq(4#Zark6KPYP*<=0/CRWZ*+a7q=bD/,TA,CT%d\s7S8`aJ$7BAtahp0Sdj^r@0dm^E[3MkEg$ffOd%SYVb$X8mjM!YCg;N$a8QT56?kLb5.mSM0(0ML5'dRO+.H]mns)5o`5J]4kW%1Z%P_SLjFn8r#R>&Ih@7@O]E1,Y:kWd3mV0^H'Vp0or:QeMAXeNXO\PG`P<PQLE1)e9_T5gBSWGr2uG+=`4gE&&</?+p2<!;^tF7%6b-[0.2QlrhL^E$hd?j(XX^P87nS8"/^JZ_J+Ga_"pU6^l-\!-Q#4?U_jX.C2p"@W>=XBA7b(4t-'I_uI'O>`D[S,Z;f:G_.B"nZ%6r^eJ,P4l]f;<%kV3^,]qHRe;bT^59KV'pe*jpiG;[j=ge=oo5j-u@5I#3=#YsdnT51"aX=tsrj"e.?_[Og<=8s<c)*hhX+l/VIn%KOB7pHA(Zfed)HAQM$!jl(A2fmDYBug`+]9T)4Fg''^,?gSCE+h0E@(II2KUX1Y[nUNU`IF7$(h?7>2DB.F-f05HJJnsJ$.Y/WU+%>p9u@r/u.LH7Y*HdN?VOb!0-WC.49tf#SfoLV<ZeAh&XO'HoIQI1AG:ID_4!HGDuV;=C=,A5Tjk7_q!&GoTEM,XX#kkn?iiIr@)'%`I:ju=S/Rt`DUe2BnrK?U.1!QOuRF9)^nR"#G7qD,BoB[Z#iMe*)g]Qp-k36L!d?lj038m[N/?A,["X4&g!NU%HK['FuOR'B#Q4Z%)8Uh`fQ]$\+^9Y@BCna+9dQ64TsG$POuqFjl5MFC-p?2!R8k5Ip,9=JG`f-*Qo!^Bp)S3TDj*>Zd\#7<3#^+hW4*s.B5%cQN=a-2%YLYYdXYW#B!\tVB+7a'OhPdWNG'k4CeZ7\U)$blIq&78(D*kU#7tWeu's2G`9U<lW2G!EF;+`UV10\>Yn(bJ[<Y3q+C2o(VhPd!G%4e'409\bBu@NjSJCPD1m,PD\]1?XpH'E]olJ#hoZ2tq4<G%3Ttk3:q(LJO4+51[%=8A14Rb9a$+\\B"#S4H]>;!RFq'TsM!dk[+7%3Q<u?Be%YKRc5Zh5o_nLQP.$S_CkLDdt[7t<47)g!njG7#(Gk5E"DZi+"KucY16[K6Z^ACmZ3``*p;ZCJEi=oc>G;?50AAWFuNOT%^=SY!=*M:Bh)kTOs/%HQ[gsS;o4ftmJ+MbS5[W>VA[_Gu^@^<q])E7)rT8"liVd\5hsRK\Mp'qGmHiC!_mcu6p%J+Mr`:mIj4>13%#cTJ\^>Etbr;>jYYE"qCoc9@Uhp$WMk!-<k%jA8)Uq^5c\9cdk?I8!G/2lD1Q?OG=^R]edgKd>Ib"iUD8Z#J&s"`ka72]umJ'4)5%Y=S`62(e5;IW;aukef92O2'c(=6J2e=7>S&hg]uq0ic'.pK/)YHU;;5lgq`*b"o5;qZOA*iTADQqWe&,EFY=*lMU)/lJd-eqM4s'%mEO[fXg`4mG;gDm..us#qsF(EI>29+3PW7trS./(qdW'iS).K-?3U]ZGtqo*h7Q8!g?eLAkO5m5m_cLQJp_tJ)df5pT&7d@4Ve@s%'DONMZVi)h=tJ0O',4rZqEFlMLe]eOCjDLus39Bqj],-dT-Fj4r8P=qci3<9[&YZ`BD!fd]WD*;rDOGQp)0k#AaicU@.&4X^Mt4)%BfF;VD!J@Og"G'TCj!0K>FZ.8rE4@,ceOpOCX8G*F&oJ!ca[;bf$!_q4fnN1$ore(eoolPS$cDNX3KpG[9ft99:@*o0aGC4/%afO%jEe@>Sh8R;eT/3*/;IfOm$<+bQ?Lq6S#'9=eRGjE>HAXA`H&5V`QN/X(N*Xtm@m`#/7f6&_g5Do93ReMLMlU6)sko]c!Z8efZRq+%\mP-R?ula)?hI^nHe7#dm@2u)_6'F(c;h@?(>[@1?.\ntFgc(<Tk_/H:AQc]`\NQ]pqc^=oA2QIIHqhjHsO:B4*,2HE_EkI/lqF%%kFHZ0:6ICcfEColY3j@amD9@A\"33C=_h6r=C^Z?e"3u5G1A5""kF]o[VL<W>2-K&e!d^_2U,C2DH>#f=YrJJbM!1W^c$&Y1o@7s%`giI)=dc*hR)/El1Yt*$9ktYW9O62B,O<\mos,&1X$`@l?O+O7:j.h0qYsLEZVS;<h?BK9Ga>CC+VcH0X&$IO;O7'BiOAS>^5$XM%F_"tC`G,$NI=&H8!Fs7o+hMBQX92B*nou@@,;Sdb.o/NnOf.=hODmQtjC_358tKT/.(^bi/r7BMMBktfO-do/_mS`)6][A-Y1adi%ka)bO%6nWR<qIs)=i`DGe&t+Z6(o+jEE,AL*Oi/5l81UIF>9AUT?u9hSC+[/B1:-ESjaAR@6r[&&4c6=alDW*ngH6'F]+]^Ct/C4%)t;4/pumZ]M4^%q96qBE%.a&_FRj[&S347.Y%(@Ela/ufb%L\FXIhmFrDOG65(D.YB/P"$Hd>$N;FJs^mlfLjnY8SWWJV=RA?(lr%oJCp@pa<G\13In2rpo5goW1R/CA_$TW9IHDSmh*P7o,I9<KuhIEMLR7Sp'R"nSbFi*m!sSrrc@V4B)KmR0S5S14_@onc$S7IW^J@%T?d9n_Z*STA=Pd9C8QP[8#aM8<)POB[8XHEQJA7h_:nG'%`0QTL_>@g&+cLcVt-snLng6a<<?8X<-26(<5_c.=<M0sMB-F]W_S%c%B]FZhaeRl=O,>tfnqa:*ViI[UMM>1QCj#6DTf=flar/g.5<Ph/#d5J%=-3NVk(&m*Cb..!@7t&]O4kI^F[WrE@Q"t/:(8!;@<7/s%)q&B;#RtphUQ4cAA!b]+B@LjSq?ajqWA=`&recL@&f[RD,mnf1OUQnH&R@:_LPFNBeooQQ"Z6KYfFZ17@0jNW_#?\4K4PULFV'I*%'tDUu75j)kK%tH6IYJt8b90UH+BP&JT-eYa)d;<SgiYp^L*28p0G^e.R'[0ICI3fb@B=KXbj)2^GR\'m>DBs&;lQ8%dO+U.)[8A?%#/.2._[*aX,N1,2LhHZ5Ydt\`$=gu0l,1TqLCnV?7ab9R;9stk'kG)_k%MYOlb]m\;)H38%)o8$,bHYH5r_PGRPp,V/r\Oj(r(h[%N\A:p^(03"-4#S;gsh)KhGNW:0E?i8#V:ToYRZE(-:j=,Ct8fC_$.`M>PGsk=9NDKKh0S`-HMS]m+2H"_Ze5Y$Ppep/<OMJ8CkU4%fi/MJE+Ue,!l9KadNa8pQntH&@+oF]($__0Ou>jWT[Wrcq]bf,jJ/q\RA?mJMgUG%-a?DjSV0!115di>3/MPdgeq[HY`bAC)(h[`%Up:W<9Hm'&(aZGO^a+?)e<.,CYZ4QK<6@7JHK+4@3#fL>mTpK\K?"(\iup`FKc4Fq_"&5^X!>mpmru_MOFVnX!-/'2=HPF**q3u:%.Vc3s)Np,Hh3eW3a=`%(KE^?jON9\#Q>*-KlAe"H^s<4(1k5nO'qr/`<;Btjmcius3UB"DmW56(o+CG:3T3"p3R/m+e];ZH$GZD@%bIf<0k0.,6U;rf$bAP1"53=>-SjG=*PSY!NEbXRsk'UmUdn_hVc_oRY.HgK!CKuk#j=.Ptn;D%=5O3^@d#9;^6Gi:7ZT0_&BiCpD%_QWIJ%GAtNeCRP]X'b.kI+d+.4(O*Y2Km0VRdjH(?YP:2bm!5c9P+'!At!E5l*"ZFC[m]dK@5LN"dp-!1,!$CXNAOC6c=<gZ>6a'%%+uR/MZ_'C%0b,:618r,JHQpfU52t+?UE(r%$EIc-,D.K6X7HDfT:s<P*lA=`K@D,F/:+F,oA3K+grNJAP)S'/=8:t0u8md6d3R*%h2k@[P$MRCLdDer;!iLR(c`>b#ddW3(@>%(drP`*#7p>Yb=t>^:ePsC/0RO7OQX%1?kW^EW$6gFa>d@dJ[Ei71GG'_ODqE`2InYP%A2m^53lAH2"0*Rj.[X'JBFf-S;&b);)3mY&D)QXk^L9chN%D7CaOHrHQjg-XN36Q3<SW^II1a<:"s_&E*%-l:j_C0`Bs,IdRce<m%CT3/n7_5&QC8_B&Eu+/A-F;;eR8$%*fu7WcB"JuLC:^J9^9#8%<sr>OGdZP]N`SlFCjE:)`3tLl%@K#;f^rY'8%W(ZHaW7k\l\c8%/UXtr`QCu"^0:AJl`7Fsp:a`.C@dA6+74Nbr*:Vg^RG2f!1]0VRcjjP(SH5-H33@>W&N((iXi%]TMC'J"j>0^jQ!T6PqA"1_sKR(%@P?>)VESE:SboqW4Wi8Kd[r:rnbEL+T#lM[LDh.'%u%K4`NNn0.D$?uUQX%A4\J-Vl/$t*EA'qP,[OG-\PB6A/)p8W3$&SL5ce(u%FT17HKuXB=$[IQql/@0r6]/'XHm.#dUCJ6#4;P257G=6YQ>qh4GVl/rQU\J-<>CL<4SI0?*#T@ARc\TfD,;9<fkf\WJuQVCF6Ul*%L0u(Vfja10iUN?nUl=;LWq4lgjt2YhC_>)t"CbFX`G:Xt'hS"[,^MaS4m8J3YqX7+'YB!G!4GALEi-+>K(+u38RifcVO02.'[gpI%^[6+k&AM8dJi"C5kfKh<Rmr&j-<*+p6c/t$rT"'5k8h-"Msq_5P'UY5b`tYQ1d6R)!pZ_ZmCNH45R3-nR,A:FQFn>1rj7\"q,ef8%73uPNP78B)OHBa,Q.g!#:2@d7F4nX^=.*'s&pnF>o1EbQ=d`Rd@XS\@`M>uTR7oHb<)Y*/Q5(>hg/h`eWEF?j#*k>H-T.^4bX1u3%4Y81PN*<R8,UQG7F&Kh0GTQ.ALUql%U&Kmu%M^s0i]6h65!J;iVSHgA<;T6OmeOI0(fsP^AE<>S`W)0f$53@`Q@mg"1.f?K$3-)#%2pfps;qclJP7P*rOdW*WGufu=gNXWq4S)nG9K!&gN*ihY`F]XI/dHZDC_V!P5C0UK*)D%+]Hkf?nmn?;ZgfjP)mX9qZ9:__>K(1h%A)BlBEhE]_eFVb9bcUHC-Vm:u3[mkad<l&9hhhVq2%:>.s.:@;gLSU%dHC)rLKnkk\<Wm^>o,@5=^X?`aE&;:LU3i$k,_[TC_dBN%R6$9jQd7lugu)Vu4o4rO4I+."SGr0$T5$#nGg`o85Lk3\nLU=)"KSERXIep_++L<Wjm7iMjA/3#>F?!@4AS!<d*lE;[Ft.^%g.nX%44%,`D=Uu=RGl8K184&=/Tg%[:ORSI2uMt+p:F\Xrj9AQhYfljhcXoQ-^/UYpm4(HaeW58dgU#.f8[[gNeQ[:HdkBLLuXnLSn+$I%`U#WrDkaN$n1C%?aIgH.1[I8Qq,D><+b0FHj7XP+pX"jd[>OLREUoe@9ge!f?8*0GTNn]g(QTfV%`Ephpal1"`K!+A=L*d]3Z)He%rJZBTp7?"K.db$X+/h(0\oq=P:)0(Rrsst.A)d!V[kc5'#:Gsb?;KaOFFHgEQ?6G)kEL'Pa]-Y'<',%6XhQ#_I;J@Tn[9Apn&2S;%Mq?4&pJA+0-cVVjs1;]L9mlH<Qt?`2a?&k1eJiGZk$jCa&uT!jEcoTsfMN*I:?%hFJ$'j(qWR4@#=#m77pTEnjK,DoSfIIbZDR]=%jL'p'?HJZ1>1U46H-b=@gk!dWptU]B2]fffB8%QP?267E83PEaSg]XH)Fe^7.>Gpb\47cN<@htr0j9AXKf3ofCgq@FQ_:!;_LYb@%GSiog'`=_75J;aI/4XJ[9f=un_di?:G[7Am#0D7[*"S:oTlPXe'JH\RV5ukMX.8__O*cJH03I>]huR3S8`!iT\qA*D*1M8?<[;ou%@c,J#r$pi4h=)#fr5%.C>hf-FL*7QHh<>8;Q`kPuIsR9/pYkQ=p%I"DYI9d4d)!Gc8585PrB.4X5B'd^\,OtK3K)31Mf#E!#R??0%BX1_FNH_U,%!p:9#G6]7kS/Fu'D4_OKNMdT&/l3J:UNq^Z36LSI4:sVm<".-;];JYCN'nM;.VHr5)Z5`BF8#V(h-=\+q(O"n;:3Q%ZD]%oi[dN&`8uV4Mn@?gM\LZ70c2g,`!B/(bnKG*s&0tciF\.`kC?3jqn/aG*1D@RKKhqXX(*@O0bR_3'B,"7i9H[8IuFM3a$f]4%,e,l^_C$p/AB_a5jC;fj-eNmdrmdeam)qa>(WA3,WH(RuOI1I<),!e)b#4L]<%_-s_KBCtY*a+-%a;JS0QD9im+;5aer`P(nMZ4%%=d]/5R&QL@@P4O@n8oa(d%uDiO6:$HB4U`!A/lk']\^GIV`A.,`hi:SlqEqAWV.O7d`OppFQSMAjl42!kcD(WWO)`3[g"QqGj[.N%Yj#;MCsW'fLjIDF4CiuZ=L;d#YhW<mpPDR>PM;CKeEQ`1cUPpd4i["LHXE@REdi.[Fo-p;9`6JY;LUMTs5t8c#DOOg7q6$ZifB^#%/gld^+29pA.]_jT09;DKWqu8/USVG"If/bM\N3pmpuTnD+'1>1O_`/IVu6I'@1#5%&AW"dqNF]8fD1XgK`b+Nm"kVF:LNeZUflX9%ce]/qUX+"+eam`7&P;mn?@7-\Wqj9ps/jD!a:8N$eeZTc+rZf9-Y6mggCEr*Be*JTen7&Yb%01I=#XFI-M_+<_qm?*`YZ<H>FYh]%-hB)[8ns4sV=J0eqBko,Pc7IKhd/N`\(@tJq-ELJdbi#=LhAGh(:3AoZf`M-Gt?L0q2)$.FlVNO\u>TtJSn7bA9;MFllWIS3Vt;%%SmM_^2N]toHWF_Be!)bEGr@CKFl.a]Q"O-BAqeYlNQ9ApcXYu+Qrk>,oumchXRL_2/W8fNjOph`Aqam@id!M/[Oe"QiRtM]*_r:Y%Me?(8[Oe#*P@)m[o#qHeXRL%/4:`gcQGkX14BiTI_o]5rn]V>i43QX0-V(G,.J(,o-c2<aDMN*J3dbueF].CZFlW#uPko'J`m0@6%LA[Oq6`=u*qdpb?$1PAbN.:W2Nt)d5iBNaH%YsRuqZM'7@JhLgr=So'.<>80oUj@S*MItl:XJM8r?oDX,P:H&aOqZ/s($iboKU-0%o`RY6dpaN*-V$bunIMsUR.1L8.8oHHLJUX-cAALmqBa\Sa1%a;lh!lO<ti3V:=\ZoR_:bjUMEc65GHo5j*S@tl#sIuq5<$&S+$:"%pBBa7L@\-YEPlcb`cc\!D9M`uk'XLVg'F6fPEm6=(&^a/XRgcPF-P-L^9]ogqMmYSX*?OK3ZgLL,s=IC4e7p7ceasijn!(ro#k-m%A3#@_3SDA4[=*5uj%%3"+/CY81ZaB;1XFXuZh4t@iBpmuE+eLq?D`1S-9D!B=!,kG=`7B:mQT"V8+sKRqRelJ!2r7*5C!<0'i1Ho%lMSQUIq[I"Z9$&.LR@!R)pn$)C4[&k=Ws@dV^KVIR@.aMAcb+f/jDmEOBIH_N*IlS'rF$6MB&1Md`M="<mLY$14+$%&@j9^,1k!5%]sXBa].T,+)rtsE01YU(@D(hI\MH6iG?MnkjE`gs2k;9cP8uF7E@/0(V$#iM,NZ#^b[tZsao'2IgqgF`S(DsHG/_WNCTUjD<m,U+%R9ZPrPj?eER25=X>a<m_ok:a<MPfR\/`lu<?LBst`G'B_Xu8A*P9cJS'f)=?f?(^;<mENYj4P)+!M[UHY?`-Hb-T%[5)sh@'pl#g%mrj$:J>_"nr-G6LV9&%37mDbimIT914SXmnT&(Wh(DXF4h/G9a+jT?Jhf=WJ-[3/oEl/9W!4\u5>N;%>J6G*/9[-?rOscg7WqW"K%4ir"kUTNSi)Ef4ua/@*5R-WiP/A5UIh))Ub:<o\'bUU/F/m^Xf,>l%$c=A<Ul5@'WpoPTqWs@d1kW->AY*X3?L3P^a\tEpY&+k;B%:q(3.7(;/4\*OSd[s+(kj=tOPEK6M4O<*8VLT*MP9^m^VaXUFAGkt=SJ[<Iu,Du^Q0,MRWJhZIj:L#SuoRsMbDopr%M[%-LA^sAq%"t)&DnBn:P\^pA*:&[K2FB5R%2fbXPF!d4q/E<Q3HWEm!3\0quXthtY>42B8\KabFb"SA2Z")k+JTPetnt<BhS=Z4qc^ct=nl'YZ%3P&^Y7o%O8jEarl:j:XW=j!;?l!3&oYmk%H.p'QiWrn*;Q]#2)GeNF7kp(sbpX8Han[9>R5GAM5`'fg67H?69doWbJ>ejA\]7K@b%okR&N?`O[m^6W'=p8"b@Wen@>qNER=S%*XDMYF9qX_T#,l'e,q?'TW:4lOPk!uJ+?`JnZZ91&Xlm6^77O1=Q7l/si#SI59$NhZB+%kGKm#kcJ>:rDOD4glAdSiJn]UV_nMkoCD6i(3a%;89Y0Bi!7Z5Z3u7GEoV;f/0/7=O&?d:d*e//*bh%F$dL@5QDK:O4tU%ZS1Y:H%<sLBM9?V=A1;d^;;PU@-bg3JQeB9)'#;;-#FF>EK(HrEeSr#J=5a%C,3ZW;A$;&Z.q'D2(IZ%`[AEKS$,h%u`H')X8(J2dFm4@ZM%XoA&TiU7(cr)Fi@fak.i<BlI\:KMI85F$Cnjh<t:q'/]3X"sYQEKOU`"2CjsMu5UUpf2`IjO`A+YNk-l^CCKt<?E%QFZAlkqRFVM%_gu/p('OCk*BWKJ(GoBG<.Vf#)s6Z<*EJS_Ek^>@n$6%"Q_p>J^._mKk4?rTM3!$-pr)Q7D9@+eHb*^^VK1^n*EgtXcc7BS6c(ch%mVZCf?/7\Lh7idYdqnG7s%n.>*a`+Mo'6/3@=*4qq<Z)[mV_b81N2Ef%hG:<h>XG.9;/kUG*iL`)t\>>p-X"J=ZuZV+6`B)_k6rH%')s_nZS,p?rf;AK8a69SPt_27cu1N'AU#/Z>bi6`1\1F/MY`29eN(27ADYc%-bgn9Imr4;5#>Q%3[/\BNKi&IDV!>/^co#\EDeme%_m#"8.VL,#Hd/5.0LS_O(dM?Q4dpJPUmc;CmqufNqJQ5D2iX;TT>?n<DQN.;9J^mdb1R;'iub9Wm]=dIdT+=Ln,DTmRs,mdViJ*5%X+%BR8KZDs6HG,(;HQEIf@mi[U3$51cL(?e\(g6';^oDm]=Re*5*/nGR$kL_IpFT)I2lstPT0Ff8crt9f^re:`FOHSEIUd&L">IY%r&=N@-Req1loHs"NR[J7/W4`*9e;60[?gmORsD6F'84$5bWoFs`>h;&EtI(20'Et)]GD]Ai<p3GcTt_rYNmflaEnEF">S.ej?3`&%6U8sF&:#ooRXe]S_XBpg"*POb^FB5I0r$?!"k#8"#!f%*Lu/A,9*,iK+FYC5Toh>H^Q3olL)c$,7mQu4@,eaE_`W$B)q_F64G2Vr%JLXOCTK$?_`OKMVS1oP(A2>W/(dSJ6Ao<>U_]EW'7`]4-SA7B9mMQQ`PX'h7!oekG8.\K\S598AT#fdLA-ZbUA$T`DS01WSl5:9`%N1_$<%#P]f:lK/o`<db;6+3K$8D$"=Ef#/J,YUTk-12Y4n5'-2QmNqaT`Rar9gHQ]"]/V+i*].99hJ7$8LO`X.psVGLV[Y)^dpd%%'56M8(eMeWpgXBa^Ar7Z@OrO]UE#_8].qkSS>MNiMJ.UjPS-`R9lQP!_?n3g9G/1We-_LmX:`<_UIHL_8Jm!b-4*?Y7UV0HK&UtT%)IXt=,stB0G_B6)V^Wp^:c!aQPS-_fcJUOUKO^f60M*sPX9m1HgTspGk&OJ<3+m3Qm3S:\SA?YpQZ.Ot#,b^5_D0IVQnZ6)e=GM;%L0*R7+`@SW9=Mqh3M7^aJ:_nRW(A;.TUc1";@1F#kAZU$@+Su/M>8E*`1j/5Z)_fPCrOO=llhbCjPXpun*3ES#Z;Sogh"Srg6@dd%FtA#J%ML'#<m&IkKTOC&g!FNG5ZE#YRCtt+CJC71.S]NJbqRR$D@U'Whl"oppWJEaZlZ>2Y:&<X^PfNoUuc0Jb=`U4P>%FI^Mb/:%8R>]H4-c,nI@Kn+ZVO"d3QDWuVcGTk($3]/Jp6TN9cq.5W93nOl&iWF2;_Be.6WjSGE_&gG/,AYNna8N6q<QSJq?MI4mms3'-*?3%=IqIomSqmb*3=B8r4]TnHb;+_c_1`Z$^ijU?=OGLV_KqrNr:3%7'$)am#e"qBT`m4G9\#!6#VV^7U84Ce@bQ*AhUdG9]eFVi3?\o%X-FqI'51!<:?n(Kn;S<19'72@,rlH\QYKZ%$ol5)j0fZ3B1tK)L+s.8n=3B[g1Q*`.94974eqa=_aR>d@r3es^m%Tdk_HV\YW8<i%/XTF\;[RoHmR'TY8pO)>T2WYb+XJp%&5=VCYsK?&_4cEnN(`"\KfY\A81*O]eMbouZ;%g?ICjoP\:R_YItI2Xc,!0c(8](/*Lu8p%qA@s>/*fZ3\N%G`00`*Cj1?mMPGr2,msb,me!suTc<8_cK+,P%ApBCHSqKo-cS.;a5%6kOp]@,S",'Gm*EDO>&r8;(T;o3gi10uu%`L%'K^uV+Z7JZSIPnYuW9,Z4VVAnRVB<=h7H(Nr199b#hC(j:!JqF_6@"cOf-3jnF0PuA=BRIm8Cnd(g\[(K%$?^)fS).X@%8j*c%D=^m$$=+?pfehsE1>!/]C>lGGCpN:=Qjm=4]S=eJ[250ZR!7-,!d^D3r_s\k1NjPH5p,9\LSg]SH.NH2[r+BO5!\qPA_]?3_>-o?%5R*SZWE%.DP%[*oVp-.<Jr<]7YX@ff0P@3C3B8'UC1_)7FlEl89EPb_,c"S5d.QdVaf*c]/%^'?=rHfM18hAb<+pkW@$-.V#6/oR%fkd-RWu:BA."0!cXU>KWoXr4/iSW/$F,#3&<p'8\jVsY(8qdFtW%jbQBJ":)f[nsb@2cf%`2d[Y\1fW)IIM@5OJce*8Eem$)X'4/%<p5#QYL&&XCj@1s!)L/uYr3,t/7f\^QK4UTXY1OJ&9"77/VaJ:)*ufHZ9XXV=[PMi$D9Z(J<>]4geo6kZB&4QSIEXZ`]Fu:oLf\S%.$Ga1l5]>hG6uDhJgj7KWB!6G'Qm2>).D'`9G;#7AHNlSjA@%G+"=pY<,BuN7^:1lf<ECS&ZLL]+*C:Kls3pu1It_je.&AEP'Ssb%Gt5OVNKl>;8FX9BfTdEk7ct@21aVE`F[J`PTH809^^!/;]>Oq&f9R-?%51Un3C.QdXR2r/_cg?.DJ6[tI0nsj21EHn,Jf[^a*QP'%b\=:4>nkg(D/6tAArju0GiAa+2DHAT-r@_T1nHY]7g0=%e&2@>AdMU3#%Z-H/6-?+NjCR*KdN6fhqhIFM#pC`A:O`@)^>hVEB3/P%-nPG'I+-AsKJtGlnNHFLBGl+[p>*M4ok"0sd3asXlh?>@b_OM\-?UGC>Nu9%qM\FuO<nGCBiME18Kc,O+Q\D`'B5_?Ci@Dql1uCB%[N1B71"Ij[0+2li/e<>h75r;c%&7^%DD$$6-jTYV2d3)U_dLsI^l92!,?W%;GNbZJn-Xn9!FnoleI!Q?P3"mYC+XX?PDt&DG>cq`%20Vr&d\Dl_,Y!Imh\:eRp#M2AJe`"BhI`&,(06V@9=+*>8;f0`_58[S@d"C0JWI_VbXR$A$>MGYqoD0?6%NE4X=gHj\gZen-u8IN%&#=>.)tkmcO+Ed&1^Y".K.&0,f'H+0C84O5!KpEg2)cF%6W]E8\D_WEZ9DXB@U<eiP!X]QK(-e&i"h(R(qJSB_Gp#<EAXsE"Ju&j%,?nc])di`ec':sNJ_/$@A=O*]`?`4CX>:t?9Um6U:/'1l!lKi#Ch%$En5oZ3U9W<bP=HiDWhh*gUL`QE.`b?nQcMo(<EgqX?TL-j%KPt?jY"^_6fp&kLqgOMX4VkZuYkZW]0b^.7/U\&6YP,rf&+8&jg@)U%F$II*p3m"b%=U%Z6Q%*f4h*SaOY5d?E*5^)G:5+#^r<Mf%@&7ETTQ8MMNFj<)>Krkagh\;V2-1f-"r'7/@'B&[Y\qp8jZA9$;iG!+C4h0KKb;0*q\s$RT1D7oYYD3.dH>@JYX*6h:ceE$2lpcX%h<.,K0W"uX)8rM\+R:u<0<]9&LjcnH^"q]%d(L]aLMOKJ,6%P';-S<2*(o1HX0Ue1mEfSa,"2Tl#,OH'oJ,NB8F\5-8.l5Z6oG4D%chj]+i%EP3f+qJ"E;a)Uio7K;*9pp0P;T/X_;<2mT#SjF):TUHO:Y-5RAK#T=N"osqah5dfYG$MX14csbA):EPZc!D]+5E^B&P!h%$Y-(48\`Nj1(9M7EK/)/ihqr[_W3Aj\4:2D,)*fH&l;0D@SBIBRAEdN1*9(NXK3>t^_=GTr^9XjFNtrWrN^H:I28#Qk"5KjhGX/9%N7"!B:SjmS5E[*6OER.WW=Jqe;]U<Bm<$lUG.sNH*8b:@kTMn+ap^>e9I4DuQP63\I;<IFa*B6fm_1)i,"ZghS1*dH?$LL@Zb*n=%Cd\,a4"ZC`]r)1+_4$E#?g0BrKi'Hq0%(5!2]sTPNmS:bTJd@W@4AQmc;;[*ol89DHY"WHCRT#t>[*/dW/&rFH$*@7XJ&KKm:Crd%-*>;;Hi]";K'<AQ2(oS6!Ke@bP5:og;9$[f_)?;9`0&Ja?beF%;\V7;)bCXc3&u2$,WE""DXo^gDfdD-RHj.J)6$:r1d])VDer9U%!mg*94dJ,RIL`@rAn@Pu6HApKBCWg&F_9R]!&qjbHd27Q4%"@H/Q5Ok(lu*=4rY:sVM`7I9N,H$8--nL*g\c/?!bVUaej(d=C0+J%YXDh%]%J=p6l&^cR8Z4$VBBfd0Br_!qo@B=</"@9,3@(Clk@f)-1+W7@A:6fmaLpm5jg)W1SGR2PfH/s7ZO^LIOj/,e`UGE1t#Z*%)3k,3qq(F`47&rp^V]1YRjUl`Wo.:Ym7.UW2EFQ5MID20K(B\9(:I.G7o2!(7TP:U))oUYGbjbD/J\^nHMH7`17]As?l+d3i43>)%"I7)&HVH<>?=pCFT%([mPTB["dqZU`#p^?#fR<EJQBEPIhKIc<R>Ql`E3D6D2#V:g&Pd=-%;JOh!&fi!GaZ9Y-1=i&fX,q$</%(+%@%Z1.Gqd4ipmaOVT,X/<WV#,R,I0.AX2&9<OE.W@DeZ'mb>m+N_J;O`JW62A'h2d97Xa.MIB<0Y,E.Lb=Y3('opECtXY5%F?tlV/%qj`Wk-*`SCbh.`]39(U7V[+AU\]UpABOM7oNj04kB38a$^fYTjQ]lYMX(2Ng;p&%i1[;I^V21pQ:+>Is-EfZO.VlD5*tcMhY3GKk%@Ak_Y=k<q_P#MLOO_UMD"g-9l!QiLAY>MNu9I>N4;9S)W7WWo5iKoBG$iX6;fs.Ceh&rIS'p9m,XC:;3op%:RF$sg1/!aH4%k3.9%_C,QS?IA=(B=o9!4^th>I1uOHZd0eLg1RurmX6!e7\o=Rf5n/gf:1:7)5X1!a82VTN>@a)^"-AV0dRC7DaTA<'KL(PB>:P0>"k5M%F<4N(XHQ6E+oSgHiY"F[7XBR,2!`?V%sQdo35o(6P.TQB602PL1]OV,S@bo"&P&*4(MUoJ'0&ME9b>.Xj2QJ!V\u8\l#s:[4rA'F%g<2V'#"u^j;1+mX.P8j@[`"j#%1NT+nMJ3?pa5ec9b7f`c$S3/C1s*>70OHB!V%1C!sD!c!dQ'9c+UHj;//Ap%7GhF6hD$m>!p2/%>-Dd#M/`0-<P"PF8>#@*=JEGDQ"h3K6Xc[A[NW;gF>@agWd:,I/F90RZGe?=a0q@mjA'W+gbg0d50(MaT:r3BVqT6Lan.>AiFIrN%[g]Xjm<)hcVQ&dfhX8&`r6'pP%Wbcta.eo/O6hT=`XeG4oRY+fi`'Cll?6fmgP(&JFW4]8h1up7Xc7$h2fJT=;@s"$8m.b.%0d]V%=e6mf<Qruc5cp=Zh[?JL;R*l@E8(KK6NRS(GI6-;0Q1QuepSg5a]*3XL-?WhL@n[<GjUR@@p7MZH5UG#]T+11GX+n]Q-#IKekf1r%_iY[R2hSaLh]eRXD$Pce9$;6L10HE::%7cdJ^F)$$6+`c!K/h$7!7@UQ=b5j?:0t=J<MYg4*<FiYST,UeY]4J%ZaHoZ!!*oD/3pU%p\2Vp=Eb7\+Gq_Goodn*X9;#^Z3oH?;>PeVSZdSuOMEQD7M"'kQrcSu?)Xaa-&Wh.(;XNMbU3H`>Jtt+D-LR.#U=OA0%!ukkB/qT%S-moU#A8dJd(tb\+q6jN@-*m_!U81I8-;@_91FN+@[f(YTQU\M1lrCf.F9<t4:qQ:XMttATD,aObn$0dqR14gl4=%?(oK)Wb7UE$%3,L]FL]fRXD%Dfd_1p)Oh[k'LCjkLXl[5VTLH_u!kK01=Bf9ln`.g`PBg0CS*Q="9o5S#nCYHGsR&>"UjS"?PX;dgdQiL^@NqL+Q%k!C1Y:ao3jW#.oXA9&7'+G(0H+Hhi6+\G'jLF<Ik&0_EQ#aGOh6nSe.'I!lV$^HEC';)@D\*)Xemlu5IIZ;Nbni*ik&QTKiYoa%a%5B]b\$Xp(t0/cTd]JLkf\9)_f/E,_f$'3TYe&H1'+OE?TrEs?g_"ap@Q7X@)>c=&L4nX<Ris"CJJ#kVIefY0fU`rp1hTlBECKgqg%GmKZA"sA4>UnFK;q-_;R*!-4bFEg2e?gngZKS0=7rTPc,^2<$M`DKE,4,sn>m_Z2(OPq3WWY@gPGa>!.\hHnOLgm\M6mR_"ba.3<%,+H/(-?p-R3"VrE"o/^jj+nVSYf;gA>N:qV+./76UHrunY_`rn2b:2-64fnQ$oDNQ(kN_i:"btq$jq[)!SHC<$IX[+UZhh=:dED.%B-$Tf4N;K&(0s"ZYNTbY9]C"97r<*I1-Gg\EUG8P[)Q`b"K)NI$<&1o"_gr+=Vu!=i4J+0cXF7Cr#07^^c6&%%jWAOfu#%g(1DP@%aF39BY%:8-Nu\:M-(Vj!_rQ6QM";P+8.Qsg=<(bcK.Kc6Jl_JZ]2JuGb9f;_\:o86?Jb.E3esA*.5oo>E2u1T"QDXiWe?H8BMZNY%LF*5-j(Yd/%l?VOESi:R@8$li9S7qnZKP#]*arb$[abIM/<,8,;8FhF/5[<OR4YI+kdH%7_EJ1BE*G4@7<_&j!>O9M)CS#>Lj,dV%6M\Ic$uHd.+dfF0&IZg5`]@EFK.Y-A<T%*%X:_a^J[IaGMHFS+)htJ//4e3l)O-6tiP)_%)X05X$DQ2#S<4=V#]I*o,lfa'VhGU:%ctA#+:lGP!O>S$N<HAllAms*jTs`5O/^?6^4;Rd&@&-,e903_#7N.oKJZic@>`U=.@M\T?bN.[pMt"-_Y\$S\!<[scOs!Rb7fX-?%7+2pX*>ERM+LNoA"K?)a^rT^amH.,;X)^?4do;F&$.hF,T0r02H@Rp;cuA9CPs\%R+1KN$T](,S0Xdgl^rY*Rk*:ZjAJs6.:mWGo%6/dJt)j8#q:nhT?%PQgRoX()9'JkhNA(V+(TlH[+2%99`l"MdZp^pH#o8]TR!n'tYdX_GtL=e6-$G=<gWG\Ma3Vl0D"M1t<aBOG.%eV"2$=n'X@l["i7(%[b(RPZ9$7\'.&9Or5Y`D\QH-B:p.kt!gr?M;mRL29;!#aD_.UtBa-4Gc/,1e<U<@NQ1b*(KH(_W`KQ.NM4,%(.lD6iR,;NnFRWbH`5Ye;UB0Oi$jPn2M;C-YntE<^/7S>rV5e4pE>5W=uoB4VDghiSk2YK.E/T`e+=>k#)`ajMFF2;LP.QLG>'[E%P5So0U,AF*3g'R/[T,>M2[lmM%/NZA<VR`UR.UtJ[8*D>9V%>\B<&GR6+(>-!".U]aM&)c&]P_Zg)CWMR'sF[K"FL>+1d;!>RUo%%&q_@(Tn*A>WeF"-\:]$QN8'Z=S\QS:77V0Q<N_1R?UqBRf't/*kj6=G:a1X-KJpG%BQp%7kZgWal[u$RZE<BXRAQe\SRu98=?'&4%1;^W=^5&?h_lpMHEs@D[QZ#<(d5c+dTrHE*LenP(Mf!1,$ZAjifSn5b1c?)U[*9qRN3sAUJ@uFUm4!%fn13(M"bUb]&;1^=(=Adl%W.KT!@m)cu,(Q"Ng`q[r&]_t*k\Y"4S\A^4J8L0p'@8K@mH/S\TF)YSR>FDL8RSrZ$"tMa7ha*0aFIB&?;dMh&oE8hF793S/N*_'%oXtd+Dg<uWGJ7J?nX3o.f%)q:1Pq^#=lHsP(FsTkPX)4::r_,o?4AsA5o]@RXlqN*HX^a2)$o/WA\4PB5p;F#qb"GSXO7U>Z8>h%%+>FiFhi]E%I&5JJ=J@OG3RQ5`T%$O,dd0Q/d,[]N?6aW,kX[otK@kL(Z,TW`ZuD1:)hZk#TOd6eba&j5e%i0<D5bh0fPa,#(5I;N%:6rI+'8D=K(K2R**<%20_FcZW!3[p&]OaXq?Zgs&$%Zu;0Y(+iH*@pb^sWp'mM;I&K"`#8!1P)tX2Qf4331QlNe+Mn8;_&19d6GN%hn['(Ci\\=)e3V!]n:ktJ_U?DE+kFq$;'N&]V[^q%Vn774To6`BL9U*E"/qaM2qY<NE)8(?p1p.PMg-SWqZj5'UY?&"KWZea<WeP%>F5,,;YURN*nb]$-TI'1:$sAglus>s:VcD@`i,NfH48#cRh-2Nj4$d/DoD24-I?YTLc+X+L8#5<_:L5qlmU58iT/e0o"sOO:)sM!%3IUQ6]V@p/bYR_Ef86+"i7=j!J@E73'Kl5d;b&!1h0C6*JcjWs\YfEi0k.Dc!3G+?Yc!#b4/U1a"V4P+;,>$Wb`d>[fYgbdgf*^H%Juj8*TenHkGR>L=+sOC&9IQouPm3Q&C9P>QOZn(7n.hm;#'C\$Q6BFS(,BW_Z[d5NK=D:!B$m:>!kl/"?#VKBNOfMMc<Yd>(RudH%ao$k.@c.U`(N;Q@YO2HUM%:`sK#;QceR+t(_TkbR0_-'b<F6OqfOO,+<$;_R2OXc*c9)<$T26L"(jtOqnWs^P#KA`bGmr=.jICH'%fHh^_HuSmKk7;;7_d`rY#*B__15$H;qQn?V??Dp!?%rj<9YIqESl`naA]QQ5QN7DDLY-2-E#'@3)14q0Qs9jaabjJm!ILAi/<GdO%61T@F!JUmN)15)T%'\'._r9C4q$b."ln`&@=N`<!p-`O'"#eJV5iaYQ&i%J4FcR?,XCRC.o1icg(]mJl+9?`rf_m>sKj=oA8p2'R%f6Nh(7B)\IA=p[]e8J0]_=cm9Mpjq<ghcC8i+*#b4Q&&L[Qr?\Bb6u^S-BOYVe+gD!.XJK3t5l=ct?ZP88u7BY5rR=;6PPrDMY_^%]EW;1Fi8%qYrf!mK?%A2F0EDibG/(@!DDUl4;+guLJP9@pDR_SH`LI?Gb[i/p)3u;fHGGWn@<>aBu!cYY#hgCpU#9)o,;S`!;fR]%)?L".hhp%4nHQJ`20=6:[!3$.XS(R1@'O%/(\SM1<:gWCP+@l454TUQ9:@g2)aZ/j5k,dS2?YhNJPPfMeSi5M1N1c]5eN-&o<I3"%aW)&m%61D!kgd8_JKm3\YijA![<CgqoJkg'f5\HAk+^8BF6Km2:E>5IZ3A=%G'FsR*6-qsoIZL.i]-Qa#/*&-4Ve8smPsj+rHINd%oTis3`,Y"7)Jnh$oU^0;3"A+Fa#\>_qCqX/<$E9U4Tr&la!&+G6S"0!MO)?rE?*=:,CT`VL9!Uh6bp5KO&>h0n/8-(Ms#VLNE=FL%'O2TLHO`1o%I,qVB\3II3ImEub<:VG4jsl*3qU(;RTtWpA"E5%ld2t<.]rm10G^qZ+T7r.%NY7)&*c4f[g_Oai%9!T3o[TZ*n5K!%^^$Dk&(l"RI4ieI;EC`$6YB!2M=Z8BQO+>0:.L5gl2Y3BB%*dO!%r3Dgj-]L8`-K<cs`?BNHs:>:9jE;271nt]a"sQHq6*,#EL=N%aA24G3l?q&n"F5=7_FL/)dq<HJ2FPV#kn?6Ba45P3]P&t.NSKj0Jfj-&"nt<ZVhI8IQ2IIk1/nr]CX_;mK#C]Z54#1)<PJ4oT_&L%d/(`%#4W,n\?ObLh@;3Y=?!c\j(!rM?2bYJKD%okhMT:pL)<T3KgE.EMlOc*Bf?n*J!N:i?PbP"j.q!Ma.@R-V`t3-_7!#>bK.mE%3e!kh/nc*j,ah:Li)JNd>()We3RA1#bX<n7=D?hIr)^ashl-t)^ji,\La/eG'M/^_N$\K=dH"B.RkeMf78-'<MZ0ik:VNN*_I5.r%CR.9UT,0U"ibebl(.Q1gB&XVW?a+Mo$T2OnR1]Z&8T7oNJ)X?d:T@\t::.WiDqpaKYe67#q\p;o:124`SjYb/KANP.,tF\YA-/og%5>^_U+42PMNEdU0go4OJ#*J[G.cpk'82A;Fp7Juqf4t0q7,eCo$\..S3DZY\;>spPW$i@%cmY8T3pBFn!pR9RXBp59$k<$lRQ3Do%kW4=,8UNnogt@[ioJt/B?-X@>rY?>[&^D:&NI78HTt@uD1ArZsc(,We^ETDR"pKJk#^PMX/T.lP4j:;?X%4VT2PZ;*cXj>.AE>?0%Wdp:hAYf17MqG!Y+JW*)PFM=oXTc,?6i$J6]84fV;@s2JE_\qN'fi!$%j"-WaId/t@7D6Mp2j"1pIGM)IhmF#b2n@NB5oS&1%I9o%Y9N@DL%<BJg_EtAo:O_Xk/ed<@%.K8^doGoAU#[cAK<LD)Y.eFSjV@+"#+H-Um,eH#,Q_,=RfE?al&#=J&e8Y1lEN?1h$6%%3DDW%DGN!4^H0-Cgtg1,Y3mpF[kN/!$(-[g<:.?=Pb+RO+0:#p+*VC5.dJFq;gB?2Pfh>/)?/_Gs*jI8J`Y39Ea^!ge@"EXpoL1)2^9::%i/hA%dF6%]%B&h\5n?s)f6Et;,iP<t(T[";Eip':%VLZERZ?U95(fVkBU0X%S\a4KH!q8jPQ]7[db'N<Gh()<70X\_JoekO'91J8%CS%YA$&tB$lY5g(JM_oG"db7DS)J]m;hCL\e$k,o!'Z^5A`&\1aQlI,PPQtm8guXB9c0rcGN?oo]EBZkgI,G,JI^mq/;QikV'sMn%WM^P#@S09s9-[(cd$[jNO9Oou<[+Y?C#*%&d+/j'NKtO;8_ii6$[RM-;/%bXV\cEtTEq'_k6Yu4.KXe#!8CUZ=_M$"V/!(uGMHss%#BtI];+E??/bSi\6jb3;:>pJGS:"p_orR8*Wsi]Z$C9I\('t3dan?-G[iR(*;Y+W\2EN-cV)<P=U'D+/Q[1P=.E'IU@Zm\I2`]2\%$k;_8mKK@!hP_bBEEcaOn^820IA%B1$B#ldYJ#"IB#6V&MW);7;m4]n@-Ekf:^0:j+T@h^8UCWR`[U,:VH46pY5jMA9R?r>0Sf>6%<$E=%8(05G`Ek:A@+6\r)2rm<5WUgBe"g0"\WT5rN)j(@KiXUElZ[c)1Sdl#(g9fci(rppS6*kq2hLJ[4shC'+NrL-(#9[+F4RcJ%\W%o1/Vq7-H(n42@phL?nq&+l9bWlc1n`hn^"15a`B:]+,<<GlYr'DO&hMK&q40idR[tl%UEc11>%"&'=cQ-k8K,9uE_,/V^P6qB%@a[EP@JQ]e3]=rR5`i'Tb9R,NVpUoe%"@3?N],jMl5^,q)8XU5ctUOu4!X)**5l'<N$3X*g(I)k,-%\^3GaPi@TqK><-qpeF!bd'%ifSWH(cB3(mhD$o+<?s28N<DD72s]B!NCM$F4?C]bDBbcG%s#g6n(9\@XqKh_df?i$n--!Efgi0Pt;p[pt-TId"qL6i)h_]G??mA%O,)5:(mU[l7OX^#*\+CS3io"U[@s?a8V[HQM\oeb9!tK1A;%mDI=.f"pF[:`'#<t)e&6lQS\0cBO4jO[S]I6Tf&Lf:U0>ZQo5^t!%HdC_5<a31H<EP\emq?8<UTHo-@,KEY2cd`sj`K/KL6f-@_^M;j;4!Y^V[-k!7p#aKSXYH^>rqPH(:IC6<V.kD+T$_l51gXEc9Y7?%m"00+e+.[5C[;3U9G8=RWDJrbTO:JZA!;>uPI(I8e3t71X+Yb+&oftf$LrHWBb<,pYbe\r`X\$GP=[8l@iL)#W'VRS[./aKmk)Rf%;V2.R'%lb(0[7UZB3>\Bb!kAdX!si5)Nm7oBoq5H?Bc/lDp<&t>uTE7WE^uf`QqhP[G*4C/#qa5VC:,V<A)\J-ACc)9)H8BPS7Yj%V_oh/h*tN.OE=rm$aSp#.V[!>Ehmdg3ga^m_isOkZsX"@MM5t/]WsnLY7?j#M)q@<OG_#RSjR9L4<kg8$Ah>A+,6N@BF7'Cl]u$>%:%kI&dM/U"=3LH6*G/K`O49m0<2V1t.['Af>:M_2e9kgPj_]p]bJ=^_EI:*a;<sbSH=9OSaFu`9lISsV'h-5$FJ=;A.q/U"Xs]"P%+W(cA6p8XM:@N;hb9?ioO[Ui,1`-RdFd?&<Bn&'q./BYE0\TA("YIu,OTu+")c@%UkKG(5q*Ik;F:#C!LR"j)9fuM+3gJZ;8=0G:%9nt+;7M%E[13nas_I<5JVfok3Za=`+.kG/F>ts]OaW8?<3;,dKHdJ2%8Mk\:$d7`>Ec`!:7I`MYcC'gs(PfGA@dgb<*9?mt=sshb%Fk;dN3fn<j-J>1Xac:/d-A>QU2mQ":o(q'FXb##.bEfL_+TRMTP,:sh/nqb9[3*^.6+@Jb`F3^'f"#5N'5PFaZ<g[lU(rWm(1b-#%En5j#2dTVpG*TJX>)$meaBFrF_\(AA>)!J7@4bS]ooQKq8fiqs('X54AZZC&fSY7>1@6cVa)O,so,W^9]m!9H&VID$O,hc>5&qFU%QQ%1Y4SU*9RMKASAjt'!SN&3oD,<ternPlWMEk8ka#jbUfC77QUglh5X/ETPUa$SQ%2m%:#U17lqXYIL6W#S.!*8O@UGMIMCE<95%h9aj4P0NQsj[S#p0ds9jW?1\ARqHM,A[Zl<S4ui%nB>lb(/]dDNZ[8rLXLF^,a;V];l-EA4F1^J*ndpe2"72qXcMB*,&b.rG$WTL%Gth.Z3V5V-]7K_J6o0M)C(BONofU?NE+TG&a%NO0@)jT_:]"WEdb+$;Z2`I='8S?/-<_X92j,OiNjc7Bke\Aa#KZ,]L-s9=a7Ag>%+`ILf9;!Vm0ge"e.RQ5urh;<iO@@\Xg_;BGjiD7*'t-hQMICT<Wl"WJ?rk)gjr8n\=2?AL$:0c)Jr$BT2>b5m22.p2&;o421RQsf%JXQWBGb>Lb4Tf=fa'S#7bF^+?L3O[WH"P(CI"CTf5+K43Leh9l.FX?69XV8)b4/fITl0YdJ"?]rj@1As:nTn1qsDL-U&b4>Nh,fa%^Bi^3jj]\ePT\7!9<mY.\Yk:h%-MH@KP"(dS7KFjJ>)1MAJ.]831a[M,f;6/13fDeEBMA$Gj<=iJ+=9ZU*>i:4AGc^Aum=h(fNX9%be;5N?tN%nAY?"ER]#38Dp'jO_O1_pW-K>NV?;!fGX4^GGh*NlR*Ha$Aqp)='pXjX2)$qKfPBFD!1%:PYd8!VF4E,;84EirVk0VQ%pnd0P"Nd`eg^Z"Sl%531-,/P*@@Z"QQ4gn-9f30aO<N*dV/b!Kdgihkd38(5RS=L=i^hJ7Z0\D0]bjU/,A>TS!rc5Z2iRCY$mU<n%Q9-bFO+K&VBA7=&/Pj`Vh5;*&S`*5TL"V<Y\&?0#]gX;IjEcaIT1!N*,jM,3i9QY3$\h!r>))3?=_enDFj7:Zb\2g`Jsh_-<f(jo%[E*#RDBM`lEJ1H&Vp*V;ZltLTa4Y4Frg_GsOjLe-=#>4%bslKjnFRZu:$%J6UEf[U,#+Qh*1:c3B!E;HHZSP:k*SV4`M2AOI!a&r%m0Jc=V;%3Ofog<dk]!s]gQ!:L&T)9*/!HI-VNqCtjisnYf*u";d.5Cm1a6->l^!T-&ud58\A0rD!mbHq[F;sGKB7<g+G[CfM%J((%=8tSC5n;mNb3/D;(rq,amm&7X42/][cddusCl0,W?_<V:QU[4uA*IoBkf;h@3>lqgV$O*P^BG?uCM4ZbA2&BCK&Q=h`T3]jHZSb[%&q#n0Ui1?L)/$1Y,b#)i/r&jXXK&ga8UoSoj2kiu>Ig,U>no_rJW7sT$l%ob+f?]sa#Lf@L>(m:>>NaDLoM_;NgO;j4cjAdfTsE;%=eguj[X#5BVAj\N\rI"Z1'08-F3BX5"%lTERoq=IXn9A3B!hN5:KB!ZX'$eDd]eGijDUl1fB^I8cdn-!D"@uoS"Pr')&[jabD(sr%$Zluo4.X$jNL%q%]YIHi?"[c<#ohj"]K.b_[YF@N50G0(>+WBI?(.`ejg@*ucV9o)#aX,.he>YS%!MJ/)>!dKL-B5^%tGKQGmDR!%I*5WX`L!FsX<Pq6N^:N66e@Q?!?H8)$$=gS)WpQYm<2&4Z_$cF`QtA-LB)DTd3!&nI-nGn2Qp'MRCq%t'sM5QLcT6aCF.gUEe/I2%2ub>0,_m=)2)$`\R*(6/_r3lq^^sp[?A;*a1U,Cb$5GnF>c'e@a@-8Afed@?dF.`?9RU<(G17SXgoBdUBS0Kc3\Z4Tc+t>.7<.8$%Jm<6@d&Li5[S3[OaRRL,,#]AFmSi'<Q>c)OY0/(phPAbt&@j2n_SD/r$(j!JU*QA2E2oq7Uf'@_HrGqs<ma1S@QF0[>3A)5j1/4t%(MGiM@r@H%i9mIDPFtWVMFjWPFK;8!M?&CO5T?IZR@luW4a(r*$7!+_MRJ"V]^O]Zg/cW[dIna.2UKYUL<uO#b7,Haj9F<\f;++h%RPrn\a1!3:CI^2[0U40m/p'gV,Cp0Mj3@``X/:2NV3FO6k*"gh?@%S<2IR/;]ReZRhT=3o)(*uCJA!p:["E#nA)NP46D(^9'TdlH%YA%oMQWCRW8uNc64<gi(&9!q1]Y1D/VU59Y'SYL[0a[_q>Yk'&M0*Wan9-]qglj`h8V+"[e086L^6q%8,*oBKC3VrjjlILk>.0?)%E3M'AP9bQpMS.3Dm$'g`TB,BtZMS*ZcS@X]@p3'HObAHNJr>O?>+6ck16R^gPZ"i""F?tHjS@T@<0u2cq>.bRZ2l>n)suL#ooQ`V%pP_N]S$>MlOqU&Z+*[.8NZgm8iT!AMZAUOiV^@o.(Io82Kul3C:\6aFrib:as.!MXOq*eq8.`p9(ToesRd^i6g5+*cNsL>KZ!_BZ%_n0/:Q=Zm%QE^C&cOASi3AhJ>Z2'PlfdcN\XdD4(]F9`1=H9&,-A!;5E3L)sO(bWaNG2mGhW$`>b`9+t&^oP`p-qB;cPDRE1$CV]%,@SB)L6rhJ]Lq;Ed`)?mPJkL>@Z>Y1"),a61+]Rk:&Df1CmnJS+Y)VC@4&g6SjRQ]9o/M6jZ/X\oWbJ"7*UXANGEf)YBu9ICPIiZ%T]g'MYO^21_QEG>*.5IF)8!U6@K^(s2;#ZQ`cO4@KO/#UF/Y].6%^)CTHd+DL6ijT[ric/UmI?i,Hk"8*_2aNO=*VsQXq%GS0$R*%r\pe8i!nl%PNL$Q@!p?'-RHkf"IR<jHcO1OUL20)q_7U(8eC"$(0I!4mqGOp*b#TL-;-0:]?;KlOjr_BUfTU';fmG[[fuA\cngi<%K+I1'91Dlf[5I!j33:Z=-%9Ep7Yp$iG&OMB*Qq51K@/C0&OK@G!_,o2QBg8V_1mB/BFU:6o=BOa^1tPTT4,:gJiUq8;<]-.Qqscr%U)hEQ%DrkfSL>isN3VLu)kbGRno8Yd_0qcL39&;X@44ujEZS29Jcn2QU44[419O+"OHAdETd+Yg:)HjW,0!Nt\-:oY0aF)?AX]JY%3Q5QT_\AbO=u"RhDf$>2Qg(nd8u3-InqLj^6s*%u2de1HH,EV&1elY0&Kciq/nkon!&]tjO&8kbdjAarGr&IU1bGFTAW3*7'"GT>%.WLoS18(S,A0MgO"];hZ,,T,4_b_US>G,QiX]3u30S6tP0l"qB.s't(Y10gL;\?/eNUslC0Ejbr8JrDhOnPWoR?j8aU@tF\7Js!@%EI10'R5\(A;UZgeV$UWUkFJS+g6l-a<:tSd8nVlP[*61Ng6iOBd$GqGXViW/2%"AXUM2bke&4p9<d4@Y/eC(F9E*]V;2sUM7^uHX%j)ID%)okKtbr(NY.E5Q.\-6A#c!.&]WbHJ2(<"8[;[i($UM<e52c9Sl7qGV9K9hq7;qY.!'Rq]Egn#+Ik06j`e[.;p9,#>3;[i=#%UMQrA9NAi_U9LUT6-IKAWGEJ](k!uFe/E2baYs(bqWdYE_tfl"_P77JV%H4&RSJ?^S2HqAes+TrY@^pXOg`%%>YaQ9%g9n'.=*og%cC:Y,d+ZXeRY[9Lnj\6VQU9#($a\A'[*T8.)&sD_h,(ma3IL`:Pt,P1FOS#5WeTteDYRBR.b6I'(kT0m^*jIn.OJ%DSZqFk!^"?O%213q02556tR'\_($t&g:MHD55YpF,sMun+_Ej1^Gf@A@DDLl*7&#A+$1,sEVV\:jIT?`Gq0aAG4;*8-I(S7NE]8`*$(-$PF_:)%Q%k8&RW>s(.$k\ZSEL;e?nRj^=0B^"e99T5)eC$8N."S3N!#M\dGc%.'VBb)&tK0@+/\gn2?N`;#YCX!G=<0tDI0a_'8'\qBPe]P/R%gaIb-pJ?mJ@sadbAs?hdLlS'$-m@r4cXKe:.#)`_0qcTI=/9fW),AiJJAZdJ#)F[@o)oCJ*c`_S^r5A'/2>_!#`b:aee>_77i^ll%pL#e;Gm]lA]e-^O$''PX;,$G1+]W&/$k_H&+Gaum:@;V$Ooe$$0%&3=?jiR&oDPm5+p#)/T8nblrMX3<?VPMk7^&o%*!MJ$1_`II%&2N>,IXd#A!iAhbC)e1VV=7'a<0u[_be%M8R_3/^$-EkG--k3WiSpq#KSqYG1Da[1_SoYr#T"lR$PTE@&\G,+7-mg$8?l<ILt$#7%;;rPVrsr,`(N21^7#iT*;W-%`]r4DV*'f71`[QI@,J1h$l[-<c7QZncGWDo]&si:*EKNT>NhUUh<LLQH$u$p5AI'$iBcWMW%[cEi%3tmYFaZ5<sag)&5F.:8hKS-Har[<YbXC![Xc$p*jh\XSNLU]P5U4KaVAbBL1UZqCHUp%*#,UI5qp0MK*=]a:+I7o?;ns4KTQ(`$8%1SYb>Kb%=1Fe5=q?]Id;lBV`G?nN7NX<\rk<g4.H.uQe<ZminIAAf2g8r$9X+n%+a5@RV$>rVcmL9CKkp2)[q*,_c`SE4^IZ1E.?%ij3h+10"/X6dj_(Cc:'J^F6GI'J&@K.-s,:2G?:cW6G\YCcnj*9#&K&L:i>p_5t^G`c%$ob4NK`_+eF*/#6KnA>U9fU:%keI?qLG%pUkeuIpnZcL-AtrV!opL3P8?6j7)3-h<;Hb8D"\XA19E0(qlit@!FMN3q&c-KjYl<U5*=Q3"Q-EaSB"'@NdO:"9;0;JS97,SX#oU%3D^8'RipoHs6R#.4g.BiEhIZ9&4+ZIJa>'?6PFJ_/G:CrH7RA/7h+%&*2mXC%FtXc3gHb[^:RQd^X$dh*$rrpM4nH@Uts4:m,@\/%c`(kl19n\bYq23[(MT&sAR7^_/igm]<l^-:-m($a=MuQ8YR0!X=?oK)WC_1tG)]_=,cR\YPl"#XbTBMF$ZifS8QkS%1UNU((0q1*%E50&'i!qu?oJ0&`*8E`TAWigP-R/tSp)0\8H/Ub]2BgVt/P9%s0#a-eU!og(0rZTU#^G?*dto>L-qD!bnInJsnSb>;Yb<q<#%mp,%R#%m??IPd;S1uUi8I#WiDm[!VcRL$6e"j-$7]tr<>^tb^A6n6j<Z"GU):Q+%`3pm9l*Ah;,e>(nm'"O<XG4W`f]'[QSI*>+!#Li*%VPL<6J1O;G??ut)goK6I]pG(T,NSM93t"s7m@[a\<QD_2gGj>S?tf'iNO)qeFp;q)"UGrMX.W^U@o:X[\Gl%[11Wc-k>Fpp3%gcD%aYHXXXgK,e5s+/k#VV+L=k="7O;k-L/1G/[d\!V"ASSi)BD1kCTITmdIIV<W=:;`40A<nR/&U=&]hL>13M_Od5.sEjl!#\K4)>K5%fu5^:.<uD%B$]B.ea9=1S(I_]g;p*km%oq+9HZC41hG@F3hm$1Ps1=0U+h/]^5<ns*c"`W&e!Si(a1SekCh%oAZ+7@-mtYPRn1\!%fZ3O_3O=<8pNb.L:!SIQU_*r4Qp*qos,Coa]YCu2dB/VO/)B+5d#En-n8/E%:3<Y`7pbglP]r<h\4h'3nlkSuan9\X*0ns":!*`'%a[/6ibKXQ(qmGd#ZB$S]0A"Cf^H!YEq&R.lNk>CRcqB/Cm]A0"N:>]n%1[Id")b114b\0I2.IfWj4[&8OM^U5E-5f,!m'sbHsKIE%ia\YpQV@V-7^ZBLi@^!a"T84[Lgt,&B0^WdoQ8-4kG.-XYCPdt&-gkVK<:'&U$Eb/La>duZ$BjC,,a'1*,O$A`aG.p:c-140WR#7%LYl3N$b![9U+I-nT![2ebNF(@>HeFckAA%9c69Wmj\%>)/Ju>cD9@Ph"Y4[^d1j/f2`:i[("KQ<eGhs9n9p*eJ_YJ''KGj<j\<S^%473sEVU1$_XYp=f)"^2P(<eBfYq7rOTh0)-RVU[k^93(]PRV@d1ih*o5T?,\Nd@Ia>A#MCRSj[-K^\`".pO;f-h#FUWduf0[X>Rd%/smbpa2_="RcD9_KqjW7L2Th'Bd]10n5l-9jXH&h[t*D*R"<,")bUdP2';@=o;+&VCM`0&KKQK9K+Mu%#9T:$Vc[=SDVXT>)^h0=%CJti%@-GlRMN)Bh7F6[SKC@J)H8saq6hK;pOn^7YTa*(3)l8<`h$H5`+@Bd_H=-j20IT)g^SUHm%n\Z=6#[T3gF,?!A_\^t/9ZcT%3B[pR0Nb/AGXGn+&A#TKbmED)g(kifo5pr='>tiYjq31F&%L2M<J'0"JO]I1lfh`O6k?M(=4=Q'Qp,CeLD^R0_J((JE."SHgTpZ9%*WCZFV$Jk@Nj6Ri,pA'R=uc<X370op\h'sb?lVpoja?D(lfh7(J^tI<'1Iq6P5EP/]qqV\FBkm-pkCGlYi,9`Q'V@<6%V(J4Fucs%)+CgoFfj"9%H"FHaYaPa6Yo7E=+_.:L/':o*<LE@oh(2YX2Vf0e<!$2Kc1YNSs'8s*OLqKFOi`'#EE+E3B7Xec;B*4T;RJd'RJ[G%^:'[>Nghkf*]TjeO7]*?)%(]:Bn2<e3)7:[H=4?[?-i[$"7[gR%3Na>=eu@t(lT,S>d/+RI.&fRJN6\BPo^3PaN6^dN.X&MicdC6%_`545e8U3aD\p>d`hZl(Dumm$M7UV`C/!KiMoDUk@^2aLlr@oOdE0+<q$(uQn#(/I`"t=f;a#cA".+pD36/i/EoIc+fGiP-!ImbN%FnH_UMS2gl4>@iIjnOjT7aF"fgti1BT$sqOL=Z2^a(&:'<0..-dBQuMJrM..%=H8igZ1bqYuHR1@?us9`\/6b]:9-`9Ig]g"HPsD%&\]@hh8]O?i0;]a;^1/hKt\Z2c<BF9-%a+Hh451pa]QPN+M5YAN@5nNfc`Zb1/_pX"L;I##\;d[,%0ah3.\.U,m"K&)i<MK%$cbW%A9]O8a<lg5+IfJUJp1aL)1qKE;?=rmDTJf-CV*iI6H</<$PdV6OE!92*1>E#GlQpLh<h8TX4rE1gNT9=b/n27k9$]Whg\U[J\Nc(%*aV)/E4rrg55X1'mOu'A1Ae_1n`TT=mJ2P'L]@/"m'A@kDmluZ=.d1?\p8e=<=kPQio:/_)hr=c+]UK-e*[5s#FO6ApWMj.=6BUp%ffrNDcU,%u2^'#APgFcaNN^X2[t0!]`2bgr17f;3r[N</J%.Ri\D#bneqAA<X)VnIl6:#eMq(&DZS0215D=U%qr^$;D"^)_3WefY%/3Y^4V#9JLI8S3.5dee/*"$`jcl`?`!\j[!<#&gM9ajE,I/;ipRjfbD^aiIf=ouo_6m,hdXjI@8ASIADIOUcpE.I`tr_.ic(B6+^%NKr4D"P9Jb$*)a`\'&^%$#lG6MA.Y5M')G#nR!B`dF3TIpeR^h4)$@6f,qHlRJu8>SD`0PaQtj0k<EKrr6E*kG+lderiQ7?CFZdU%kd2/L]-(Pi7Xlq#)BAK\I=CqH/42,)a$rU.S))oorZNDlh.i?H&m&EEBtjAemeTh3l-G=&[?MV6H%008S#9ee:=-bj4263AaN=l,%$>%73?Z!2Gr$=Lu](Er`YBE3T"[lYs[<tn1+Rf-FGJBaJgUC5p<"Fn\Ol,q`q(A>I>ZN.a.Ui#;h<sF1]E4=<;1!d5qr1/t*&?Vg%@f1O!?W/21PVepYQ20_12RMpKg["1]?Nb-;8<K*=Z4]CW"eGYY=m-`WHE=o=*3$TSJgQ!=BGh/Bo"BM)DQd]ro=IM5-90,JC4#b.%MP72Fr<&.NI<C!aFaj9[GnV&B$g*0J5jkAq$9sX:GQgdu-WX&U8n?J$B28<r9H!1"Y!/9h28!&H"W\@`/Zc('G'3\_U,7>uS/(uE%ZhO?Bb(=kHi$lY7dK0bYhHaE7GCNM.!MsV5DmuWV'2Zu_]6tXbNN:M`.PPF>^U\f=Fh7hN=1>Zn]9A-)b;:hDf!h8PPcU%/ME89a%`d,(eX7Mh:mH&%-NPLeO?abGIJ%%M!OVF*:^-)F7\%R4l3K";k&Z:htaH.3X1APs8/mq<cnScaWY>6YkK;SeAWsVYDT3lYqm,KU'%:+0S!D%%/CNcR1VKQIb.1@&9?'6<C;GKMht2KMLadFK6dL3HIaP+22NE$bm!3[pPO4X&iF39>hkirGF?R$4"'>+%f&jVlJPAX$t$%@MTk;lX9G$Gd[>;led2;2T&+[X$?SLbe%k0FE_-H#1";;gh1p0ah3&Eqe@!S6hLGOiqL.q:13MVmWkB,n1bE]WVP$/+)]s%Y#3FC%,KZXP;<!/D"kWG8iks%7p0iCKE*dt`c"HkoHuQ`(?,24Y^\`T=?i9_XmH)lRRpaUun#em2e,($8me0rUN.,Qd//I`$qs`SCCibSm%LS+ocYCcYUI@.k.s&F%5pIfH'm'En(kL[$Vn'<X?)5a!R[bU7:d`qUdGFW2#l2LYL@0C_%I<Ek->r2BE[fMC'Qg_-?SE(sW@X!7@%.K9[DB8[92]3sFL#F<.$^Y;VBJP`]IkO/NPpK'9qY0!N$GYiC1359fbZTGq6S;"7m;YXo)rl*&6GF.&U8qrf7H?4KR5(=L7F*I:(%#b5<%=YN(c)<u-G`(s3Y#'KJ'eb/%[<lh'.f<=u<iJ7.oh\Z<3HiM@hgV<Yr`]cEDpZH'S&h)2s&&@!jDA#A*MmpGaI1NdD*,Y`9%XhMQa]%EV&lpl?gkNc^>gE&l1q'apO>5OYebD1"3l!jblM$31c[-OtDICm1=p[,jID,SHI[o&dkL5m^"h.&&6lUetgo=(V=YR'_h%@t$D60gGTkNJW;ETk:sj4Zr(K?>eXar;Q-L*W5$>>IC*dFOg2reU+KD+7:bibM<DDohJD9Ili>?roLo((8eA1qqt<KJd:&&OZKt`%g[,<#\_^V>LT0FV.AMthYJthWk3DXq+DOYb>@<J!Xg;U<Gl)OFs*r[)Tg`&GDm',PRp/Z)oZt9:=k!KK1NPCAGOaWUN*/BK-MuQf%iTKsu=9XI9*^o@-+8Sqh?>iWEA,fl6r9Rt)ffkp5L+`>-GRQeLO8nrPk#tO=ndLn!:tK^d_UPp$ELQ$M-:0opIXCUh]:6Jo^HTEG%fUij,ZKsb;>[Q<)BD2p\]C/^*bQ6YrQj1/!IQQ;4^V+uT.B,fm>[1XLT3^e+(Or"3D;PM>F+5)l&)4k!=#JRVKeU9u?N84E_g6Os%Ed)MPNIgJg^/#&aKFP<ChYhVg6ft#U#.(&TI8nHb]4,r+^C+.^B*";&l_D8Qh$1b@Zu,O)DYN,'&C&bji*[VkMs^JPE@Qn/Wj8Tb%cI(33No,>2GTVf*T#W]J>Puiif;o;7,5.%@fU@4"dKJ@7b5RI=^58rj-tl#Aae0^Cc>W1/T*KYRp`WUaFZI'p'7>j!.96?qB\"M/%FPSJ/oreHFcH\&G*mWYJ?!fbm&GoTVE,XV*jn\;U&*NDiZWFd5g=cL^Nk<s"?#D=i\U*u&Qb/%4F3-maY?n!18MIl=Jmi[6#ipe@%2RCA@@i;Ik@BU2-I6B06PK4@\T;?Q%ZiAgoR0OWt6H1Kp%/)lH8qKM&ArXXp^Ungl->9dTIW`$G]5=4Xr>+&I1W@k=LaDrMh4*<Y%^>7%sHtRQ^p5d;iGjAKXF%i`S^Uq40R"o$lIX_67EIDJQ+XbX^JHOfEcZ%cKn<bJ2.`'BYaRL+KR:@07m>'F(L:?Sq;sJYlV<]A^%PbW5@IrY'IlDnFV\roJY$Ug&__e*b7n`k"9Z+[oEI1a!S[M\0<&Kt_oO0kmRdl@JD1<:n./KdE9T3AB<;tXhG(VAG;ahm-<OZo`,%Dst.7o`=@OZj^iB_)qoDN10W,rHXLS"^-k0N%N/"%#[SWbmMbfmPoSu@f7-@li^1G,#3IH,g9K/]FjA<ItZbQ;[D6Eh"%tnQ($`$%*GA6#2PiGo:;V0B_BY`HR&M-(GP3KN0#Q[g'g3`^<jke%O@ha=LS'g)eI:U1[MIZk#hp-=6>Q3@TlX,rDH-H="(inZLbUlgV/9pf%*YOB1FSc=cAs45r##X%;UE`V4KH[rFn]l-MR^"kmS;Z\f3-MAdVGG6)jq.\>kMsUiW>TL#',?9cV/+=^@o"%(:?(5Y/0U&\X=<CY%I(X78W'A9ZotJ"$c3>Y"0D-!u0ConS2']AT>_J]s^ile9:)eK'Bp`NYM2G^6_ti\pHD&RU^ghJ9Jp#n.`e$_-Iu8r*HLKI48=W$:%e*Md#YCB<`jJ:XK$Z\@A0Jp>Vn6!Ne61,G5[&<05G-!VE6bFE_IL?%Bdu&;n,O5'N>U[E:4hCOKdBPFJcXS585&t<s8Vg'V2?!_S%-e%1<&_,kE4];!mmXrZZ:4W99p:D2/$d6)A'J"C>9,"qDX';%&h;)F$D"h=_U1Au2h3H4PI[/7I4s"N2"WRh&m*_+A_t#AAB7K!Q%m:AJj>th%LoPa0C0<[&SGCFlf1TSRY;E5CWen9n&c:$-1j%O''>4+'Rp0f>HhbK$O7-5.s`P<i7Mnu#X/^F#K\NXKZnGW6r3Nj);%Q8HB^EaZ&+60Q&iT`JC6F,&N3#GCW9Xqr`'/0(JUZTm5O?0j2Q;d'EoMU?abgl#&&LOo$MVqOd/1a+Ig*le_rTZ8X@TZH7S]??u%%hd+NOGOOZaOV\j;>rM@AW-\[.CKZ_8I=DB@!d]?ECjq(H/oL-=OYjj9>[?O92Z%=amcM.W4^u)HJU)=Mh-N8HF)e[9Ii.:V[h&)R%l_7$!@I?@md8iteIdcagf8/9J>Z$#rEs6hOK'rU8G5L_*iTg;MmCn>Vo0D7n7prJ/`fTeI4XDk8]DqRe%"R%%j!5=>$#bG^0[b8-%e6h+ZMe13`)?^nY9--Pb!:8QLllH2;5LOWT\GU;F_]P$!OSuZhhd,(BE^Y-7&VWKskI7q4UD$T0Q)ib5ft,9>a,<1+?dEBbpA\"a%Snh2>?+]S<oJmINE`4u+-EF7X689Y*#_ISRms"faa8V(q*j`F.GBI"P^?`<N(H&g>`f\_44V@sDGU#WTe(j8506TS):])lDIR_c1%jjh>ZT*]7tWTs&7a<@HEAL^u2TW[aAZa3T9SK<P;>KZW`=i*TUnT8%hp"eXao7"jJd,:D:'C=N-T>m)+4DET]*aA@HPUNNlF[+1_%^Rkk(pib,73@M;'oj5@(BU9frmC</OWu`o%_lt0Sl!!+Lqm+V-Dr7]nl]`],Uq,)L*J>f<f0@%M8L9!g]uX,913'CD?VEb,m<aW?%7mCq;%r95s?Ia8&Eq30E0/pHfC`kT6`LC0/r^]bIFo:dh$8Q%^NP^V2KUVnM\GErE7Om8h.Zs/"6D0DXSfM/2(Hfog28TD4n*(o^%F#661jj_5FhJ"nD7ZQitk=t^K;$`p*lLCl^2jAio?s#U836$IIq,YChptA`J@S&d5"Ao\"b[dg1gn%%]fT`*D%:8JNM$EETARsYH%Dl:]FW@=+9T-%D<^<Y$8_9:Y;2g@8=lNV:jLg,ScGBrlKi_LTS;V4#827TeR@M,D2DmE9(CK8G'=*`dl`N\^RmnLk7KIWfb2h_6s%o(P!#XH/=(_;8)#:dlP&*+*&SO%bs/@s[DlS>d;XDLRg?OZZ6B:YAY6'K+ZP_4kbK-@4)[:?]sEDljb]Vd#fO5C1$Bpi5A5S:Ug9%f>[Xd`c(=^Mm)lWPM<8_o'q1AF6cor#Bqb?UYnLYro*;9f<'u#SSOdl52/(W?,*t^J,![RD"$!'g=Ksj+$Eg(@t25a^tsu-VGI2.%[UqGKG<UG`(ES9[r5nX-Qeo,slfI,Y]qZ<XAau2Kh0lh[a*mI>Ao6R4]`!1iqUN9sNGmDIrU-l7ik8F0O3-(u2h*3AIf.of>WcoM%9J.?UI%4G^[U)bTm9Ih<d'2DN47VCkrHjkeAs=Armet?)]9b;7-g,*aLTf:Q?XKEfi*+hbfD].Qlh+iJ'j9F:[.WUA1DfN;C<ag`%fj)OThTW,d?%7oGjQPL\rU%_]hR.G'/Eo(HG2M,Dr[*]\BCbHh7^DO/p!qT`lOR'hn*Icm<kR%*S1=i0;0:H-qigdR7q\fCd*LV$%Ft*_+S6me1<J)>uI9B^#-_k4-21n)"S"G.VH.FD`oQp@,YZ<XFcMa*gT=s$Q(kokRoC!La*5?`!2X&]+YH)^P1Nt4]Q47SG=V'q$%$lVgsMXGkM$-=K/p%CUQ>Ar)!QEG=ElZ..1`Qr2#8dF1D^?FV^2>G$sB:j:YB2ooKp?L,3o)s]k(UeO7lCC#shos5UhF6Bs=)Z4F%RpgMRB61!9]a;0o32g66d:RRKcW?b5Na>]o\pE;L4o)h?)mhJd)YVAFS*-&hL+D.fc^#)fGB3]JH?JbhI*g^=Mi;-'\$4HLg&(Yi%`M!3kq:W1)mIEQVq9OtCn!p:V.\ie8p!B?1)uP%`2Q4%Vo]98qTY^8Z+8HEs#2MKT8D^q&o;6W3;qneLh<pg4G[!5mp<.-QC3t/B%02K$+kb+E;IW#OOV)NX6rd+:s&iY'/0^-fu\c6m4dZQo6bP\$(a3Qu>62-`/E[u"OKRUQ3Tf6e"XWQ,qcM>YfI*fo4s.[g<EE#!_%MmLm'hOnmAfjUM]s'@<X%/OtkHJSDoYC+]pm[)5Meq;)M602A.4T>/dEilO;"`M+U%D$!8=^U1Z5s*9=Db^cXmVpP(9Ra*j?g_3$%%_=TCH>m"EkVMP\nq4?U6!H-#m,m<>LXFXukluW>HLmtRcsK^i3boI_IL<1&LL1iX-t"U8f&pt$ra).@^/R/WQS7e<.L3XHI5(E/%Cs^`AL4*Z^h<\sBDt)=^Hg:RSbK"1H?<o^$Si23B\aqhW=c=.T>n5SWYn*aM[^/qIp$/0]DILng_OrRMc2IUHq>R&rHLE=Bki1mH%rfS/kGJ)9A<+n%ASb_u!8m/^2[VnCU&r9W?k4=Yg(j*=0;kG`#qW$GcPsO#?o%Udeq5_b+E@u=%90#m0Ha7=`P'^terFqQ3ShAlX%Sq"\O/&af,RAkQ14$,4]PKD[S1((uLBC3YK?0d-nQgNQ4s15_Lq-+)Pn@$ffDQb&HY9+SAW?O[rY,?blDU'W#eNZPn\g[RWn+NQ(%Edh0jX#D\&F5K3aqXmI2iRuQ6Y?>W)mI+5JG@,1OmfckP_`b'lcuo,!OhcHk@!,d=nB-2+,_(&LF\\M4<F;q6cR.O<<PNET09.-h%WquD(HG0=T`p?gtpQ%tulb2Q)WaFN3Rto>PWdaWC\!)<r]jGjYA^\0d2]8(AMj.tsg3Yo,:OgWaRJ66.[J,+F6.rHsZ&]pkh6$HL%e^r-LGJWEfeZZU9L[";LeZZ`hcgO(L,Wf'%rDRBXrq1--lIX\bo(J)Jp$5!2+?51(^ZJqji6#pj4S:5=5+Jt>YKjJ3?]V)O[G,&s%.X17C[JfaZe<>cnO"]k_^R^u3^Ri[(qnJ`Z0)sK%o&n8g]/Lh3G0IMRSXc7#nsmHUZhNX+ZG/SlD!sL!YJ93KT6#'3H.RE6X7r[]%f_Y0UX0`'hGOf?cmGduQP!.@A]VS]&8o"KPVe]kDVbo&gfJ=%>DJ%M0hE2)<2a2'F^Y/CdH+2TrX0o@LeimDI?X%feR+C0/cCA<,%Y)\heH.ngc.S)#o4m-=9nuY$4rleOrpYPoPApb<Pq!DtfoUej]r4I5103C'=GoaS'h9?MdX!q]ThX7\T&a25(.\@d3rrG:G+u^pq%Ku866ml>4KTMo&B/!Y`bc`%a\6sJ&[%b'uNHEH''f:#"7QfHSg-b""ipBIJdh]:5.T[].K#"/7%P75$NQJ(2q\b)QOlW_%g73Ank%Q%N!2:W[*aDQT$"5EucEm=22W<4;PVaUQsm8T1h(s-84'qELqtoX&qkkkWEr)0mdF<lu*kK17qa.1W?^I@31Gf$):_l.%(9!WHXQ%IC4%jjmV#>n=E7#SOPbgo=Ojj;@BB9A?A09`818;ReH*gora#0nC8Fg3$g3!hY&Z&TtU*L?L%O]0s.P#DIZTue(F;8nII[*eXaTN%5k=@1$VYKPB-6GBLo`!'bRFNfJ\Fbb_.J36h:ZU0pY4[X3SRJJk'juAG#oT"c^91lhkq`3@l$ah='km9@;gV/hG,Z34(XPG2J:5u%9@#54D\?>,+ih82#RmkK2DDi9CF_VE2eMQ?!9=7JEW)-sMXm*k8M+d3ks&cEm4rb@95OF=qCQX1oQK)mOEu'6qK=7`YE/^rb+2m/%j5UH'SG]JT"OlOXn8BJ<]]q=blau@%Z('BSqO_07qX,mmJBq8.ZYDO*)?ncW[4&P'mpD([ZE/!<e:)>nJc!@RI!<4eR+#fS=k3kJ%Fd]XBI;N?PLl[M-FI=#>$[2]9*m"8bN9sR\.:[jboZZ2>>aFj7rmFO>C^bgP5A'@t3%`gqbti\M<Fi]].oii'_+JFLT6<\/g@B?'%C#*jPCpeDsgV0fHKT]W,jmJ`7?e'"!<GsHlE<!4XSR2>F2sOOOp,I_7V-=GogJ;bNAG+/$D6,RE5]-u!V0ZV]Wk#KZHLl=!5Y`,Y%<BhpfjR&`.&N\+@I/C4"F[s_aeR(ec].Fk^*`npY]fc=,7Flgoe>5cY'ia[AbPD'Sm:gdT'uu/\bgb/OrNaW@1Fp[I_+\K7CNF)[%l$4j]cHH'mhYq3d0?%M:GZcAIeK'M@[r<V-UFWL)hR@N/gQ_?OWnq)aYpGYP>;NZBA++fSo2ITnQKh4(Xc(<e-en@RXkB7"85I"\%aWC(d4M7Z<\p$!_(Z\?"S[B!uPO^/FB7k\[pej8Skt5:841b:[1GZ`3kjM``K#Milo.(F:b`4P?_;&X*VhYLqRfYt2pKHG,YLC0.%+Y.E;2P"Csb&Enc=5RWi^)u*iA`^K8GO4)LgkW0%(hhXMSJf%?@Y_M)s0no9&qjIFcJ&.KQ"4P>l1k-NV(1,d.B!m@%!i."QCWbf%9jU^gY]B.0n#<R"jUQY\:MXC?TIA,fmZ)Y[cI5N579T?(fO5-YBs./pb#,H'#OQss3@.U'Xed+:a@rC7hoA]bCFtebku*)(r\DE`%3)(c`3g\i*lHqf!)6WrjB2CP]YCVt(r2r^@VctnqA<_JHbUN5/feT%(O+do\DUqu^EW]8X24W"EJ,1!>=ul.NKcn,OpCfXRVNfYp%A5YA8@j(i5Es/..hetg]IQ_R@!*Xe%8^?Lg`S!O*G3P74?N_#<a9m3k26qTNC*1Z:gt3!M^UA1KA'EK]5kUm,65nYJC$#.(]YFF0%n&V!;Xcg(#LuL:]<JfW[]X#%M=VPcj;>g=u;7oduCD@)QYV*Jq<i;f!Z6f/:Y/`'=T@E(MK.%HFCc)mu[ug5@ai`&ufqqECV#9CO%g]r1ET(UQflc^=9Xn])bdjo2B**(G9',bBMU;;Fb1M*JLJt8EJ4h0>2Jc4XOiaL7LIE7E<qq:i:2NS9(c')=X9c5BN=W1I"H"$Qc%lL%AAR!'RaSS;J*X;7XZpi?0e.ngJ[G7WQa1M*nT;$LTb:\0`g3CK[r?mWNl50Yk"iKeY*SkJDG`!;r-]ntg<?PT*?AniH:p#T_M%o*r1%)6]1)YEf/N/TA>][^6ri9TIMcDG6TPS+(jm:6sF1lqSd.G#h)(T'a't'p@1FFfp;+]>"^MrcOWQU.jUJ[<Z]ZSe'-6\eb((%cA&[7Q?C`H)&`7#1j1+4>RRSl[J@@1+MN'ro*_=&%XV>0lQu)i&(&YNi3UQ&P1\+O@(-(B^;mD1NMMJESr3@>U:g=$:!^_=aCBLi%dF]KfSb6VSXbM-<Aldsa.JN@T='n(VPM8hW:K0saXJ9I'\G5Y&aj5=/8F(!m6*:5WHeY</<The`U?u5CV.ffZnE=[fMUp<.V6_mQ%[-QW;(iURWp`V%_!QL#E&&V4#oTGpk)8FgsrNr'>VV:deIT@rKqNW-=Mt[i4.[L=e<bi].@\$FGjZ6WqPu:;KQU)@"4:;>I3*Mdk%7"5I.]);'-PR++]nc"^)qn7;GDC(DsoC#=b"&&=;o0Ve2V=1f@RG#>kTM)cjTefHG(Y1Dg;)"n4Z=pGT<%2lkCJXtZL/Y$,()$8g%2"[^f%CN5h&iP[jX6#(k;qm4U??eH[8a/&LX7`.@n6ON,UH4AF3nAPW=bL>MCg?Q0VnZfUYf$`M%qtZ9+.GnZ/p95IC^aQBHHCN8%L@&U^&Oc!+)U#/ISA%3E2oL8!f@lDnkD$$Y90$mG[V@N>*=(>L)p1Q4hD>S1l@iZflH;>IQs$g`Rb>h)6<8Bh6rcLJrE*mdkc>E+%Z]r32FrssHP&rML;S?SVGa(i]ah?d:U=:XuoD;_?[6d8?WjC*K)F?gm\W#?"a-`C)p\W,o``.ba(k=4"@]nSVf.j-LO_ZU*oD11E%D&o`JYB!HBDjT`Y_aN7RZUV$m`-7Ei'K2MA$]*F.Vf"Gu-^XZ6$7FLcpbqLQY<_fVlal$/1dk;<WFr^$UoFmANFPt8r6/?t3`mf^%/BeuF0pWV?[a4XW%p46k/&(]GbLW0[]:3@lFS-MnH)Y`7*4g55:bdU*=1r%L*4ktT3dRjIO@**A6!'1#3,fA`@Vl<T2d:7>*4h"n%9a4ma>)nn9=._e1b8)'LLTYr"AC+=g$P&Ok=._dF4oO>\kistf\p8ZJk0VXkd&D_0oGkI=%(_ZFH*4=pq/N/\fVM>U1O2531%;fa%s4.Fe1nIUs3)HH.MmUq]4YUY\WX:a\aiRPKr/Ve"q7$Af<EjcnB.(a+:K\?0=e&C=IEF;@@[pRjiCYT/Pc*JO_K?d7;d!2[0D3-6%G^VGpF'TY1ZbjjVp!"p6T2IE81%3?N]BPSZl>O55fr$C'Bp:ASLf8$mY[99n$3dEMY20$JU/Kqk-kp3U7cO]=h?ITP0:VVQD6&N,%8s]0b]"].aD-(?q,a-uP"bZG=G,qnb2n/E'fr_Ns-"g[Zjh5Oi#R9PZE0+oc#mKR-(6'#jFD'9CL0C-;Ac>A9\U9,Vk9;9AjG_&h%E8H['+$'Adc_,98l/C..<3%hgX$Mn_(AYE(',][E)aLlf("*uTE0f1^XPj_rmS_V0ZAjjsC`lJ0n5u5tf5S/l*a%;NYio\XH$iuu%eT7NPo(`('?41JB<G"jk)#2d2Vj0h-%7KGSC0FmOr/4W&.@Set;>jt^#Kc#,2P2ok^Kqu=hX\aYFh;DO\gl\9br`!"R-2'GAe!73%egK?eYT:'j[q#5Is,hKK*Grj&L0lMER0e$4^=,kYc\RR4q\92+:B.-G"PNZab>i+<2<^bV_'*^N%5K$?mu4@7FX<lR#CWj=Oe"#.%W#j`sn"A4GMu2,Z."[nOY1aJ,jF6p2I8;9S)(FT!?(n,N`N:f)p>([T4T>uId6BL3U"(FZ!"8?%Ym09caGaI$?uG!S-V$4iYJ8s'%TOq4kZ7sUUbSERAa/*j&;X/">7T;28:'5e.fAlC/4Eft4IsJ-K5*_O[E^8?IBs^ZgR<L,4=&leNeWtrY.2=Bh.?1Mc>j@OXZ,kF-%fF;ARWL6Za][rU#b$&?Dh;g.C84i(_"l7BHF8htd7AaFVRX8gmmafGp)7>Gg)-\6@q3*O$&BWA5\\S^c3M6*BPL1s;3:iY/-KQ*_%-k3;>'0Koi.F$b"1(K3NZL\\U=rYlF5Lgacdi^ZKL*L>bjcuREI/1-5&%.2?`hHQ]/3b/gDV0TlQS\Ra<LPBUmXquWFm<XUAe:`_%din%3AKY+k2a<>pYsRY@T"d,*WuJE`=OAeA]XfiY5gH/,:54`LI+g9.A@fp$R7j]`2M1YAhQFQ:fO-uiBCh]oC$Pj0bo#:6f41f3%f/FeS2+UEsd.qW,^/sQ8h"bnV8#Qo^%p'F<3lZQWd5+[ijMNk#(*"bF/k*fY)0+]^LJ,Tk]brS*UBD%tq/C%"C#DsM`qaSUdYt^6%\Vusff7i:'%KJ9D#0r"ij7Q.0MiGq\^tq]8SB_pd*"sclogu(+D'3U[QWLOZB@S&o!A_Aq2tC)$k:4/^*!t<5T13BDl92fH-`]EA%];flpI]uMK[mS^j/_)E'lY?JZ812J%+g'>i(\27Lq.[Nk".KI$a>"54;c0)QAleRr`@uK77\Rr1IiDfk<EY`;Nn%P6@d0;H"?$Z@%N?`"R*7]SmcY.!ZoO<o$PhI/EVi`T;?gEIF1`,O0"ad("H\E(grMiTB75r<aE],J40@j+!Y#VE_KCl0#I:4fjp26B<WUIinOnrrX%)6'8-N[5q#Sm!1.7]Q):L5]+(16.;moJ;Md<915?.g'(K]p:gcSpju-(%!*JPXiWDX$UbIg:BgW<Rn`")E(<DbAsl1Cn2/:iNh$3%jKJLuWGo7fi5_,jf>s.8E[k<tY:Km@N%5Vq29J0ql3Bt9CGi(n10c;68hd(7=t(@2?.\:Q"&sqTNkCu;-p1[>h=#_;`.I`c@8mt&%qciOg8XYVQgN\DQ)4fS?:tHW-0`1Yi_a?I$1ki'q^aZ7[<EG_-`-eD9j]+!ib%b*8WEcRo_=Hk"F%GK,YHbN+aa!%h_rk@^$?9SN%lUd5*3g7b7o"jD(dl[9ad`/>3P=p70?K9K'2j4Vf*X2=S([nJ%/jDMgTd@DP*?'*Cn)AP;b)*;JS*W%7PO,`i@\rfYaZ;5%EF-uJ%\k$1YRS@sp41b+MG=CBAr27-lik?sVq0jsLD(U!00k`838W1_=]7$['YhPcAbLUFr6JfH1mgbf4`N$JZmI'&uClVLJ"mk?g=/eK,%a_l=JhEJ+[eGlfCnD1rm<JI'R^L*>op>)_geCsc3;k7>Uo6Y';W&hiaY\)7!CUJ30X6]4MVK7Be1[HGQ9a>U;2L)3=V2oQXc4oKR%bi/A!Er+2TIjao-ReL,^T/Lt5lG^HYCa<Q1RofV"I]'NnZ0$W\RNSb\]/5jaVtIIIqM3kg,hUr-kP6h-X?BRcUI41k>ZR;aE`SA.%pK0S[0@eig8pXFmeTb!2.dQ0f@]m^nP?aMuWUcq!4u^S@4M'4F_.'Q^mR?Ggj%(f*Do><0def9n.]lc1\4!LiqQ^9e9Bs=U!qU3Y%QOaV1S<@&GlR(.@R'OPm81j_p+4kn43o6d?.<TQp/.ZqF,+G`OL8g-]0kJg6m+@]3l,ogLlFT$2c)*!q>+qt9aOtZH\TF,9b+Z0+%#0M<53h%aE9O2H*-s#[)Cq;C`,6c2!b,4JD"[//f\gi_&hJBbM<pS/>l,n&2\<aC3e()D1N%pg)#X0Wj[<^b!A^cq7O)A6WZ";CL%Ok*F6kXaBKR44P/\s.>Z9\FN!\TF:b1!XUHZLc7CHH2.B=-cK\FmIrSflTT.GR)BgCQMm`L2=H,>e8=,XO#]_KC)e$CqB0X)g=2G%R2\RDs#@@LauX4\N'!N3%(CT7d;`aHQ0$HE<2->VU/*[Q=U/(:1QH:_Z<Y!=SWBOYe!9%CAT3,MflUfi2\f>+.^rnA"Ya$:0Y=":%ZfuL/8ef(W1/bFci9GG.H"V#i<5cjIgbhd$X1G161<6=m\p3$!Y0,Pn=5S15DQ>:Q/k3FUY3^bGVY;G0^TXdmB.`3]Hee)@b/X>N%,L=+$<7ImR>5rq_;cB]Q[qp"`?.16:F@Z9UZq^:o)OX7!SCQt)hqMd:Vc9HG19"XeP*rF)infQBYOqI\,kimg&Ja>eR[Co@YIPT#%)J\JOmRm%WMAP(X'T\VaR^qQu'\c(JC[O#pT[-&N,8aq_R_+^BP8deKf4pOY39iAF\<X&^7<]3!fiDI$Q\XWk;2><]F#Q?i38k7o%6NTW4^H<N@T#Kg?>\6i5Y%WH@p=5L>aQ7^$-l/Rbdc2U&*A,h\BAOo.\^`p,DWDB,bGRd83S_XHcUqtr&I*D+*"mVK#+NdaRO]l1%\=7A\7[K7%:(Ik-Y<!UZZ-1>FL51eDU<Gj)BIIKmNuFpVbf>j.%tXKJ8aK_s]Knc7k1#].5=n'ahsIGW'_-+/HP-RuBX6cl`:5,(%)U/>lL:KW[mB=u&^80n*?b]@<B)._j,s6:X:eAk\DjmV`gjB!td8m-paMmLoYPB%#]qS.9D$).@<+\?X*4;pN'!fN$KAkR)hI-,%%a8uB&gu#^\q4_V1]2k6=0^'NEk\'BQL>j3blt7=6S;[4.fu*M^F1#$q<jgI"%0]%4o^<qc]HV\;d88OdbpP8*Yu]_$2dg)rKfG]^%+_cgg6elW^H#L+$j).99Bl:F"4nGr#%<meLar<@5.(LdFA2LC$iGQH#nqOg9Y2kn:bT1m0Fd<@8m:K/`L:cGnY@@mG@$""L(l"qu%,2Di_8ahKrrT]E;ZUVL0[:2m?kEjK,O]<4NmF0M=Mh*Z+#>M;egA:C=N1O/K/uMlShil^-TB8SBWi>*lg:D6U,r)+aA3RM8[/BW\%d$f*s?+d:P?k(NQi2S]MEe#tnP7]]d&efJj1*c.ag3bi@g<L`9d3)\u5qj):ot(f:2RnG+rSU7@Q$VQ.<MMTsogqiXF)CL$._\,L%NiPjQ2Mik_DnKM=lVYLYb-kKiYgkkVFm].L^FCYrF!"]P]l0[bfjttfMR=K_a&P1$/PVLm@J])q*aK;*h.-,<%;VOdT&`1!QSgHb%NpD-GbKFH[2k!]5LaZmGM$:VK^\@\>InIa;B@+3'\oM\+R3]HnnNM!jhVb#]PDdKK-V3Q-B5V)2mDQJ33qD[noZU[1e?l8lHfcf;%T@nSDVOZ2HigRKYgT?md1q]l=?e`b<fZ7B?GLuXsIH+T#DEU"H9U==d]%k&-G3,CJf!jhG.gKq9gpWgp**;8$S^cK5[e;a>BJqa8%HMYZr.N].&RG$NqIrCm%f:'m<S$,T(PO6%bIH-ifr`3i8jo,G4[pGUe?`K:Y51eo6?$dGL3LBWP^%?HNEmWLg\aW*h&mi1jd+4-a%gR50Kldb[_qid:t:-STgr$HK^Vf=ISs"_XAR[IO_E,sgnc1s$mcN!Nb0:;b9Ab5kYgj@&1OEo=T@GoG88`]8dHB](('8t)iH%C*U%rO^47UU:&ta6G/A`*$f^`#J>gUF^5%\6I1#B=B?a9ViMfKh@d5j2PK#<Rk"\EAq)lES,*.Xnlcpc#74IBFn?IC!Ot;Hlk9O$a$Ga%VlYtA;HDL<V/eG,<a)-m%Z9aTeeN%Mk\Pc/XkNH5hX=>_4]n'12GfX(9W9e*o1n1^oVPPjDgr`;^>,[tD!bie'r,9FjD)D"Y.e]^%A7MdV1M(V9j_4CTnom;-T8g5RBs1j0SnU&^J2bO.jk3u^2P_[`lrJ#U)TY*s/ARraf%Hu@A-%^*=[im/^0kRsG-orB$s9g?g((Gl%)5l$35'E?VqKBU,7GlCQo=(>0[g@aKg_ufFI,n&Q:T;mslOB?AYf3b;C-g$TeJ,o>@'[u/<.7?(TJ5&7Ab$&FTgQN&HZE>)Q*\<0%Aa:kUnOBs!WITE^*"8'AFYlX[KBercVK,TR:`@YR.;S@Q9*@'k\L&%F9CIX/jeS\oZJG9+S&VFt=(Q),3R)#`cMD*rV7RpAY3E%V%/NSmRKl]OmrF*G)+rfV62".N<kAm49l[,8L+?NVfOB+mgY*9EsEr\!;X._AE-96V43[@((!B/1'lm%MaaTCgG9RRE/+SOmTDq+)>%nk`J>R5rdX!#BK-X4ib7DUe"7M@PmTQsp3+3Ilf7S'(+8j[MC2rh6Xu9,:Kq2H6e'2ou+PO\FVtXU=W$0(Ija\<O1@,MR]n.:8V\%DL@fA<EeA$H7<4%1"#3K93<^9'Kq<Q`MIt8qi^rZ9DKLU;B*NMI!oJ^a)iaPn#tNV)<"K-m$(7<YubZ16_.#feDQdBrT^fG#.:-C%h<WZWPA;04qIq;.phE0]hs34/[-`tLqUOKg2cOXmP'd/m(K>:)*W06YdUO1gD5d*?Ie@+rI3XLdhWn5b/!Zip,MhZe/$M5Ya8KJW%f<:f@WMtJVJ$34-4B!TXH>WG(rN])>?fX+uh6QZZ^O#Z+]:EAtHi;*mm`#g3R_.1T*c^N:/&u]+7lMf8D!=HT\,,d4^TuP+Ie?gp%4=b95lN)$M%1IZg?eN)<ghqd]Nl-K=(NVIDO0<OUE;cnfA%I`):\&/YqtU$ClW;u%aVbul?GGiko%A<Me8k&*rOS@pHE1De#19[L%qUMLAW-rLSHi6jTX(3`EEuFXW^\V15P)Q)3n+H"C8sP8$6Y*%d=`]uN;(c&_I]m,WXaXcqIGX;A`*5D$]mfXfo^:`Y4n#*@<klK>%iu@-$mX-o_nQruho,`4CREKAf&"`MlJ#cqar\E->I\UPP27_>B?C^Ir%#oM8?Zob$D/fhq]_#OF_56[1me*XEAaa)=m59<q?[XR:%mc,5j%<K2o`qifQRO44ths*."7@fTgr>'0eodb>XC6L5!n+@VZ.rAPC(T20DX3.LcoNo:YRAk,TVM=jA27ejP5osp-Hh=>>=bGSO%2k1&XE$*uY26BJgolIDWhsgC:Q$AQ4e4q+X?GCfu<apV%oj5D=S>QuP2WDE!\OGZ1p6%I<6f%'0YI:p[FK]&b2`%jO,Mh[P3Q].?%IW]sJ"lUrEf5K=*_85R4Wtu1E9,db8^H04#kSc1hj1*_0IdO7de1AUYY@"u`L=5i6me*W'Qm'(b/GK"sYJ&I>lUr/q?G@s_B3"&Z%iU6B>SeAp2.rY;*r6j3GJtJ0B\N$GPPa+&s.:R%?Hb6kP2sj4A*gs>hMX7c$n332IR";0YS./+$B6V%e%qa/Llf+Q/-88/eRf[^l%ok3+IB@<4Dm,3!alK\ALT+>"@mQPo,8+0bGZhL@Up^4=+ON[6-p[Dp<k0r>W8XP)VB><g2Qu([Wok<m@rP.m^h)hh6(Z5/gI:6u1%r`ZQbIk@j->>JUD=BcS+44a,KGhM@EIXY[IcG+e:?C[ScY[0P8A*_D"T6o/DlQ>#c4mN;S\bG4B5O7.rhOO7Il0Z.Vq.T&Ip#XBo%Dq;`TpW!'p^7VgI5+?nEF`k+&Ecq?Fim-(=qp4-L^Op4fH8`DFJ`,&f1-9-8J"H#>fQeNfHarhG_tV9,gGA;BDaelq7-^8pID,U?%p5e)e;cE5/o==+lj-dqoI/Cn1YP/u[(Qqb5aaZsMhXdp5&l!_"[.WS+N-4IY7+uf;8h#QVQ]=m8RDnhV&kY6LbA6u]l3^('O5T;,%`Fc5uZ5ruE>$p`IRD6=Z^:[RY;N0V[^L+Y>c9AVDet0$I>MkI5=PGL#T3kBD$'(+Z3bcUGs*&PS?M+/j[Bap/M4DMNf&g:`^h`qN%Po$>k3GduS:QkI@#.1r4T"R"hZl\u+mK?;Fp>l/-kMG:jb3U0)DDrn\D+#n<9CiZ9U@$(`ile=aXViD@50$G0-C5gb-^.3LhX=,j%r10.]*r_--9^DA>c6DK7/ULp^^9dh1E5fhs%NaKk9O@7.[Pj[hOo4nKdU)eLrP&3;pXe'nXd.dBD1:m/MU-2lCTb@f7hEX"o@L1p%"o2bC?H;q$qf`X5Mro#%DAeMYk-<s7%YP2EC``WU)e0T^Z1[>YU3$:sl+;/3KaQVRAto%;q;)YH(#6R5R/5e2f)!)@L\9cc&'ima%[h&697_/PDV>$1p?JchNhn62*5CARqRlRfU[dPg?g<q3aY:l`$8<(:\\4p;?ZllI:e"ZIj4n!d4rq0'9H=c]qIIMDX*d8_"qECR.%-uE0]G\'0Om*dgi'+i#OBPAh,EqD[.G5&r_/B^]IQ%*^D_cq;rTSKkZqpA\ppA26K?b_`jT>!CH?Pd:(p:7T:hs#"%f4:,LEq$o#%jc,PC]=1kVs-\;IFa)=3Q%J'B*HV,VbI$84jtLj;EC)U"]$5BORVC,c6=JR7r0->U*,TUWS3;;,nbC%-;^q$ZD^UYE``_)!ReaEM%\+BC"1OjR%h3oLca\.CqG7tJ8J9LQo)4S#Z)]\j>a1!Qe!Vu&pAKQ%9cc]Z;D3]QONkRLIj2[1Mg<lV;^UdGL_ZSN>9MaRq9`Vd"%3<0)iMnbkAT*KuFU]X8>040qWJGfAV/%;dj3MT@UM)NP%EOnD?'P@5gJZD:!mhtDWlb0%,`@fpNmkt]c%d#u>"kpG:c?"<Zk3;PW%KK/EO)!n]/<h,02O,JV;pQguk!:GcT+DpF]LaVXkQ^3-`]5k3l[8Ll^&^$18+2B(O%Dc1c%RPQt3glIA:%3CmbF#Up^T?9dg)_jY%`hjnX]_X,f>O<,Upj@M^HgPY7c^)7d\Sc7H\U.a"l%,eiH?;IfClnrf,G-X[e?U-%8h#j0HUiG_hIS@qPMkfjD00%a,q$E'S63Gu%HLo'9RJF1/F`m0JG#j?k0QQoe.StNK=atMRo`QtWiHjBo8Jb_A*W/"Qr@?)FqPTZ=hu;Ora[C?WFn4DgGp4qI^WdHX!7Z>l]BLsG%Mlh@3mc0AA%ULN,$6*t^p&kA+ODjGmesSa0$NZrBp@ajA(1;IFZlT-O0Q"S&(3+g&io]+p*LtYOB&<XdZ=`(ms1XB/RCRS;:^H"=%QI^il&*+8mEt:I+V1_oV<iaap2QgD2M^%'pk'3nM__J#KV:*>3[PGd+E\>3#Xmjm=o?ur_bnZ>m(bI=JU_",Zmd?que0F,Xqut.9%n*<>"[@ir"P8CoXCUpA&]Q7.T06Mj.a25kIpF)0c<pcEIbR7$&4a)qn8U'Wn^ImR^q=jYm]&_FT#6A#[A[?:!kcj1lluqJV\.@HO%=A9;MG76su=-%1,njg0Icfm'B?T]k),3;ItRY/.H]Q+eA"fgO@1'cqdGE6pG0%B;d]9T[fg1BKe'ZD[gk?pNfj[Cjs=lJMCp,:f<%DtUb1]j!2OA+%%e$tYYiO8U1j]BFj:[BoE"W&rM$m!J>3/@4L2XfXNt0Cr1;-jtie]OEkA]mXfii>gAe1?/+Z,+P^S.OC\d-c1.E%-7>Db-c.kpMAbs^57u1T[nM_Cs+t^OR]2XKa!7)b,P)EuS.!&A`Uj*t36,4NiqZdHn;+K/3;hjmHmfW1io8qH'-d-ZnqnQ[5Y`7B%/,&,S21Ai)fV+E)8K'nr!T-q`-i_u6PfJmV-n,+2cf!@=gtr7<*\OeA&Ff+?LrapE\uO68d*N4f_N,GBDr88kr7%",Dg/lnlh8cn%%tlW$SaYsN]bK?(m@Q#.gH(8.rMPPMp<o;sZo+&oSYsn)\@8gDp%P3p:t%38OdBuLrfOkaI(h-2Y1_R#WO<E:[i[4hE-R]$mB6KH%rDmJ+<]b?XM9(OU[Qh%flJL:ZeVgK#hgbWn=DHZ+XZUoGgMd+^>\m]:T"[5`5;sMta8aF\s4g;L:96R(^&IeHjDUP0?_!W]/7n7.%9\DQbFujh!EhhP[E;nhao%1"%n==?c'WlV8J%!\sIN>P=IJ36ZUSU3Kk;s4@]kCpPjPOQbAn-8Pdq;!PM&hnFq]0X4[>f+pp@"R:%=8*1`^01@-;fY%_hV$(2Ipq$aJ]255Ep;NCj5cB0om1Xrk??GgL4,>e<)^kA4$iXgVU:naOM^tp?tTAp`eU\FpRM!SkNu@>KBMPJ%;`%<7>e*&/e!esIVgn/Q^3f'm\auNdkJ"%orMN.I_;l2Z];MOSZY_Ap%T+'Ys%@C`ci3Pb@TV4].Os@ZgSg*X'@M;Yhn\a(boGfT%K,]GIIX=!KbFYJ:D/_Lh,*+CV2Y'^Ykf52gN6,^:.jQ5WA]ICFo'DDi^W](D@J>NskT>"u=AJl=8AH<,MBG4MVp"c%h/DZ0&)1lL%_-rrhUtabO*Hgm_.K./.n"fhJ)l&5'/K3_<9.A34neN(\F'FcIkJ8Z2^.e9LoR.<5qf5883PH62)M(4sCrOESja0gJ?ER*r(]JOS%i%ZYK9@N:ubI?ih9sLC_K.H']cMXsQ_XM.t9r&jn][MT0=)2I9mgG2"O2#fqSj&`nD5D-I<1O=*SZMQ5(C.;/bjTB(Xm`Nr^K+X$%00AoS=R"`0hE'Klr#tq9kk2\p5;tfslrmMVh1K(to=lph%>WX:icb-]Qf1^Z&&Ks']Mi;(CqO!XNIA9FLp-hRqEFb7&DD>O_DL,s%^iP(A>l?0g1KMgocfoI3KD&TP*!#A-5JO^qgO-L(m)duZg"!5:J3`nYg8<DL;agL8>qp"WCZNi4d4D,fA/Vuq"p<c_<`,-";O'Cp%:@6o8GU$u9l16rECi.]YN:>nTo?%b+5<ZsFl=+3ifidU3`[CRk%k"a5VM?#A8o9G)U?o@O.C?EZH0`#fK*4S[Vo!ib;s06er7>8\%rd=*Bmt0MClSDflI;6!#l)icBgi'*1s80Kp`%oiI/H=quK+]XF#k37lTqpWGrWOb2][kM(*IM<<bZ7BY=9o5YKa>a$7QaI$R9Q.f%r2t&$APW-!<UkAqD4`hKSe__s2fmU,/p<-WSqZR?\+AfG0dBsTA>9^c'".WgAVlk6pYCcS.[Zft=hD)h1M.@q=_fOe%d^=lgNLmj%8)$(8ja6lGj@Ljdn%[[(KWb5X>.m_!:>5F@->iW].mID==`eT<^&+'Q9_ZB[o;<JY:YRc?9tmTL!sH9d-<"^78B7@qo]02XG.s@r%M1q(66!m_7[;2qe'g2F8>rJr6<S.[CjXi%,.;P)gnMO;le2RX1+*0r]?@<GUmqqB^'N/5]][O4LTQ1H(qc]8QM0J\'H4]<lV!Hq0%4o<r0#")7k(E1Mk2,htX4gd9'**26g7^RMk>Al/Rh+E7'dOsbX0BkgcE1)<+OjV<q/.73:IB:aG2X9h7XcjRV3*BB800+sb0%[41%IqC:#IB%i8W'e!2C3sTq2\buMDsBJo%eIf,IbCikhO?=Xo8TrnK.MVZZaOd:k-$"fj@S/&Ik-\?As#&ur^2f1UR1sm,!"!2H2BfA%aa(YlmIU?[,YqK3rU3/F]JTWFLu^[b2r9$3P(UOEa_d%_\4di$9QAP<Lb@-\%TCV3)TcRE^gRS=4JL$ks4qVLC!FHeF0PK',]39i%c-/`%ldM>QQ[$>2=?HK\o2"Q=Inm1Np4WFkP5jLu0V5M>BYs:f1g"GZ*4=r(nq9.jdJ;7[3EUQKFgLW0pu^bYT>R`0R92o,qe)J/%O#JCd-hQ3sH2#V&S4psaOLO>LH!$OGA;UUDCZ:KSs8Dt`d3%?IQh'dCAPMCgI^^ja+aN7#jPbsnnOo>MpOkKqCuXJfCZ5Jh^M;GQ%gU<h9RTL&P[N>_!`-H,Y%bj8d42&'tYK`*?[N.H$Zus,8CJ0*QNO/R2s)[#)*sLLhkfJ>9V=Tuh[_:#o].JK]N]]ClLj]#:(j;P3%\/i/01i_;C>&;r1#EBHk8/ITZL9g&M4,g7S+rQ(D5qLpGEBAt$7pCAuRu#dYms7a4PGFm2:=><L,j?PABmqYS]$<r/%G=fI1g=Gn%D*)cT=_bCe[jSHj@I?.I=P$@H\D+l5:EO)i4Bm!4_0k6R^Bil"6"ONkXZm!AOTfuYg\!quaS+A>+,;g+VeoW>eS(+e%OTu8*I:!o%%:2+'4Wf#[7uhF)A/abnElX/Y>]KKYf+Iqb*OkE)DN"eGZ1PR(ck#YDe@%Ksj#^Zp,KS5lLMs9&kMseXZWh?b@0Q%#^g7LVriq'3%\_Td%hn43J.0(8[XREinQf\1<Q7jmZXrOjnhVu+u[KT3]K6A5'mY!)E&-On_rQoPp.UUJVc]P>fZ@*+m.Z9-GI79f,)WGq!$"DSZ%(N=tlbRbkMmDoWOe)Xn2G2VSjle=<5jk5s;L.IUZhft7bQYjpoA?TP3J]u3DA?.95S&h_Nm".5fq9]X^6h$j`!OKIA7[>ilQIte7%TM?J7?S/<q4+TVIn_=uIE7uoSn//bN`'A^n`pliLSkL<gdR-NNQ06eV6Nnl6JFOJ\@pi!7gT`oCbe,2!A*IFVPmQs5Eht])'?60;%e-]\G@Q>/F"5/^m\'OHH,<I$nb,[/'a)+<Yc2hVFb/VMoHG4=(_2Ea+7J=uIQ!+G1E_ck),+aE=q^sj[G64p$(1JO^&cf.F:E..^%.fuNY6)<Z_a\(?]m003,:-9K*&@<\&dXc5]J,.0(LUQYl"g1Z^6Fmt&C^@[-<[coFA]I+re<)l0=D\[IRdb,YV`$N;^];1rNX_@H%\(pIh;[8DZ>E8[#SdRB"DX8$[@[R@(+I5\<d,E,b*Wo`#d#Pa-JhLS]_%GVJK@@(*S)C&<)1NhC3"0@[c<GJEp+bsUDEG9O;j&#P%!o3>t[+NF*'+$]h!&0q:O:(DE,`Etf8]dB(Jn;etXO)"Xm+AU[Gm:&P0peIukrB*$&g0\"+$"C)7i%`YR,n!4BVGkG`YM[.K5gND%YrdLm"An#:"OV,qbfDNW[`m8Jm2%6!HPCf.Vh,Zr0GbG?P67$_"]kK)2\F6mm(hWtT(GRtZ7Pf,C:gnZ9T.VUKao)r-oT^NA3#[U%QUp<S0JAT\cHtL[1)=29I,KnSNU<(K"bj1!fO9'4JcM#M/V28<S;5d37sGoCPrA1ne1!E?")M3N8,sY@"_#7E^_C@8o7mWe!\S+G%b2m(O*#nN3P!)?>!5m56+'h&;:.4sF';?L5;VQRAM!Y9=,CU41Rc2rK%g(M+f!p<mQGkRMGoSgt/#8+HA20Tn\>T<ok`aO;[i?Qa%Nq=k3!"h^^F>-'*\C_(g/!MWMF[_=CFibT*0%BJHJ.Gs.j4P1nQi9S>jjA*R1,8U@PGs;0mK..+J=J.1MJ't14N;*p)0e[^iHbP[%OFfa:aQ/M4e8<@plN$i55F<FI9ZMuge%p.2_e-L!"`_M%`6!mJa"0=?D$Y;YrlZ=gLnt/'5$A(i@ZS=e!_WPe!*8>;(*j(lN<@o8%>:c6sd-'?Zq14\J+7RJ:OOQ\:OoShpcF?'QE-]YoV]?r>kVEbUF+cmd9uh;lq"R2,'h'hp\'X+?a's>jW*:ma)<di6\@-)_3Z=i%%Y^FcE!"9RQ*JB">+r'_l`A3_"='2pPcmk`B?HK_k@mj;T@?@u1@k?4Ipl0qu]7cbH-oKrsUf!/qJm]J\#=JPp=+D)Tb(t;60b?[%%$,W46)fi&C&g%5W6oY]Fr/_F?0AomA^;K+NQnH\p[Oq\kit*DM#rdgi&dr!5E54_-&s-7#,1^5pI=R2;PDm[s$cIcC-UfK+0iTA#%faV2F+i)'0OaI-1dUJ"&MmTu\Zg`\s["3-$SBI_=r?4?Mfp-[dkOa;F!=4f1^AJW&foG/'a"Uj3!ah6>?_gn25Pp1#ec4P:=U1p#%*!"LK[dC(30@IM2`5G@`'*5:-VM@`nb!8Y.D,-9c7,5"meE"-)Ds:60`9A',2kN(lfHU)MJ-H0'hb]P>+!'VkBF0)220"f*/tW4h%f+WG>43kp!GoCp61*[a$*h_=jaT*aSJEmN2$mK72QkN:3mDkk,NpdQkD9P;;8KGT*ET6ba?O4b4X>gD)&Z14e'e"'<!V)8Q=L=1j%],O"0&`uec`SG*4;5dkH4h-l_Ykq7AR'9;H-.!&<kSR8EnfV:q84:i@gEH2Z:mOue1^M^0r/guf:etFF/M2RF/e2.E3/#3_aU#\H%!5!j7*.nO2N$UWMcT9uojJ!nd^cc(:"MN/\jGZ?Ad"%r""@b^Xn@\ob-I3kEUOV\ed6I8V?H@fdcmPB9bTJQ\%ls_#)bUrm&dYcm%X8nSs4UjN#Tjjl6).F[9nl)oU/>^I?m%Sli*sTT%$OlX:3HN>1eTiBEfIFO6#+rl+b.[u%`?+d&V4@V9>o&:go7St%MTtR8U6u'n%jQ)uk5lub&!(o[N,#='sc+ucO&76[76]Mu:JJ303I_h55B+[Q-*!0,K(3-*G^[Q*,m*fI:N`*4i3g6cf4Bi;,=:pShK`f^X-J1[5%'GBVcEYZ,S8+_f-k#..%DGft[i<8_<bgluE#a:B^7Zc>8>6HTq49l^C*U$8W<TYPiZch"A`lNWQ";'C#_kKtAlT/&Y67g-H!gU,[%L^t[g6U?6k"$K\hSRMg?+XebKmQu!5P2ljE#M&0OK73acppru(khBL[(*lE:HOr20DBdh+&?\3\^nHI&]PSp%Qo'I!atA"&kEV-D%_"%/jU4^^K+@2^?';,P4!`5E79#.G&!$3U_OL:e1=g:/;1^Su4$]0`m.W#jp;X+uS;Y1d;WbjcP&%k_C4K@t7*I7K4>a$=GQJL*;%oF'9KIc^fG'!<]tUn)b-X\:^[jX"8QK7oQlgh8>0WQ0g>i(rDmK(9:kEu!"G_#qb3@9;G9E1XI*kBCcu9Tu3=(FoXj1]jKDgUUYC%nh\oB88Rc)2@=llR+\D,_u)WC[LHI9R0OT=10"U4*feV='[Ip;ao6XiZCEVqs,%^H;@8*il@P`e$\89t;/;8Qp10&H$6Kfb4Qt$>%#>ca2L:%$r*T@LQ*#8oISVU*QA[3F_`"LUJK1N+'6"#ho>FmCf"1*k5A@W8cU^(iGl+de-:eLoPbRiQ*c3JM+LsqG"Z1Ick-X)/8%$9O%09ogdY.B8mWLh>8+Alk+T"HkH9&.Qbt;/n&*/`2+[::<d_lhehs"nc\9FpZJK_C!V[-_@\50]*"\K:F!PJ.D(8++uISJdeZf%*/+GQ0N-=oL$;aIN,kt/B^21aB$Sa(]#bnbCaku$IUQB0m,U1DHc['FfP%?GiR@M[:_42S:(K]'2;+cV]X^M^!##W;kn60iK1SD\%[V6/p4r[]S,TD,NXP/?F4c<V;#5&F,.06'3+K'^n,uD-9oh<_,4U2af.+_P6'=LL_gECAm<13mTYR>Hl,)r6".pl+Z,Ur>4BIA$7%phWm.8tH2\iZS%@''tZrUNQr']+?%e8d1/#npAn$8mP4_U*[SY0:*I#Q8*)'#[o$A((8WCHF!rGYq6NNZ:<2aRlhc///W$Lc2F;N%TeH\0KLt7N:"C7#`b9N5PR2[V)/RR$pR(Yif-S;]SE^`q!ju\I--`VM#A\AZqAXP#F$0>3blQol0LD*U9]3h`m&TW+B2IDolr*3G%qLoJ\N#*BY-ubi!k/KW'EJCWaU#7e0@%.lVB,^%RII\/IO.kZ6O=":Z[OS<hRmAJc#6n6E1.1PTcrZtP`j'n6?+Q`S+_*3_m'7Ro%[d5^2+RA**OS?OL@GQo+cI7DTQ!;=LMr<nLpd0a,K6Il+^jcAPnedV-0pr]/Y1SP8?r#dDJ[*,i7LKQ3]#<UU@bWA?aAMP+D';):%'rbh99m(,hi7X!Q`Ij^"Xi#.1_K"YHWM=5:Ts+9&&?`$'+mbG\J?'Xj('N8@clF^5dToP6_gnD\(m+6KRS`?ObdamSm#lF:&s-6n%_@f__KC!/H*He%.#u@=q%JD$9"s78h*\>/F'*9XO%\Q2U.A=nB.E;ulBJ>:+01'6g0T=]?`6:D&VJJ7!MVQ+('g=HQ!KHWn1T:qE%>Sb)I>D*hc@2:Gj3r*E>cbL('<n$(K*B@mIiI&CuE'Qrj3[/*63)[=h/=8P-'QOooS2`28O(0!7K//\o@?relOHJ0(#n%4K+#_"'%D$2aN05-mY_;qd2/Iou2S2t$c7N**So8eL6YtY9:_[Uco&7WsV-Z"i"&Z+5.]*B"(\HHZV(TCCH!`"Q.#q0bTYk@O==RFR6W5.:>%,KYEK7u+[[XOQZ'>dWjh]U2o9Np,ZWHp39BF8'1JCHo`$:qW%AYsS\-S-$u3/ZRGLkW/3g#8KS>L`tOD4T47XN_@Z4X-MQ\3Z`\d%DkMN1lJ`\k%s:o\2RiL(78X;K6nh&*<+P&+(m6G^9%D$66Nq$MX%pJ2T^FF9!_"6-n-]736?ZBrbtG6/iO106Fp2F82\_ne,=#IN%!IPgW];"<FX$N%DJnc#,l*`iQ$0bjbOUBbeUhV"ZPnTc)H9KHeVB;h3)8\4XGDp++!t<*gU8mRN%3bln>+iG=>tJI(5$VttU2Im4%k-+q#o<bk75Bj(d?P*!R$:.O#JAE-U#W'7P2"DKH1'8a85QoCRP!@h@m\GO@T^F_VlI+!s9B.7U'Eea01d?5YJp.po2L;(Nd,Dhe%mI=mu&WtRFT]klfBPR(qjX'ASBs42/AK9J`<1bqu.iGhs/GKP`$K+s&d)]BQMAD>+blkA<<DZg!f#(LO@"!L!$75bnngULB/t&^E%)fLDt>Y:[+^:5UEggQesAPQ#R47:7KQkK'u<t/@?=\8&hm73RM"4'[0C(sY7]/^bq7M=d5PI#mur$&@5]$:@\Jd@M%Cn]Z3jC-Gu%l^AWKUXqE=dOJWD@LU=Xh_E#&i+rljp"fiRdL>^Y=SMJ%d@11qfj5("JBo@anhWZTclir67@`".?[d<qB(FW(3;`&UB65Lf(I07!%*ss0Hd2c\r!4<$&^^/51&Gest)i!mNmm%247,sZe!.O%Gb8=uY'Dloc1X+.!(9Un,kH2U/B/HWDSi2EbAA_,97fjSG1'X(_"KNcb%bZm[2ok[P3hJ[]Jp_fg=&o0WlB'`?33_d^%r2$*>GSnh$&WUuDmu$-MJ1(IU3H0FD5XY#UM&La^!VXQb-pX78>eu@bEEmYNdUVG*%b5KETb8(G?U[.4i(mG)_]#3>9IM]o=SY'1'Go8O#OkBqI#bfR&@]-TO+el/2Q5p,e!1@Xu(m4Y!Y(^]o=f*q0!`tK`H6T_(BC.qd%KF4bcLVJ@G9(#76d[fIogbE4I??+\@&'uDO:nQC#&Tf?d#X5Ns[p@"gAJ`ft/]a>ukfL:r>8uMG9KBUK_:/W`!p5UQ8d!m\Ck4Z"%cu\>*I8R_^efa7*Gh0Y]>M%rOZp>BB7'VIF3,m2bD6j2E#D**Y<!6U7^m0S_$,D]G1?-J7d;L^L+XYF1^On+=^k"$in9Qg2Z6D7"%8h=%J/WL;*KX#q15U!o\q1og%hE)XU6!"f=XDg?59LP"]U?J?(G]3b<DlN&!"%Wtl.1dQR)Ko,r>WF3pg_:./Qn]6_-5C:Q(0$/<%$F@nWFEX_2iF?pH+r$tU!=3/Hb$#nj_%-hc%9SOWRA<:(VTW6jSB3-*!Y1>oZ?a%4hGP63_3d<#LBDa]1k^me"OQ]a]/XZq:[B;a%&Vgiqb('Xj3"Ism^cB.Td\@@NOH:X$aDE')$4Z84MRkQtX#>E[O!3SEW!"K4bf%>a_LihjObskO(lg/YFrA%2_8D-A6:U])L<rd6%/`X,gYSdWm#dLd.#U&0N('6H<53'HW5^!7AD8dE<kJBT5N4:#Lnp)EuFn*ZU,rd]n>WgRGOQ=#9#7HH<\0V/gZ,:k*4CmZ&EH18c%.#Y0c-M[/Q.NL`SJh;J^V$%_c!4YR=!(c,HVI.^%_VE5WNIHK`-Ti_D]Ulr)3R%kI@*Gen=b_Tml%"H8oLJ>"GK:dKP*nT!Cla'&%Au6JK$J+9AN;/7b8DiCR(H=DmS7a!q&oMTLdVqZaA@C8?S'8(A0uQEnn8o2GnK_4CB^8:,P8G#:pdL"(bLe\?K?J>/?G[NpR>jt0%&_X=l(35\FM&S%p.jmRn.lIr5!"-_T""4^hOe5i%=f*LaF1QIm'Lg-hMRmWqfk#DDT!N!rT8:-fNum)s,gg!-q=>t7WrOS%bG#l#%k[R]Pj0\oAq%FlOPK8<uKLX[;"'<H4(Vs]P\Mo.V[`7j!q."C'RWK*\O*h-,!-&K.$p-q7R7n!;(53g@&*.gphbm#<*?h5!3fN^t%*_%s4KiA6(g6JZX1OF-^R7(Jt9n=uO(nJ-hU3R$;Pa3.=9c,]239Vs3&0pJ].bP%lM08X6FWADDgPT0Ikh$9b=s6R$`,s0H9\I",%q<_(7'Gt6k#7GQ>_-FF=R2:Qg;SWnF;OK&P7iB.gL&R?@U(_hJP:lEs8-:Xb$B%I,J-!:k4q'<5+K)^L\74Sp3#X.Sn;C"U70nMI%5a7oL&62^3@^b^*@'p/?KoR.OA41FcJb&ntN+dJB>`<<Y[Dgqb^pZdoe4M<SL+q3d(,?a(V3dN3CVNL8JcOd\#)33>(s`I8#>er=%X<=pqG<G@1-><V*J%<M!BY[^ocSlas[T\!MEt`SSWrZLo=WM.9/l)u'JLJ5S.\bRWAZ6b?M$BgP4^%,40'*gn.U&LOKu%o0?ci>W%>P>uKRGffekPn#o&Hea>RN4+O$8'WF,K1B[1(_G.T(p=R't[$gT!Z"FaOk9SI,OOL5oca3\0QH/9d*B4&Jakj#oAMI[HIFIjoRu[%Sk.#BG2.D79&W>mG-I>6@6@=59M5W9&WsfKU2h5:<u7a#8B7X2&"RFJji;+`MCg<C[*X)5ie-D/Ak!Vd(os=,Ndt.[g)]"rR/''c%TuTXII)lA>R83qcg>K3A0_6HR%aT^[<C>(k7Q>6N/>u(6>6oF99H/eFUS0A>UL'=8TJd.>lASll;p+(H9Gm"c)B;46U`E;%j0Ome%VI+G;,Ge-#XgN77h>`PB]paWG-)k:rH=1oQ*uUPh[]*3U7-uaD@Y76N#qVOkPgHbQM:>k/ELTO`FosG`2R1*^HkBo8s$[$u@kqb-%bN1f?A+@q(3HQ&M#h]cOnTZ73g9qn.(`s3V-H?>\1-o-9WWY_;3Xoc-VJlWHjLaPNOR`T%D6HB<3-W5<-,sT9VS;(Z^cmF[g%pF:%3Db*N2q^CRV'=4C*QfB.7te7%B@g1P.<OrZ^X6jL1r1`'"u9^Yl<3anpo6YQK4UI%KRa:Sp!F*ndLEnqbH@lm@O=t::1]ml^s@,h%3O'G_dekK=U,*NWMN'72F7\35j,H5Z>Fct8(I;*._8LOU$*D!)2"\*T!iIjXO`)/2ilXg#aX=FZ=QdLT^58b>C`8h>@pmBcNU`Dk%7a,It*eTD#KdomcQ-s'i847;uSjH,PT]f67o*kSlne9JkcO^XOK:K$D[GUR4kmRCU`<N9&N>++UcjR,Y8<1$DT&JF=i.4?:+f3#q%!L$N=.[JFaL$U3"_imf6)>FDR%f$/k8$1-i8<76q_JP\Fk0rf5\qk$sJYLB%NTk),r5<hGPO\md(*.J?f>T-pjM4KiBk=PQ+I]+(%SX!cfD(.'%?PlcG`J)l#;B$(6[34+BLk'H_#*8S6o[.D@AF/`C^$@S]+ilj2*ot'*9Y^)dA3,SFlp-,eI$75_?j`ahf50s,2acPS%%8)9#j<ZDS#420^b[HJD/'fr@K5<='6@gI`N'h)0(EuIjN<3:59cE%5*$U?[<SO[sR%$)-D.D+>(muZ'S-i"W6k"1"*YXrh>i_cm%J]>/qad+Y!SD[U$>1$rtk_.S\biQ!h0,IdE6)(#Ea(SjYV;nP\`Jdo]2f-t(1$0.c>l$!U[a0':^t$P'Gt02nAAgi.,YUZWKgn23%*:5]Be1!:1VEg?1@<%.NFcqrD#!j+r-ip^FX9\nU4L6isA2Bas,VL)l9fIK0BYb2M,Mu)ZO++lg7*!l0A-O#%[-]-rfeF^+A;a/9%qP&O%1E%C0Tcp^a/l\tJ&S")Y"G8YYgGeR4p5n"nR\>jk6O1=?"?I+9*j]2o*Cq1k0k*8i2rJuZL^G:NkC<lFY%JVD)KG1:;ui,p%"'Y"H9e\eT&G[J!Jh@uCCe/^A!Pq`&i2!_;gjl8kJ7`8DF#fAs@mQ1L/.LfP"-\Y*[V@?:a[`eNph>50<9OWFf`kMoMo5UH#@R2J%,?A6=,a^SD!D0m-qqHoCYfSP7-W1>HOfcDR.)DS`=[kYSBL*I_7)E5\\uiHU$/O@WVJR9,&ZS78n8pJB#hB8N13p.$%2<C]aA3$n%K+2MqJd*_u;W\-,63\7)D\<LM.-%<F[)EeG>t:*hrR`Ob9$`lrM0EVsgES;Ek64T<^E)\J'FX^tK)XDk`3*g$?KpkmG.;Jq`FI%4%ADs=WTV2KtE\LJpG6QXC!H/"QF!(uEkd8Jd-&5&<\5pDc,0&c,\q'N$PbEbV'Ic_,"r6B%JX.%L>mWqN;U%=0/X"rlFY;&0-CgaE%5Y>-PL's8&W[os\j#a\bbR:,a]%KiGoS].=aL>3QBmYlBrE<Oo)O#iBSN0nMFZ_K')RVY)3?QN9g&a2cjk'a>?Jt\af`7_dZ&Zcp%,"*1s7!P/cmpZW9HD+AH6&`79<*t2&f0r6$R@`V4C_0Iome*;_gTba^_]b7iekl.kZYq3lf>)LOD1HNP/c-aAGG!];[^"[UAa8ck%d$W7\=LlY\;?-u2ZtI1aQ!1SP.Z_gCE6DW`^ccQNTZ2+K5mT:M4p-R'9bC4r"X<qo9lT2Sd5*6<_/g'Yq2@ZD&Q)dFA]ZZ(HPHG;%h:LTDXQ$?S1p(qXJt)u(Z2kgYBLoM&#hF=PD%cTR'5A.N*#a%4jY/g;V?%BK'<4E9#u-?<l5M#6TmDI@i#8L3)lRtK66BX>L'^43%aR=^W:8u#1;+,*V?W4!o6+Js.XcP8ZPH?!Ui%Yg[`@`?q>rC_B??]hhFH,ZBN(ljW@iHmbA#"s4+;7PFNWk7"[bX;A"W.=N<.()3%@&S\g,6:Zb97g%mP;<gp`0O-;4!/_P,6=K_2T#Y%`8GZ0?l/!^EQe[7N6@P414Uu)5e3*&YW@YM-HoY4FdUMc9iFGB$Wo4j3!A7E%E@=+8gG7lC7.iA2C2(FKPY;RUONU$FK4ep66^-o,MGTW$mJF&+^*M@RF9b6SgMB3bWDhLR6ES4b@YcmnYi]%n6T"apRt/=*?%R"2%<CZ(X=a7tCIOJll+N:p[[OTh'c=YnRD2_`%0,(9oOd8\fpdk?3<*p(bp5OGi0%JMG9Vi[6$4<`?.]_kbrp)(?=X#-EZIP1kL<']q%"+t#"8/H!(8sW;INI"4D7Da\P,g&tE_)$Y5oX@bUG;P;C3$'k'_GS43#rBt$4hb^Q$/A,ae84/KN8n$hR:8g''[;(f3ANr1A;*to%>sHi#*sO^8O</80SZb4dYW=^Bl[U#>1&A>Vdq(SF$fe[r:9'[iX\?$?Q&nkj-b.g?!a8MXja@4,R39I.`[khDfsVZ&:rAN/([WU9%%E[%!CZ2BlaGlE'JEGU6F:Q4ER-5(@&VF="iWCsZ&0Ji>'uGK'SACT(i)F4==r\F]Z<Q.`JIB6"a]2+#W!D"P!EEunh1kP7i2CqU%MC7QK-f2T?@rO;26\?_!Itr`C@<QT[Wu]l)$FPFE`;%]S&Lln:]glXD'9(nSZj$T,;0rE.cL^;-)!2nFB((l,JFH1:1a=[sW6's?%!EMl5Qqn*q(5sFUO]m%a!/mZ-rPg0g5Aj')M;CTd[0?,RauGuYF`LJG">@-H[C[p7&d9j=S7SWVU/bIA'[m\'$'M/@0f;RU#bf3N%iBtf!dB1A7/`]/1W)i\WX`aeVW.sgO0gduCne_s6!Mbqe9(F2QB@,Olac6Q*#QuOJZ5bFsjti%M@=nqJ#?=)q0/,<I#U0U2DPL$&%Zudr+X>cj:j?h3Z^oj-"RHJA*G)[=`bh=?c=R%4VWBjL<bQY^3&fLrU^a0pM[[TF%W:"@aoGr&]:j3*mjXoC&Yn0d."Au*&l6a>f%BLRam1Vu8I"iZ&X^^Q/j;\U0JaC`Y+AGJhp,1abr:UT=bUd9:H/Yl7E4ZQDDbC6iC+saXR#>'ukl^1uIFEH-?J;L(mZ$mP"O_o^,%;!3T4&]K#&/LYDr-53`f"`0Y\4f/*fOrflLdfeh6H++)<U)al\9pQJZW"oLR@1^Kg14`1Y76[=`6ffl>U;[CLn7#&$+G9I"=HQ(4%P3R`%Rk1%XH,_/'<!I,i\32\\<qP&.UdDA\P9S6,2lrRE'`*A_#Bo@4V1UitpEQ+4[bTRZ[#@h9=@Y3XJI_-8fT*b0Jt=1-_?^jL%Br8++SI-L'JgOHPZ],,2A54OY1SMfg\BqNC/QTCQP`0pN2Ma-MX6'EG@=tC[[:R=YXk$La4cbHVXI_ma%k2HsOB@@`eg;J=l4=!4%a=f@QF=Cn&-@QZ6`eY((^sOK)TaTs+<7V=48<HW/lB@pQCY>MG(l2krBgEBUUAtA(8nP7eWouLj;L;dcWqs7ug,k*?@B>A*?U1OM%GjIs1#T=26P!Fl;"$D%G\C7EELpRF$:7e5P1GW',#q"MtH`gT?6s>GgV?$ni+Ije,H?Lna.+6h8VXao,'@iItdUJiV>&9FPZ:on4%=e#B.=:SErF/*1Ral!4<a__/$35<*s^TfWh'2^=1L_7Y#*Q.f+q&lIAEgJ[E!"7E,.Z,>R8/+Dn6b:>\9nQJ;,irS0'[&$id!;nt%(.gS:R>=U)-BE_U1:.l5YFto=FFjKN<loBhKqZ@A6h4M=B:>I>7!g=M0]9)r'>s<+(n%W[<u:<%'TRV7#^2(Qg,j+?g-SAO/Z&IU%kZ)RiP=(:]&c`dX;;8koR_W;U6j)45J@%;CboUQf/KDj7Su`G,eNjjIBQ3m3`Bs[G1AK)pCQWIQ9J-\l(sQP_D4n]M/i+3^8Dt/^%c9MFB/u8(=!a+@o;.l0q8!\OD;LmoYd,r]pUJ26*-[+ONNYUe>3\;^.Y6.YLXMZr6DBLb3@M>l67!V1IEG;jWPr1tj.jKcgb?$6h%ljYJHRPQ2MZj`C4nQ6_BTQ$@*)Gk)\_&PiF0GKlE'C#rlP6#IXfQb6]1-EW)"6"8pPZNV`b)rT?;(pn5"uP+$VhIsp/(TE`N*SQn%!8.LGP"gB6CBl+g&:TMVVSN@/a"c#'cME&bRDhW"8_5:i&7NS?Q5Ik=>^'kW;RBj19K'0*!Leg51q;g$)Sk\Xo<%=,krEW9a>qUA%Z^'A_5Wsf)Tn\Z?Sg*#O>1?L8)U02>Xf1rg!Hr#Z@<1M`"MD^nY3:12oUK%8M.`,k6speUhfTT,(,RZ)dMr]O-+(\'8W5J/)MD_m%Z23T',QFts$+13W)e5+G-,:Bb'&-SS0"8]Xn]'M;d+3,L*C"28)OVY8(i_(dd@A%-ORZj2YFko/`&Ru2n;l)C2l6Dq,T.FjN3Z.[%5b+maUGtD7Cp40m$Sfj[Q+dM5%%D5g'7KtD_7h^XWCsTI"^qPWn-9;=cqbC./-V..DY6?EK35I9*NbOA-C0&a3;EoQ>5Ql/hC+J*%`-#ar(>0G?A_@M]^X2<WN1WY[nT8\Y#`^Yl[0H^l@nIt>2'FPl1i`g!g:h#1Q[iI;6E`,WnJ_p2G!4r,"?7eBY)2eda]Vjo1?!(K%UeO2`!2P^S*#)0<9`rlWPUhFL7*$^uErmT!cj9%nO+J+H#YpIi&cGEKNQ\W"Y,:-5n/SaU6]=m?`QoOQj>0$G8Re:]+fn5Yfrtq6%+NiOI'C+^,<aSOg$57Rlh"6OS2&8WifEA"EFpW;.PP0l&Gb+s?koZf?;@>sX3_dts-,/A,Rg,*\Q?&.=_E"ENa:(Q5l=bms8A?Ci%5!tNHLLs/ORlh-`oMBrAoH5n\/Qdeo)Ec:(A#Dtq@.D%PKo.SBbUaa/%L$lUQhDDg/dGJ<+&OV@EZV$U^f3R-Z94Troa@aUPC1_e%h%rr.[*o;s4j:IGI7K]c"]^mF0jK82,\Fo&oWT;b1BV_Ib^.8=iL?"or53)gBe:\Bo:g6M+`#Xd9f//j[*cHgbo+Y'G+d4(j;tE.%OHATAr""f?3rs[TNhH0]YC/1WMB<!;Bb)uQ6X*hoC5R\4=N(Ua]]g;#P=K0dUUb!-binC3/C>,=cj`Z?F>Ohm,mo'hQIodq)qMCW%c2a'T^q/:]'l'a9b*/kCcYB.+lbb02@-MBl`R'k^11XUUV&uDbVOI*#+6s(%qH?iG68][5V8f@Dh8GFX>u%=`mJ2KAHCd14HkcsI%I#YITA&gDp]i$q.E:d:eRlCudC&$:gkf]lhfsQf%l_jlW"7[Frp:;`Y;(u*4+uWoF#KJ7Kc5+Zm6rq@Z-Jrs`T).@h,LTHm?k*D+%i(&VHB_0#IkbVc/[X?GE#&scpT[\l8.D2FkiFsb^MFOOdmO?Us5:fr*9'ObPK6$_q`cR3$Pte>EJgLlA'(ikNY[W2ZE5j;]TSOA,%Md0)KE6M]rO;sHYSH@)`g4U+PLNe,QO+fn,r;GpYN"u6AM`[Ij"@#Jod]>#]S2B*=M0e:L2=`!A!p>Lg1P0S=Bp4@JTI\>C^+gOP%<FU%!m+Oa%Q[koiq(B;`g8#=$;0([;L%gRq8QiEQ=:*6h"+c/DjadShW`62X\7b)C;=]_l;jX,uo>E8;DsSi^0H)Xl*$3@W8e>*,%)IrS<mhJgeB2N\)EYc%$$lKlEp2#>2Qr(b3MH&;NXSb7]AHXSAk0T*H89@st$oOb#kBSB_(*K:$4#G@G7j/Q9-`0u])gFQDneGa/%R'l^QqE\BnKk9p[7>ssFQls$t5um4<BM];o;%A#U[J4T-hUmKF_$a`E;\1[l0PQ;:&Hr9LUqglC5S<m*m00N,JQ>=gTOnO21a\kH%P"HCJ6?8t(SNXLUPGC^knI\\=j9u)Za$cA2M[#/FLm/q?,:6mIm(jTD^2*:q9kil&lCZ-]a/\s7n]pmRjU?ZWY_Wbn;m?Pe6gXA<%KegU[7&20[8SK>g2;"6Q37Y<&@$`2UFbD+1WqhGC4&,2GFU@o8'/)T<5Hp.?Q5M6TTS"q-gVd8Lb*G2+=qoNeOK]dA0a8%uCa^@J%*2t*t**oYrd.e6@&t9;Mqe?7fF.=%MTE-egJno31?G;:dS<Cl74+[5/3@/gR-Ye2j1"QSn)IS*AR$UDQNm%31k#na]`VAk((Q,X-%5]R+7f,>>'%\P'a7<16-1hM+Ja'qJPQ'2dTSQ76`G2e$cecm`!P9UJ!.ge-&^Jffu*`*',-EjA1R<d_>X<jq2>(`dXq(*G6*iSkW%H7si`6*nE_W_0Q^)#Sas6sDn*E!;U99IIhhC+!=?,e^-ndA.Q`VWJ6G^>s)3.+abGAm);9\.tZ_I\[Rj%d]X8P=.Q%)L#(]dBV(T%d9EDq#EnY!F;B%J!`8jt7uMcAS.TcC#5a?*i#!E1GAG!WKF.DZ#kQU?8TT_1-72XoJ[8agDeed7+/\7G)sFYgQjR>n%A=\4H23VD%%-D^?49\uq3_H@JjB$Gn&_)GNie+!Me2`s;N<aG[DQ8>dco'?>BVZ!jA5aHoQ[rqn"C,H@;"><&m@(1-2)kh[:YR3J^a@^m,^<_u%:#?#lfXiEBJ9KV]eq2'^8i'?7%C6=W-c'B0@phEJ]T@q4Rn,p_f@:Wq[+3%uF\&*,4GM1<plM3!FTG^S_fXAC1D)LY7N-Er&no$,%DabRH-l?/`!BBT@St]3$Fl4Ru&EnOCdZ:A#W]@Oj6stms0c`VE@tAQ7#"_,cRoo&`2[G1iQr]CNmQlF69Mo?3CS;1Wj!.SAUL,XN%@2J+nR$8"hBFF=DCL!3@;@U8aS]3Ce<6pp@E#sgG`-uA(NhbZ)=)0+cK\CD]bYjUm)Y1a9/#/WD=P="JGL3_]5!lIS>TbTdc/T"i%@>"o@,G$LR;IC4fb)Xr%[KjE>;U3JE:?W-*QMSpAO_+tA!d(RPTjgJ3jVP9,3Z!Q1=C;u(e[m'd*5^5pXR^4K3I'.PaP-=J[W%?5%KP+PV@g0F`L\[-rYJm=NDfnt#(D2E4$8MEM0'N^a9Jpi`-O,.LZ<>u19V*-/VNu35)oiD12:P5,l)c:%>J-\\N/fL^9VS7h5dA@A%PtbRh@(aRdZQX)o#"h6387IsReaZLc9#ON^,2n\."uHIp>.GM-M-_eMWFNp^@N&?0&,&L`(T@/J+\as\QfG>c5Anhe.!W'SM_30J%6;%H&Ii,,pT!qnUXJSLj*Ujsk?MP5&Ru3;WlfjZDOh0U)72_?P[o@BK.3sj/=M'b%d$+V>_32;._I\]Dq>_OHEJJK`1:l-3<L^g"%\?+2Nq^A^f_WMGN=6QU9OM38gQ!,)ZbtmSA$S<$,ii++8>$@F)fT(*0Q<jqh5?<TW'LAfh/QqaQFsMkQT"D"VL6`V==pI/D(`-\8%Sq.HKl/3;G7"V["JrN'l6G<68+Ct_=Q?^kY,(D7"KdrM,,s)aX-@goa^h6Pp(;Hb_2^q_J?GfV.04EO'D*bZY$95W:&PC1^1)pJX%>&$KmD.Fh6WeV4E*7Zrt)`B;f!<M/M-o#5qIC(^">gWbA\^4C57m3LrRRu[6fL7A./V21E.3%9K[O<B+e3am1L<<]"5_WD7QE\G&%3h.)pXQJMrNmSMWF\#nL>&0*hHG[Kcbptk+!);#KL[[!U$O\,]T<eM"6-mrK.0kH7`6I8S:V:g:d#m/;lC=LR(MembpRK*p4>Z"7%mM-Rt!H>cAr"8K$Td*I'e1imo&2Jq.:pb3K(UPcm,71#u(>p-qZigsA.EV6*Y`T*o?LDg'?WYiH?nBdj#b/\IHNn]tZ.?'gQ:9j_%:kl%d_[%AYQ:D#65LLFFJ]/<H;1_m-)8(Z'()6=2E/sUk&rS=_0<]@DWs"QNXb.uQ(5`fZH4L2Nq5HmfJS'eFA/_t-i%'7j8IQD?%22$jCqB_5t!fsa4=jTIGEla#%4O71>L@iTDR;tsF8EbM1.U2JrjI?<QLLO*d34ji?"ec]Wj"0ER$UV]G!u*l#Mm4P/cbXal;RS,D%!!J<U+Y8q=+[VCd_"DDe8pMP"kljR#@3nCR4ic#nEP`KA&`rb7^C-QDD]L#-fc]<)4b>=e>=N@X5jBpE>0$_AFOG]AJp`Ti"ei!)%N8SL4*=8l`;!XtsP0FMFI&?LtJi10EJ_/+.ZtuQU=saT2*C-6pV'8%@Elsh%5nRUKCa:q=N(#0^J6f+?O!$Cgk+WtT.Uf7g#n@(-%QE8BKGfV#WqgRa9BD<SGE/_8k5#`N%7@Os&8q"X&0A+-Fd:e@R^k*<U&/ia3<=$*Vpkdkk&Slg8^aL,A"g#k7q&OV%!]b6gHF9'6%%#4M^!KODIQ3L<u`n;E]l:ZnqULbhdVUk"C$M]XHZlm"=ZkDna+k.!)+j8@hqVU=$6GHaZ$oB6f1(]0?H@qcEW?!8W`IKcgr>0.`%SYj=^XnlNP3#FuecS@;@g@/ciST4a:5[NBK(rHt&&Zu+c2MA:oqHN#.QX=/k[0=2ZMM6pBE886nCfCj%n>_nlgpdVGWG><O"[2*7%%#OK7=`go7BYj7%>*okS!#&ZMX,=e1R-VQ.,HWK:12%4PGe[@Z2lMI3;R;tHJOO81oaKUu)L_-I*1KZU2MaQWmSX&N36gN)09f;O%=XI3#77r0":Mm78o/Uq?k&h"rPu8?5<AL7T3NVX:Y5nXU<RTK-$hqqH%R`gC%<i+^,5U`l5d>S-'RF$hpMmr^Q@lrh;9aiM'[<LD%=?j7C-)I7n`P<`P/O8M5C?eu[IBIK<r\JfE=78Qp.g<9^MLK6T"d/R,TO%^j!H1c<Zm;]\OMY+V4GnM=7$WG4<14f'#fcJ_kd.Dr%hr#&2BX"!dG'27sPO>7M`m^#fG,dsQ;eb-K\m%Ld'PVO-35G!/1CC6aI";HVHW_3L<,5]:IgCE:%QpL@JRI`m@rO-CNhD(QMb`5]%;b%?9*[#Cd_5f`V=2BH`KQ_&.('4kH`&Rcs+tIn7+Y8)c]+<5%f``dSF6goWJd(`UP,ikrTB@\4&"#RQ":@K<a(eQXbQfIQ/+ir9%,$[$9P;?le-(,SuYL3n6dbE'!5VFE_M^\_?",!To2%dhX?`<SsP9jG?&?TS_(ultl\e/_H&bn=0JJbsn-KpPiW=QjITo_PDC<h$'%,%df/[a8+k"A.^$GT7k+#3KA[cdU\J^fP(NGQ2%i"*9U&k(SC_"hp9:AjS!E&'T0KCiN<2$ij_b!6Q3'O<4Q.,1\1c,P:Y\7jO`/%K)+c[LSL=YW.mq]%`=c$)]d0S[UDD=@aI!(+i3XnZl6EW-JlOC%s_3+QRis6"mAc<>W&OQ[urKUTr/50XfK,$/@8C]USXNl[#'7p%Hg9?.&u5)UYCn.-'5c#Rnm#j#(9pprG*#<r<ENeKV;,WU(p%kS38gjgjI>IP!`gP([<.+;JZN>)679%$*'Yl-_4'V^V^nS14C[u4%!sfqMU%LS_+&CBW6a(hS7BEtkiJn^S<FB$T[!mJ^P0Nm$W!3#sE=C\0#[OB1"9T3>BNbd$&t6NGX;oid6s>=tg+%]G]VJA]X6R<,%d)tG/KsBM5_%pd*0QHjr6L,+$lbVU!GSM.;OmafR@T^<C(DbjmV+XZ:fkV'K;GJ8Xl*57Bn*p"0Uk^^!HG'r0/9I,0dTETiqME`Z%q[uFDPAT^-MT(^UARTt]i8\u_XBKJ<*5U94!aGI,$qRbQ39k'AO,W];>ZH4sf8-$$.QoJ>JI"O+iUnCl!"Z2\0PMeV<!=VU/[BJZ%!`ud!=H5`!Kaf#Ca/QV8$[-lM/`C#:OE?lWGqMs7IpINd3^'f4jc(tBlOqLjU*gcrWbce00Jm<G09Z^[jDl^G&H][SKZq5:=;)Uq%5Vm#&bI,2h"bSV`<RiqJn@_)`]"lp%?6F>Ll?n8e:G5YD%G^-S<2^Mm)fm%gpf&1sNQK;UJm:+BHK;$0_[fari.]u1]EDF6hq!A]%F<hD'E8`#/$1n=""(:tY"j7EMiA)(@`p:?`j]5nEU@+ZXA&1'</#*DM_MW.UVgb:^%\C+!LBcj2$psBR5E[SB>dbMRlE\hIXa'$B%[b.*j-dtJi&/n*t;9hqfYRF#3=(rS5>K\-?HEDF"Qs?MF8t`OO`kkj7A3QeQTBV6B<r,[;!l-%Zrg4kmCV#)BNoO0LM=l5u)D.9>%H1nZ4+N8)Sc8B?^G7fe"*BO/,-sXOhq9'7:7T0EG%U>R#'@S7]Y2EU&J9p<:9++5E2cfnCDYJJ!&bIIcDZS7d*D&cHdk,<6@(r88%jcgAW8[j</I7CXZ/W!%$]Q92SF`3K35'JZG9snY/;NpI!!otCspbli9X>W.P&m:@m,%AQXRA1'%aKHe-o"!oVGjZ_1<6eE:-?b_W%;4E0jXG?lQaBBBO""*AM-<&?';$aH!:`8eqC.XF>e"l52%e1)fn9eJCMaGLVUR).OJV<8IT&-R],,7h4%GI9+LQZQ5[3uk=BhC#U%VC>\eT&\qWFK'WCB5FK@<B3b]mTYYcOsu`?T-M5u;@O$]7*8c1<=YE\j_,fce,kRc94)@!C^N*FC,(,LFS6H0#%pD(!t,k`\CU`=%F;%rNW.4/IiD.D3d?N_eh2ORp5Gu-dM#YD-40FUa>G]dX%%YqU5A^Hf"^I3si))#')P_>^!PYCt[33(U]t"3e&U]pP:X:[%a!p>G%iE]t`S@>FqfljQuUE2Q_kVXZL[8&NP0Wpg2W#b0MCe&d+&03[6+$(aR?M,t_-?^Qg!]pYF0qqkSZ@TQTK`M\j?VH>@dZ<V(h.Ok7%aji!>L6"FPLq!_I8KL5e0SDJa2?YM(-<?SfW/;-U/>YOXVRXKYR(@2qC1'I6:aiQIB=d+OI3^CTS<-2_$=HQ[#6Rm406u[sXLQr3%_hd1e6`iOUR8P-;kiB<2:LsWc+:4r:4]=W,#MLA84jj3heo1WcgthBCVrR$--GT.A306d:P`>^6=7e1i"Y51`Q_8,l#\p?3O4[_5%)6/:<hJ3GIRhV5o@;u#gQq`,+,hq`NbCH8nf%i:/b2Y`[:3<,'Xpj!!iKf1$h]3ZqQk.7>,0bi)#7UXJ/g1*'l8gSpMmZY=-PcBI%jU4VKId_u$<KX0KkL\OL$o&Yo(Nn#-M4#'F&gJPX0R&o'-FgYa*2tK;h!2>$)G(6fY1YT7gIS`c'OXFg!o5eESNauQYkqsK7QPE5%%?X---4[OfMa"rei$T&j4F36T?UM6*a0G0tKk`K),7TRn#F\M#-,D6CEaONs!Q$P20KdRbP<naYB-b<"^,Q9_c_953@GNV&334na%//NI.ibhtu2>;KI@R81$KJ5MJ`o)$sD-P"3@`lNMfDhi*RBFWC*/&VeGej3t^eg>BQWpJhdq]"i)C^fo!F-[\7+#Rj-u?U2:j(t[%i.a:NnabK_a&/,3PA9YFG$p`0ML`DQfnSqARRS'tQ__aY52PNUUTDRbLo+:fqFT-kClUc*(3PYt<.gtE?o6>c>T\lDd+p$n.%m^o%dt9/l:A1SIGg`g&h!#lB=bb$'JMp=iYQo1SN2NuG47mBE/TdIkg8<\J';?"f>%hk""rEY`5lV%d9c@P.8Q4o%&M"N]2l2Nsn25J6%h5"%THL#a^Q4V8k5alT.s4>lQo\,9Lf3dJ9n2:I`+R5(;MB\6aa-co:>Td0[PL[Hf)a+Z&ZQ!dXK),/g3N#&cn%6ZX$QeUt8S"f&%<NJ4bodilk+P+$U_VdC^j]Ys0(OfuO:1U&$nV9tt^Wf[7aL'qGF4hpobrFr8KY0;J&_uiYJeVV]>L6ns(I2&L6(eH]2VgQil#)3P%_@n1`YgP^,#mB9#bl#,_"7Rm!@1KhmgtkZI,YTaC6W2pHOO>X&-B1$-,G^>Ni3'[5G%"DsRr\%0Eab*fIKXUQ#AR,g@E5$F6KF3n%G>O+2DAcn,,Y4B\-NJYMTLf-Ol<^&KP5ldPO&og/eE&88LtO!n(g:/t@_hJnP_%b/F^OfS*82,E=a":/$j";[5m]6'J4$m*8-_VE%^ft@@r/FgO#7-SPAX?cGjlniA';&me+5pm:#m&MNPC^`>Aej@r"JKLZCMFE!_u<O^32@7uV"@d^OJa/#r[;6>oHCc""QcTTW!<DC%6hNPO/blE/PE,JS7)K+G@DlF\@R9GiB7?e4*@Ll+B5o:[o+"#c6c8VNQGSMO[G4s]_?MDAZn%GMd&N*LnQ4^q+5b2"T`p_Tje/4'%0t1JTFiOtDQDf?jFl^rjG^9?W<`6,+[lZ/n#gs$UNbhTmME#SR"pBP%DX_EO-<.8Y(sgYEY`oJCIY3aQ!H#=T,F=4AI=.`1a)JIQ%?Ne!XC;$![$j2n\H"ILr[t[_(f;`Wr%/9E/af&CYn-_";@N^I$i-G#rE5%iu[oTuaQUQBEKtDU:<&lELT-0hPWF,N7%tgFMW"B<a%.]W0(fHfP#%RH:7(CO8%1ZF!91YA?kemOPASkCkRLTK,l<a.ME)*5W`1?4)$/FYlnZ=sPaGf]TtAjtbrd?up,cWH5sAdp)3X4!BG%\RaD`B*KtE=T^jLK;4[\jBFLibu9TUIE]nH8midRcMH42Vf7C$CGs+G=q!]S1?SV?k5&SHU1Y4mE*UCZ`*on-:_@s[=Ro5,IpGo(%/*Vh(>&YS?9irqk$uTZ(-DUd4)@1XK'Q)\`-t?M(H?Llu+bQe#H*]h4)I"<pC4(ZdZ9T8J;U`a\MoV<qUVLp%_BJ"=53>E8Nk6+Q%d/uZfJ[4D9WkG65H9Oer]X8J5"Hmc+Q41BDW/*33_4`%J:b!*`?p"#JX?L1okof;m!1(Nm.;J(cj5YcfIPC$ob?$h\A"9bGEa^_q%U.LgmdSMjDn*LakXN?):dI;(+V)"$p#TNAgY^&&Fb\Yjl%VtUO%oCsY2REG^Noe=Q<#^qj=q6gWia#usE.@>`TM8Lmk`&!<r$7DN%`YO%m*LHOK/oSBu#g:>/RMtoHc":l-!mS^jCAb(e6<.Zoke%%0O\07QkA)ECkj_L8#?DOg+&kn-S27"iOm0l`npfL?3@d5YSc2Bl%5h.^*e,CF?*f4tL#5un[Jk_ghV#qpE5[9=(hEcOZ;EC&b=7c<#Y+Lle+]c;b*Gc"r`u%:LrPE_,UlhBFee&N4Q!G$>,&WBK7**.L%"K\=JXhtLK>CZ(]2m](ErEoQrj1"LWp?SXF^OH.Pn_;r.rqV/sQTtH@jnm4cr:naL^3oeRqYSmZIJN^#O2$/ArU\4uf:P;-j3'Ym%=8g>8c\gJEbK0$Xm\HdK@_X8O5-UE20eHTae58LOfFm[5VX[,GOHiL-&>I0VIr#J/q>0XZpY7*RqktuuQo'gHGB-#:ZF@n#3L3-\%1=q_FhE4)86\n43eX]9S.ocYsn!T/e!]ZU3W6)r:h.kuD0lk&B@%&GQ'I>R=#3AeP$dZ3@lS_aBjkC]80*36jHid!j@E7;_^phmq%fj-L_L-dX7)g:SJ4F7@lnB:XeE%IB$YVCp](&4]:UC5*/NMubeL*t8)E=_-2<lPMLkt#tBVVLb4<?RdP_iK8Y4,Q-PB4WL]s"sce%k9))LXSMQL;FUju:,8gs=@JA,RNX]9bT3\''4gsi.Pgi,5q0t;0X>MfAuNhlp@-\/(uYB*e!4[iEFX`XL.u=-A_4BA%\:Y(aiB9n%OMe4UNsaN&CQcu?_!O::<sT26WUi"6+(uSr5Z(X6nYUgbMlqu7M)C42].q6[Dp@gMGC@r)Uo2m)'dGcVPO[IHJKtTr4UYo%n*2`u%%unJM-Fhfgii'QYG@NPVnVP*l&&i)+c#6V*7e]bcIXK9[">$BfloZfE!+^!T^o!&MOqQ0)5"t3>o^Nih.40o@EQ0%?aj=N?AgmAU%fWkR>Ia@Z\",SJ97t1o"EB6"K!BDnn<U"hF0uafDF<nb`Nd.pND!FIMZXGde)rP-oVcoY!.D[[NF.UJ4ONsP>.,Vq5F!%;umYJL;%4F)U?G>VhA_6)%d3U&?),K2Mc\a8:Cq`+Q65Z[@7Bn+!loZc.#?Od-?-AeO*Y*P6VpB]_/"dp:sQcD)R+,KaSm(q=fR`adt/ZmG2%__5Y6T=.G*#*kS:7.Sdh!5^B"aSg/O@,gl#k02inh3Y<_kYo:<ZA4L_=c:M>$m,_=iT#IDW?>n-12^B`;"@=-e(!phjlaa/+,D:-%Jb#")08qW@O%ChC,i,ufVBton@/q00%OgAX>Hpe4Nut\Z);3[a^/M;E665b[-PW2V\k\2GBX^``)+"f]6c]R:(`*0NniVRV\slRZ%#7)aH<ip?+)3c0q-r@>Y!l40V]Y+CZ71L`@aH(B5gZ+FGh\=MV*28io;5GV6>_e[LX)WD;-sWf#6U"3%>/19!C`3NmkIM_-k;D>t%7+u0[gWC@?:WaA'r5PGmiNuTJ=3.+I2_&4GEWCqcfKD`oXuSmg]j(I(_U@VIXq`>5`=V)l_2@X,NR.Z>qVLkD0)SNRBq(JTYgBFR%Ff3(2MM5K*Xqh_mF^8,KHk9]6lbZO:EA/!?CKf+g>XONuhO-g&0cm(G:k05c:)FHF<RE\$ZF:@*k8+bjX7I20:!A&7?eDMI?.Hqp%@^6t[L`CLHI,a^h`a7YkOL0hF/;Ii6+a-=&Om^<-&4$cdVGQM7pE;r6[rO>pOcf<pS-#=D=%#.]QH&#CDG#3ZJJ1@A#n.Dli&M4_%/:kca_5RYqFaXIY*E)<;M-;mB6%L$M\#O2n)"3(rO4&sqici1k3;ntagrEKR+L2hU8phD#=-i'jQU4HQK2"7)oLfW9+!De;>$6q#%!$a<a"1mFUfAN8n0t/a;@>bM02<5Xer0%F)$:6GWd'-]@Tn7q[Opo>D5JG[cNjXa^#7&tMV:TpFc&]:uDDT.7'bFSNZ3r%s+R\HE%TNE7^okl3(0h)Zd-,LU!&`0?7)$l^<Jcr[7'6A$-]3hEtSBDUbUnE<j.`Ha$Qq;mc*_7=;F2WNMP#cFlOCfqZNaUU3JU=eVPSg_1%-M^OJ@>gGKaC-2b"<b$Xl_46l!^Eh&nM.Pb2^YUd_NNnqg[[:*0<jK!H]6_g$@tLo\i<ABEIp5lHaC^*J`fLolY6%6dD#9fod@]/%)EO^[H1_b2K\tksZl,AR?i:h^l8t00+,I$_)34CSWMO'8TQ"(_4PA[JZ$9;:Cot1L*2BEfs/K9l9HmNh)##p$6som0a6GaLX$7ce%Ud#SnMNp;(XdlF&;lT,+>(+mJ6W+pJVbDrd01sW_(*E4^BF5Jis1#pE:+[,5%sBhKg$:."&hQ/]!^bJh6fCl3+:E4b@]/B`U:Yil%=B0Zp!^gj^*-+sG&<]tCQSQ;W('[Ok!,M-:Q-3lM?"5qtfrYbjjopT\jAtUuJfC^/]atOF,:r.j/^1$Q:aOeTkD0F*c+5u:=:Ufi%6U8oGoX+77@gk+.l7<%acX_hYg6!jTlqen!$f?&^kA%1m/1.ckLl",!=o33o,<LLd'k@Fuj!=eq2D[i]H/^6>!d=f-@c;*',Q5JW%+>_oq\_rM/nq+c_1OGblJGTGCW\m.Ggkq,E`q/,_LoS/.S^,4)OkUfU^15nZd(+[+R)c'KdZ+DH:_(A?W8pJ'_?N7b+*9&J'C;V,%?laf7%AVHYgGBtG>SA,'OBPTm\$KR0g3@j_;@/)/!thJYRQN!@_c-?AEm$Z/%1fM-gDr9WV3^<^UNUJ;G>(e4B3e?JegN$Y`!dJ'%3Uj3t;OO`7/soIIFoT9:Ass9u]knZlCS?1]_QJ!57^9$L)lk'Ac0oCAjHs@H]#g8@!bQ4aAMTBe-?GK[ORQ5]S-t`)fH<eI<Te0)%3P?IcO=k]uZ60p*>fD7S*$@.DZ*C;q=%O9lgPf7j>=F-iWQu1V'md^[c7F)K)==0-MX`-fqSO7$^+7i>rO5\\8(5:\Wbqs-9f5jl%US\795H^@clf[sTWr$2iQTD,65XKTh#Z^VMaQ/d/'TP-+fI,d/T^m*NeZ>h+cSH:ulg2"G;1%?Ii>?.ShI%'cND"#)>Vf!CF>YQE%gA)G%',C&']hJcH!OW.D!L[;[G=p[3A(TNHV!\^\\f6,2;3(E<_<eMQ7LP(Q>+]p2KUAW+JR(A+!SUq\W)8_5c2i,[3Mf-B\ljis%[SY0Z!4-Z>Fo,XFl4,'R2/3_Y'XK$?b8k4<&@A-[Vc;J)MQ+0m>Z5c0$?1mrBht/r-;&pBak\55d+Z@kN,^hHNju8aC)/>>Kpk/o%D1nU=:Nj!87?"guSpmOIe&Mj7]M/>-nW49biBHB1(?$\Z_q45Q9[.j_3%MA@O7V4ZR!X+Ai&fsOV_(GS:3(=(4cjQ4<8Yl.*.F_/%k#J-"Z>1E,6U&0&]haJ=3RSQPe7p7i)QTfb*4Z+76Y`6o2Fu!9.Ae]HiC$=EENGft)grWF9*EMmqDKSLPIRCG^6JE.43dti<!kaH%E5_B<#?+"UcOj(q*FIrjd0DgbEls[`WXkSD.'C/fJ2eS9c/=,=BB"3]f>2XXG7f%pg6`H#$"J<])hA]CM;2PdmL^@<@M-F3Zo(iK%+"VZ*P_;hH.Z$Dk*c#$]NpKD5!/l[d3<nCg;"tc)MQ$;*Bh/[FcP[Y\;23pq6p8/r(Yik&\%g_?957frf7)u=@Ju#9AZ?2OntU^B%9c%#AEB0#-*'<s<%cm.5O!7&c\C,rkO.`j\KTiH$!G'!--eBQ.6Vh+$3jAXfPb>@bNrj=&<+[CKktoTtAE`]n@'bHaK;jdb@`F-F%[2/,AgN:h\XFuJ[,-IA*nOf:hO=Z9!S;"%GLnLKo&5&]1@9Tsjc4!$-&hY2F5hRpsJ!$fX\=.4lJab,S5TNL(-'E4X*WKL`+&'8P%Yo]%1EF,oVOrRu/:bTF<l<8?ON@@@4O6R"O?!Bh5eA?/8.uWGf$/2pOo$(?:IQ;Y,g<TTCi55E@((LJhok]Yq9iiJg(;5Xok"#b/%`m,4A`4D3B088OD5*5(:E*AP5jCD9[19mB%3g\\!a"\ctP?qe'P,9`@53DO'NX<<=?u5g(8PZ`5elfYQb#ZO<<OGkn<a.d@#+SP=%`V;@Y0M&^mSd!pm3ZDAI&Gk.F%q.4M0'e)[_\BXN94NQuouV#[$%G7L.#ng]+!Ot!do&']FpBj>,tP2ZVa+,+;^nXGG_\Tf%N`)q%q+rl_#A<Kr61AcM)FU:`FkcAY<N5'iTl_9*'n#&C=l0q<>$>IRTI.:E*605.P1Ht0q5H+=PPL.2&Al6kgM)9[&dL`!\?'9"-.f"W%)XYO?,Vui(ZuIN&HVnYM[DA8!!H3FJTJ8Rt^.013?B0jE?q*O'qm[*IC%aT'%qJ*MqFs(9=p/9qVt]&t4ng!!Is'&oVA-,%@;A[P%^o%mP>aRIE3!Etm"^#dL?5'<<Ugq&kUi/o6KI<R!+tsW:,(P=4Gh121&0A*7UFW!Ha1@&C!:`dYrG\/*[S;qo3Q+m3A]bN@FZX`4%HIA-9i4*C%0HaeS#V+=-%Un:?)]TaTYgQmGZ""rfkX07c'-sF]o`-\(-_u[*aq8gMj9;9\oeH">%Y%\,gT"k/[mY&Xi\("28^LO<%@hf!]G<A.6CRU]P!!%"PNo=Kqq@*]Z;ARu/W#AM8nc<RugcXhYjR,$NJ]'r>9%Xh#[VcBZB_e,A`"%q#^QR:\i=`m+!jS(?:H)h9%K<n7X*_8BpqE#h_Q!4]\Y0^Tcf9Y2/*2+rj\JZD=,%e3A3?Wh^@m%YXSgjtB+)RknImT_[k<#>?Q(<Z#Qc_/cA0blI$4'-R[?=*T%J&QLj+uVJro^+)60t%"6:s3@G9%tZmVctJ@JXC.lJY2fBR$.76G(Db+&Uqg3l<9dj^.qM4OStl*DSKNl'lWGUW5E@nb$5cQl3O*&%2H5\%(6[Po#qs\QV/mgf\jS(F#9/"u)U7+P(sJ^)MQ[=akI<"^pRn<h\oT8XgB[,+6;L,=@8Q5`]+;sQLqFn2Bso!l!@NY2m"*k#%X9S\(8*gTHPGWTTWNBfPGPglQ'(=:+O%gSr^;d?IaX)LaY54)jZ\NO!AD?>?)`C,,e$K;Zk%!fr!VuWM&n2*:`h2X3>_p^boK.'Y%p_![cmk.r*/J;FVZ)VH8,G<oAYb:jMLG"/;jsjC][Ba:K+Q/bXPRZ_nq(9f(=ceC;33s8'_!\9cX8(N'%Y72m!Kfc8h]nj5U2;An%$&9]T;SR_hBYXgn5Qk-_ao].#7.U/K5!UfdOK&`[nPJ9O$LB21U$S8R$3io0$6J(."=f,Sr[rUT0L(-m"1)Z!*gmRR3#]`blZ/4E%#on3+^bY^*.Fr^>DW`io9$$\U35n2*B7n?$TWh"n`UaAo-p^O+!MS<MZKq!mpQ7N<ieV!!8pLPPR2J=DCQ='1P#nF9"+5n.M8!MZ%7n#V_8FMXgeZRMk-;0qe3gj67#hufC/;p?!ZRhbE$>=$%Da2;_StMg(s*u5ST\b996`RU,;<5gMiTq[$A;>&@AU>&:CZ7.\o-?Di%jCP:+7sIm=l)WpkeN/VK4S"qHo[2X=-P1`S5jlXUcU&_;]_DKDM%@PL:\*AFPK.WgBk5rU81`q7a#3(kIVu<n_3/'TRMu.[<O81p%hlcDmSTiH9Te8-LKsU&L/u8l%J.Jf0>VnaN(64NK4.%FSqusXl-\>>S^_l]iH*7O:5eN?Y=Wrl%HU.#*UE]f.i.T8p5^Mc'a^GEi%_blH$aA8j\R]Q4HIRt`ZakeE@+m&JM/E/)rkC.W7bVj[p!N^E%KGkeD:?nbq1!&FO^QIqCTt]9r^3fn?:WHiAr8m+ra1m-'[Ogn(%^]2W@^O6$aD]aK-mIRf2^\mWlIm1Vpr:8t8pQ+2rs*jpmb:ha:s7-'R\'H^Wr:TCU!kEd>QbS%MkPt>OGQ.p']CHR~>%AI9_PrivateDataEnd